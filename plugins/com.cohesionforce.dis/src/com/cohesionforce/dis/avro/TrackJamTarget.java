/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cohesionforce.dis.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TrackJamTarget extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TrackJamTarget\",\"namespace\":\"com.cohesionforce.dis.avro\",\"fields\":[{\"name\":\"trackJam\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EntityID\",\"fields\":[{\"name\":\"site\",\"type\":\"int\"},{\"name\":\"application\",\"type\":\"int\"},{\"name\":\"entity\",\"type\":\"int\"}]}]},{\"name\":\"emitterID\",\"type\":\"int\"},{\"name\":\"beamID\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.cohesionforce.dis.avro.EntityID trackJam;
  @Deprecated public int emitterID;
  @Deprecated public int beamID;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TrackJamTarget() {}

  /**
   * All-args constructor.
   */
  public TrackJamTarget(com.cohesionforce.dis.avro.EntityID trackJam, java.lang.Integer emitterID, java.lang.Integer beamID) {
    this.trackJam = trackJam;
    this.emitterID = emitterID;
    this.beamID = beamID;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return trackJam;
    case 1: return emitterID;
    case 2: return beamID;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: trackJam = (com.cohesionforce.dis.avro.EntityID)value$; break;
    case 1: emitterID = (java.lang.Integer)value$; break;
    case 2: beamID = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'trackJam' field.
   */
  public com.cohesionforce.dis.avro.EntityID getTrackJam() {
    return trackJam;
  }

  /**
   * Sets the value of the 'trackJam' field.
   * @param value the value to set.
   */
  public void setTrackJam(com.cohesionforce.dis.avro.EntityID value) {
    this.trackJam = value;
  }

  /**
   * Gets the value of the 'emitterID' field.
   */
  public java.lang.Integer getEmitterID() {
    return emitterID;
  }

  /**
   * Sets the value of the 'emitterID' field.
   * @param value the value to set.
   */
  public void setEmitterID(java.lang.Integer value) {
    this.emitterID = value;
  }

  /**
   * Gets the value of the 'beamID' field.
   */
  public java.lang.Integer getBeamID() {
    return beamID;
  }

  /**
   * Sets the value of the 'beamID' field.
   * @param value the value to set.
   */
  public void setBeamID(java.lang.Integer value) {
    this.beamID = value;
  }

  /** Creates a new TrackJamTarget RecordBuilder */
  public static com.cohesionforce.dis.avro.TrackJamTarget.Builder newBuilder() {
    return new com.cohesionforce.dis.avro.TrackJamTarget.Builder();
  }
  
  /** Creates a new TrackJamTarget RecordBuilder by copying an existing Builder */
  public static com.cohesionforce.dis.avro.TrackJamTarget.Builder newBuilder(com.cohesionforce.dis.avro.TrackJamTarget.Builder other) {
    return new com.cohesionforce.dis.avro.TrackJamTarget.Builder(other);
  }
  
  /** Creates a new TrackJamTarget RecordBuilder by copying an existing TrackJamTarget instance */
  public static com.cohesionforce.dis.avro.TrackJamTarget.Builder newBuilder(com.cohesionforce.dis.avro.TrackJamTarget other) {
    return new com.cohesionforce.dis.avro.TrackJamTarget.Builder(other);
  }
  
  /**
   * RecordBuilder for TrackJamTarget instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TrackJamTarget>
    implements org.apache.avro.data.RecordBuilder<TrackJamTarget> {

    private com.cohesionforce.dis.avro.EntityID trackJam;
    private int emitterID;
    private int beamID;

    /** Creates a new Builder */
    private Builder() {
      super(com.cohesionforce.dis.avro.TrackJamTarget.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cohesionforce.dis.avro.TrackJamTarget.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.trackJam)) {
        this.trackJam = data().deepCopy(fields()[0].schema(), other.trackJam);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.emitterID)) {
        this.emitterID = data().deepCopy(fields()[1].schema(), other.emitterID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.beamID)) {
        this.beamID = data().deepCopy(fields()[2].schema(), other.beamID);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TrackJamTarget instance */
    private Builder(com.cohesionforce.dis.avro.TrackJamTarget other) {
            super(com.cohesionforce.dis.avro.TrackJamTarget.SCHEMA$);
      if (isValidValue(fields()[0], other.trackJam)) {
        this.trackJam = data().deepCopy(fields()[0].schema(), other.trackJam);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.emitterID)) {
        this.emitterID = data().deepCopy(fields()[1].schema(), other.emitterID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.beamID)) {
        this.beamID = data().deepCopy(fields()[2].schema(), other.beamID);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'trackJam' field */
    public com.cohesionforce.dis.avro.EntityID getTrackJam() {
      return trackJam;
    }
    
    /** Sets the value of the 'trackJam' field */
    public com.cohesionforce.dis.avro.TrackJamTarget.Builder setTrackJam(com.cohesionforce.dis.avro.EntityID value) {
      validate(fields()[0], value);
      this.trackJam = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'trackJam' field has been set */
    public boolean hasTrackJam() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'trackJam' field */
    public com.cohesionforce.dis.avro.TrackJamTarget.Builder clearTrackJam() {
      trackJam = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'emitterID' field */
    public java.lang.Integer getEmitterID() {
      return emitterID;
    }
    
    /** Sets the value of the 'emitterID' field */
    public com.cohesionforce.dis.avro.TrackJamTarget.Builder setEmitterID(int value) {
      validate(fields()[1], value);
      this.emitterID = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'emitterID' field has been set */
    public boolean hasEmitterID() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'emitterID' field */
    public com.cohesionforce.dis.avro.TrackJamTarget.Builder clearEmitterID() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'beamID' field */
    public java.lang.Integer getBeamID() {
      return beamID;
    }
    
    /** Sets the value of the 'beamID' field */
    public com.cohesionforce.dis.avro.TrackJamTarget.Builder setBeamID(int value) {
      validate(fields()[2], value);
      this.beamID = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'beamID' field has been set */
    public boolean hasBeamID() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'beamID' field */
    public com.cohesionforce.dis.avro.TrackJamTarget.Builder clearBeamID() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public TrackJamTarget build() {
      try {
        TrackJamTarget record = new TrackJamTarget();
        record.trackJam = fieldSetFlags()[0] ? this.trackJam : (com.cohesionforce.dis.avro.EntityID) defaultValue(fields()[0]);
        record.emitterID = fieldSetFlags()[1] ? this.emitterID : (java.lang.Integer) defaultValue(fields()[1]);
        record.beamID = fieldSetFlags()[2] ? this.beamID : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
