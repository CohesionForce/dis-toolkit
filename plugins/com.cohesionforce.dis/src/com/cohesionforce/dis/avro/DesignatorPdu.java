/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cohesionforce.dis.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DesignatorPdu extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DesignatorPdu\",\"namespace\":\"com.cohesionforce.dis.avro\",\"fields\":[{\"name\":\"reception_timestamp\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Time_t\",\"fields\":[{\"name\":\"sec\",\"type\":\"int\"},{\"name\":\"nanosec\",\"type\":\"int\"}]}]},{\"name\":\"source_timestamp\",\"type\":[\"null\",\"Time_t\"]},{\"name\":\"protocolVersion\",\"type\":\"int\"},{\"name\":\"exerciseID\",\"type\":\"int\"},{\"name\":\"pduType\",\"type\":\"int\"},{\"name\":\"protocolFamily\",\"type\":\"int\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"pduLength\",\"type\":\"int\"},{\"name\":\"padding\",\"type\":\"int\"},{\"name\":\"designatingEntityID\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EntityID\",\"fields\":[{\"name\":\"site\",\"type\":\"int\"},{\"name\":\"application\",\"type\":\"int\"},{\"name\":\"entity\",\"type\":\"int\"}]}]},{\"name\":\"codeName\",\"type\":\"int\"},{\"name\":\"designatedEntityID\",\"type\":[\"null\",\"EntityID\"]},{\"name\":\"designatorCode\",\"type\":\"int\"},{\"name\":\"designatorPower\",\"type\":\"float\"},{\"name\":\"designatorWavelength\",\"type\":\"float\"},{\"name\":\"designatorSpotWrtDesignated\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vector3Float\",\"fields\":[{\"name\":\"x\",\"type\":\"float\"},{\"name\":\"y\",\"type\":\"float\"},{\"name\":\"z\",\"type\":\"float\"}]}]},{\"name\":\"designatorSpotLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vector3Double\",\"fields\":[{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"z\",\"type\":\"double\"}]}]},{\"name\":\"deadReckoningAlgorithm\",\"type\":\"int\"},{\"name\":\"padding1\",\"type\":\"int\"},{\"name\":\"padding2\",\"type\":\"int\"},{\"name\":\"entityLinearAcceleration\",\"type\":[\"null\",\"Vector3Float\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.cohesionforce.dis.avro.Time_t reception_timestamp;
  @Deprecated public com.cohesionforce.dis.avro.Time_t source_timestamp;
  @Deprecated public int protocolVersion;
  @Deprecated public int exerciseID;
  @Deprecated public int pduType;
  @Deprecated public int protocolFamily;
  @Deprecated public long timestamp;
  @Deprecated public int pduLength;
  @Deprecated public int padding;
  @Deprecated public com.cohesionforce.dis.avro.EntityID designatingEntityID;
  @Deprecated public int codeName;
  @Deprecated public com.cohesionforce.dis.avro.EntityID designatedEntityID;
  @Deprecated public int designatorCode;
  @Deprecated public float designatorPower;
  @Deprecated public float designatorWavelength;
  @Deprecated public com.cohesionforce.dis.avro.Vector3Float designatorSpotWrtDesignated;
  @Deprecated public com.cohesionforce.dis.avro.Vector3Double designatorSpotLocation;
  @Deprecated public int deadReckoningAlgorithm;
  @Deprecated public int padding1;
  @Deprecated public int padding2;
  @Deprecated public com.cohesionforce.dis.avro.Vector3Float entityLinearAcceleration;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DesignatorPdu() {}

  /**
   * All-args constructor.
   */
  public DesignatorPdu(com.cohesionforce.dis.avro.Time_t reception_timestamp, com.cohesionforce.dis.avro.Time_t source_timestamp, java.lang.Integer protocolVersion, java.lang.Integer exerciseID, java.lang.Integer pduType, java.lang.Integer protocolFamily, java.lang.Long timestamp, java.lang.Integer pduLength, java.lang.Integer padding, com.cohesionforce.dis.avro.EntityID designatingEntityID, java.lang.Integer codeName, com.cohesionforce.dis.avro.EntityID designatedEntityID, java.lang.Integer designatorCode, java.lang.Float designatorPower, java.lang.Float designatorWavelength, com.cohesionforce.dis.avro.Vector3Float designatorSpotWrtDesignated, com.cohesionforce.dis.avro.Vector3Double designatorSpotLocation, java.lang.Integer deadReckoningAlgorithm, java.lang.Integer padding1, java.lang.Integer padding2, com.cohesionforce.dis.avro.Vector3Float entityLinearAcceleration) {
    this.reception_timestamp = reception_timestamp;
    this.source_timestamp = source_timestamp;
    this.protocolVersion = protocolVersion;
    this.exerciseID = exerciseID;
    this.pduType = pduType;
    this.protocolFamily = protocolFamily;
    this.timestamp = timestamp;
    this.pduLength = pduLength;
    this.padding = padding;
    this.designatingEntityID = designatingEntityID;
    this.codeName = codeName;
    this.designatedEntityID = designatedEntityID;
    this.designatorCode = designatorCode;
    this.designatorPower = designatorPower;
    this.designatorWavelength = designatorWavelength;
    this.designatorSpotWrtDesignated = designatorSpotWrtDesignated;
    this.designatorSpotLocation = designatorSpotLocation;
    this.deadReckoningAlgorithm = deadReckoningAlgorithm;
    this.padding1 = padding1;
    this.padding2 = padding2;
    this.entityLinearAcceleration = entityLinearAcceleration;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return reception_timestamp;
    case 1: return source_timestamp;
    case 2: return protocolVersion;
    case 3: return exerciseID;
    case 4: return pduType;
    case 5: return protocolFamily;
    case 6: return timestamp;
    case 7: return pduLength;
    case 8: return padding;
    case 9: return designatingEntityID;
    case 10: return codeName;
    case 11: return designatedEntityID;
    case 12: return designatorCode;
    case 13: return designatorPower;
    case 14: return designatorWavelength;
    case 15: return designatorSpotWrtDesignated;
    case 16: return designatorSpotLocation;
    case 17: return deadReckoningAlgorithm;
    case 18: return padding1;
    case 19: return padding2;
    case 20: return entityLinearAcceleration;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: reception_timestamp = (com.cohesionforce.dis.avro.Time_t)value$; break;
    case 1: source_timestamp = (com.cohesionforce.dis.avro.Time_t)value$; break;
    case 2: protocolVersion = (java.lang.Integer)value$; break;
    case 3: exerciseID = (java.lang.Integer)value$; break;
    case 4: pduType = (java.lang.Integer)value$; break;
    case 5: protocolFamily = (java.lang.Integer)value$; break;
    case 6: timestamp = (java.lang.Long)value$; break;
    case 7: pduLength = (java.lang.Integer)value$; break;
    case 8: padding = (java.lang.Integer)value$; break;
    case 9: designatingEntityID = (com.cohesionforce.dis.avro.EntityID)value$; break;
    case 10: codeName = (java.lang.Integer)value$; break;
    case 11: designatedEntityID = (com.cohesionforce.dis.avro.EntityID)value$; break;
    case 12: designatorCode = (java.lang.Integer)value$; break;
    case 13: designatorPower = (java.lang.Float)value$; break;
    case 14: designatorWavelength = (java.lang.Float)value$; break;
    case 15: designatorSpotWrtDesignated = (com.cohesionforce.dis.avro.Vector3Float)value$; break;
    case 16: designatorSpotLocation = (com.cohesionforce.dis.avro.Vector3Double)value$; break;
    case 17: deadReckoningAlgorithm = (java.lang.Integer)value$; break;
    case 18: padding1 = (java.lang.Integer)value$; break;
    case 19: padding2 = (java.lang.Integer)value$; break;
    case 20: entityLinearAcceleration = (com.cohesionforce.dis.avro.Vector3Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'reception_timestamp' field.
   */
  public com.cohesionforce.dis.avro.Time_t getReceptionTimestamp() {
    return reception_timestamp;
  }

  /**
   * Sets the value of the 'reception_timestamp' field.
   * @param value the value to set.
   */
  public void setReceptionTimestamp(com.cohesionforce.dis.avro.Time_t value) {
    this.reception_timestamp = value;
  }

  /**
   * Gets the value of the 'source_timestamp' field.
   */
  public com.cohesionforce.dis.avro.Time_t getSourceTimestamp() {
    return source_timestamp;
  }

  /**
   * Sets the value of the 'source_timestamp' field.
   * @param value the value to set.
   */
  public void setSourceTimestamp(com.cohesionforce.dis.avro.Time_t value) {
    this.source_timestamp = value;
  }

  /**
   * Gets the value of the 'protocolVersion' field.
   */
  public java.lang.Integer getProtocolVersion() {
    return protocolVersion;
  }

  /**
   * Sets the value of the 'protocolVersion' field.
   * @param value the value to set.
   */
  public void setProtocolVersion(java.lang.Integer value) {
    this.protocolVersion = value;
  }

  /**
   * Gets the value of the 'exerciseID' field.
   */
  public java.lang.Integer getExerciseID() {
    return exerciseID;
  }

  /**
   * Sets the value of the 'exerciseID' field.
   * @param value the value to set.
   */
  public void setExerciseID(java.lang.Integer value) {
    this.exerciseID = value;
  }

  /**
   * Gets the value of the 'pduType' field.
   */
  public java.lang.Integer getPduType() {
    return pduType;
  }

  /**
   * Sets the value of the 'pduType' field.
   * @param value the value to set.
   */
  public void setPduType(java.lang.Integer value) {
    this.pduType = value;
  }

  /**
   * Gets the value of the 'protocolFamily' field.
   */
  public java.lang.Integer getProtocolFamily() {
    return protocolFamily;
  }

  /**
   * Sets the value of the 'protocolFamily' field.
   * @param value the value to set.
   */
  public void setProtocolFamily(java.lang.Integer value) {
    this.protocolFamily = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'pduLength' field.
   */
  public java.lang.Integer getPduLength() {
    return pduLength;
  }

  /**
   * Sets the value of the 'pduLength' field.
   * @param value the value to set.
   */
  public void setPduLength(java.lang.Integer value) {
    this.pduLength = value;
  }

  /**
   * Gets the value of the 'padding' field.
   */
  public java.lang.Integer getPadding() {
    return padding;
  }

  /**
   * Sets the value of the 'padding' field.
   * @param value the value to set.
   */
  public void setPadding(java.lang.Integer value) {
    this.padding = value;
  }

  /**
   * Gets the value of the 'designatingEntityID' field.
   */
  public com.cohesionforce.dis.avro.EntityID getDesignatingEntityID() {
    return designatingEntityID;
  }

  /**
   * Sets the value of the 'designatingEntityID' field.
   * @param value the value to set.
   */
  public void setDesignatingEntityID(com.cohesionforce.dis.avro.EntityID value) {
    this.designatingEntityID = value;
  }

  /**
   * Gets the value of the 'codeName' field.
   */
  public java.lang.Integer getCodeName() {
    return codeName;
  }

  /**
   * Sets the value of the 'codeName' field.
   * @param value the value to set.
   */
  public void setCodeName(java.lang.Integer value) {
    this.codeName = value;
  }

  /**
   * Gets the value of the 'designatedEntityID' field.
   */
  public com.cohesionforce.dis.avro.EntityID getDesignatedEntityID() {
    return designatedEntityID;
  }

  /**
   * Sets the value of the 'designatedEntityID' field.
   * @param value the value to set.
   */
  public void setDesignatedEntityID(com.cohesionforce.dis.avro.EntityID value) {
    this.designatedEntityID = value;
  }

  /**
   * Gets the value of the 'designatorCode' field.
   */
  public java.lang.Integer getDesignatorCode() {
    return designatorCode;
  }

  /**
   * Sets the value of the 'designatorCode' field.
   * @param value the value to set.
   */
  public void setDesignatorCode(java.lang.Integer value) {
    this.designatorCode = value;
  }

  /**
   * Gets the value of the 'designatorPower' field.
   */
  public java.lang.Float getDesignatorPower() {
    return designatorPower;
  }

  /**
   * Sets the value of the 'designatorPower' field.
   * @param value the value to set.
   */
  public void setDesignatorPower(java.lang.Float value) {
    this.designatorPower = value;
  }

  /**
   * Gets the value of the 'designatorWavelength' field.
   */
  public java.lang.Float getDesignatorWavelength() {
    return designatorWavelength;
  }

  /**
   * Sets the value of the 'designatorWavelength' field.
   * @param value the value to set.
   */
  public void setDesignatorWavelength(java.lang.Float value) {
    this.designatorWavelength = value;
  }

  /**
   * Gets the value of the 'designatorSpotWrtDesignated' field.
   */
  public com.cohesionforce.dis.avro.Vector3Float getDesignatorSpotWrtDesignated() {
    return designatorSpotWrtDesignated;
  }

  /**
   * Sets the value of the 'designatorSpotWrtDesignated' field.
   * @param value the value to set.
   */
  public void setDesignatorSpotWrtDesignated(com.cohesionforce.dis.avro.Vector3Float value) {
    this.designatorSpotWrtDesignated = value;
  }

  /**
   * Gets the value of the 'designatorSpotLocation' field.
   */
  public com.cohesionforce.dis.avro.Vector3Double getDesignatorSpotLocation() {
    return designatorSpotLocation;
  }

  /**
   * Sets the value of the 'designatorSpotLocation' field.
   * @param value the value to set.
   */
  public void setDesignatorSpotLocation(com.cohesionforce.dis.avro.Vector3Double value) {
    this.designatorSpotLocation = value;
  }

  /**
   * Gets the value of the 'deadReckoningAlgorithm' field.
   */
  public java.lang.Integer getDeadReckoningAlgorithm() {
    return deadReckoningAlgorithm;
  }

  /**
   * Sets the value of the 'deadReckoningAlgorithm' field.
   * @param value the value to set.
   */
  public void setDeadReckoningAlgorithm(java.lang.Integer value) {
    this.deadReckoningAlgorithm = value;
  }

  /**
   * Gets the value of the 'padding1' field.
   */
  public java.lang.Integer getPadding1() {
    return padding1;
  }

  /**
   * Sets the value of the 'padding1' field.
   * @param value the value to set.
   */
  public void setPadding1(java.lang.Integer value) {
    this.padding1 = value;
  }

  /**
   * Gets the value of the 'padding2' field.
   */
  public java.lang.Integer getPadding2() {
    return padding2;
  }

  /**
   * Sets the value of the 'padding2' field.
   * @param value the value to set.
   */
  public void setPadding2(java.lang.Integer value) {
    this.padding2 = value;
  }

  /**
   * Gets the value of the 'entityLinearAcceleration' field.
   */
  public com.cohesionforce.dis.avro.Vector3Float getEntityLinearAcceleration() {
    return entityLinearAcceleration;
  }

  /**
   * Sets the value of the 'entityLinearAcceleration' field.
   * @param value the value to set.
   */
  public void setEntityLinearAcceleration(com.cohesionforce.dis.avro.Vector3Float value) {
    this.entityLinearAcceleration = value;
  }

  /** Creates a new DesignatorPdu RecordBuilder */
  public static com.cohesionforce.dis.avro.DesignatorPdu.Builder newBuilder() {
    return new com.cohesionforce.dis.avro.DesignatorPdu.Builder();
  }
  
  /** Creates a new DesignatorPdu RecordBuilder by copying an existing Builder */
  public static com.cohesionforce.dis.avro.DesignatorPdu.Builder newBuilder(com.cohesionforce.dis.avro.DesignatorPdu.Builder other) {
    return new com.cohesionforce.dis.avro.DesignatorPdu.Builder(other);
  }
  
  /** Creates a new DesignatorPdu RecordBuilder by copying an existing DesignatorPdu instance */
  public static com.cohesionforce.dis.avro.DesignatorPdu.Builder newBuilder(com.cohesionforce.dis.avro.DesignatorPdu other) {
    return new com.cohesionforce.dis.avro.DesignatorPdu.Builder(other);
  }
  
  /**
   * RecordBuilder for DesignatorPdu instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DesignatorPdu>
    implements org.apache.avro.data.RecordBuilder<DesignatorPdu> {

    private com.cohesionforce.dis.avro.Time_t reception_timestamp;
    private com.cohesionforce.dis.avro.Time_t source_timestamp;
    private int protocolVersion;
    private int exerciseID;
    private int pduType;
    private int protocolFamily;
    private long timestamp;
    private int pduLength;
    private int padding;
    private com.cohesionforce.dis.avro.EntityID designatingEntityID;
    private int codeName;
    private com.cohesionforce.dis.avro.EntityID designatedEntityID;
    private int designatorCode;
    private float designatorPower;
    private float designatorWavelength;
    private com.cohesionforce.dis.avro.Vector3Float designatorSpotWrtDesignated;
    private com.cohesionforce.dis.avro.Vector3Double designatorSpotLocation;
    private int deadReckoningAlgorithm;
    private int padding1;
    private int padding2;
    private com.cohesionforce.dis.avro.Vector3Float entityLinearAcceleration;

    /** Creates a new Builder */
    private Builder() {
      super(com.cohesionforce.dis.avro.DesignatorPdu.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cohesionforce.dis.avro.DesignatorPdu.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.reception_timestamp)) {
        this.reception_timestamp = data().deepCopy(fields()[0].schema(), other.reception_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_timestamp)) {
        this.source_timestamp = data().deepCopy(fields()[1].schema(), other.source_timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[2].schema(), other.protocolVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exerciseID)) {
        this.exerciseID = data().deepCopy(fields()[3].schema(), other.exerciseID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pduType)) {
        this.pduType = data().deepCopy(fields()[4].schema(), other.pduType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocolFamily)) {
        this.protocolFamily = data().deepCopy(fields()[5].schema(), other.protocolFamily);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pduLength)) {
        this.pduLength = data().deepCopy(fields()[7].schema(), other.pduLength);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.padding)) {
        this.padding = data().deepCopy(fields()[8].schema(), other.padding);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.designatingEntityID)) {
        this.designatingEntityID = data().deepCopy(fields()[9].schema(), other.designatingEntityID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.codeName)) {
        this.codeName = data().deepCopy(fields()[10].schema(), other.codeName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.designatedEntityID)) {
        this.designatedEntityID = data().deepCopy(fields()[11].schema(), other.designatedEntityID);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.designatorCode)) {
        this.designatorCode = data().deepCopy(fields()[12].schema(), other.designatorCode);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.designatorPower)) {
        this.designatorPower = data().deepCopy(fields()[13].schema(), other.designatorPower);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.designatorWavelength)) {
        this.designatorWavelength = data().deepCopy(fields()[14].schema(), other.designatorWavelength);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.designatorSpotWrtDesignated)) {
        this.designatorSpotWrtDesignated = data().deepCopy(fields()[15].schema(), other.designatorSpotWrtDesignated);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.designatorSpotLocation)) {
        this.designatorSpotLocation = data().deepCopy(fields()[16].schema(), other.designatorSpotLocation);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.deadReckoningAlgorithm)) {
        this.deadReckoningAlgorithm = data().deepCopy(fields()[17].schema(), other.deadReckoningAlgorithm);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.padding1)) {
        this.padding1 = data().deepCopy(fields()[18].schema(), other.padding1);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.padding2)) {
        this.padding2 = data().deepCopy(fields()[19].schema(), other.padding2);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.entityLinearAcceleration)) {
        this.entityLinearAcceleration = data().deepCopy(fields()[20].schema(), other.entityLinearAcceleration);
        fieldSetFlags()[20] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DesignatorPdu instance */
    private Builder(com.cohesionforce.dis.avro.DesignatorPdu other) {
            super(com.cohesionforce.dis.avro.DesignatorPdu.SCHEMA$);
      if (isValidValue(fields()[0], other.reception_timestamp)) {
        this.reception_timestamp = data().deepCopy(fields()[0].schema(), other.reception_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_timestamp)) {
        this.source_timestamp = data().deepCopy(fields()[1].schema(), other.source_timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[2].schema(), other.protocolVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exerciseID)) {
        this.exerciseID = data().deepCopy(fields()[3].schema(), other.exerciseID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pduType)) {
        this.pduType = data().deepCopy(fields()[4].schema(), other.pduType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocolFamily)) {
        this.protocolFamily = data().deepCopy(fields()[5].schema(), other.protocolFamily);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pduLength)) {
        this.pduLength = data().deepCopy(fields()[7].schema(), other.pduLength);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.padding)) {
        this.padding = data().deepCopy(fields()[8].schema(), other.padding);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.designatingEntityID)) {
        this.designatingEntityID = data().deepCopy(fields()[9].schema(), other.designatingEntityID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.codeName)) {
        this.codeName = data().deepCopy(fields()[10].schema(), other.codeName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.designatedEntityID)) {
        this.designatedEntityID = data().deepCopy(fields()[11].schema(), other.designatedEntityID);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.designatorCode)) {
        this.designatorCode = data().deepCopy(fields()[12].schema(), other.designatorCode);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.designatorPower)) {
        this.designatorPower = data().deepCopy(fields()[13].schema(), other.designatorPower);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.designatorWavelength)) {
        this.designatorWavelength = data().deepCopy(fields()[14].schema(), other.designatorWavelength);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.designatorSpotWrtDesignated)) {
        this.designatorSpotWrtDesignated = data().deepCopy(fields()[15].schema(), other.designatorSpotWrtDesignated);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.designatorSpotLocation)) {
        this.designatorSpotLocation = data().deepCopy(fields()[16].schema(), other.designatorSpotLocation);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.deadReckoningAlgorithm)) {
        this.deadReckoningAlgorithm = data().deepCopy(fields()[17].schema(), other.deadReckoningAlgorithm);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.padding1)) {
        this.padding1 = data().deepCopy(fields()[18].schema(), other.padding1);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.padding2)) {
        this.padding2 = data().deepCopy(fields()[19].schema(), other.padding2);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.entityLinearAcceleration)) {
        this.entityLinearAcceleration = data().deepCopy(fields()[20].schema(), other.entityLinearAcceleration);
        fieldSetFlags()[20] = true;
      }
    }

    /** Gets the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.Time_t getReceptionTimestamp() {
      return reception_timestamp;
    }
    
    /** Sets the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setReceptionTimestamp(com.cohesionforce.dis.avro.Time_t value) {
      validate(fields()[0], value);
      this.reception_timestamp = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'reception_timestamp' field has been set */
    public boolean hasReceptionTimestamp() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearReceptionTimestamp() {
      reception_timestamp = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.Time_t getSourceTimestamp() {
      return source_timestamp;
    }
    
    /** Sets the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setSourceTimestamp(com.cohesionforce.dis.avro.Time_t value) {
      validate(fields()[1], value);
      this.source_timestamp = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'source_timestamp' field has been set */
    public boolean hasSourceTimestamp() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearSourceTimestamp() {
      source_timestamp = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'protocolVersion' field */
    public java.lang.Integer getProtocolVersion() {
      return protocolVersion;
    }
    
    /** Sets the value of the 'protocolVersion' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setProtocolVersion(int value) {
      validate(fields()[2], value);
      this.protocolVersion = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolVersion' field has been set */
    public boolean hasProtocolVersion() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'protocolVersion' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearProtocolVersion() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'exerciseID' field */
    public java.lang.Integer getExerciseID() {
      return exerciseID;
    }
    
    /** Sets the value of the 'exerciseID' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setExerciseID(int value) {
      validate(fields()[3], value);
      this.exerciseID = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'exerciseID' field has been set */
    public boolean hasExerciseID() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'exerciseID' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearExerciseID() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'pduType' field */
    public java.lang.Integer getPduType() {
      return pduType;
    }
    
    /** Sets the value of the 'pduType' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setPduType(int value) {
      validate(fields()[4], value);
      this.pduType = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'pduType' field has been set */
    public boolean hasPduType() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'pduType' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearPduType() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'protocolFamily' field */
    public java.lang.Integer getProtocolFamily() {
      return protocolFamily;
    }
    
    /** Sets the value of the 'protocolFamily' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setProtocolFamily(int value) {
      validate(fields()[5], value);
      this.protocolFamily = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolFamily' field has been set */
    public boolean hasProtocolFamily() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'protocolFamily' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearProtocolFamily() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setTimestamp(long value) {
      validate(fields()[6], value);
      this.timestamp = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'timestamp' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearTimestamp() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'pduLength' field */
    public java.lang.Integer getPduLength() {
      return pduLength;
    }
    
    /** Sets the value of the 'pduLength' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setPduLength(int value) {
      validate(fields()[7], value);
      this.pduLength = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'pduLength' field has been set */
    public boolean hasPduLength() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'pduLength' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearPduLength() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'padding' field */
    public java.lang.Integer getPadding() {
      return padding;
    }
    
    /** Sets the value of the 'padding' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setPadding(int value) {
      validate(fields()[8], value);
      this.padding = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'padding' field has been set */
    public boolean hasPadding() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'padding' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearPadding() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'designatingEntityID' field */
    public com.cohesionforce.dis.avro.EntityID getDesignatingEntityID() {
      return designatingEntityID;
    }
    
    /** Sets the value of the 'designatingEntityID' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setDesignatingEntityID(com.cohesionforce.dis.avro.EntityID value) {
      validate(fields()[9], value);
      this.designatingEntityID = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'designatingEntityID' field has been set */
    public boolean hasDesignatingEntityID() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'designatingEntityID' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearDesignatingEntityID() {
      designatingEntityID = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'codeName' field */
    public java.lang.Integer getCodeName() {
      return codeName;
    }
    
    /** Sets the value of the 'codeName' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setCodeName(int value) {
      validate(fields()[10], value);
      this.codeName = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'codeName' field has been set */
    public boolean hasCodeName() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'codeName' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearCodeName() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'designatedEntityID' field */
    public com.cohesionforce.dis.avro.EntityID getDesignatedEntityID() {
      return designatedEntityID;
    }
    
    /** Sets the value of the 'designatedEntityID' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setDesignatedEntityID(com.cohesionforce.dis.avro.EntityID value) {
      validate(fields()[11], value);
      this.designatedEntityID = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'designatedEntityID' field has been set */
    public boolean hasDesignatedEntityID() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'designatedEntityID' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearDesignatedEntityID() {
      designatedEntityID = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'designatorCode' field */
    public java.lang.Integer getDesignatorCode() {
      return designatorCode;
    }
    
    /** Sets the value of the 'designatorCode' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setDesignatorCode(int value) {
      validate(fields()[12], value);
      this.designatorCode = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'designatorCode' field has been set */
    public boolean hasDesignatorCode() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'designatorCode' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearDesignatorCode() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'designatorPower' field */
    public java.lang.Float getDesignatorPower() {
      return designatorPower;
    }
    
    /** Sets the value of the 'designatorPower' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setDesignatorPower(float value) {
      validate(fields()[13], value);
      this.designatorPower = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'designatorPower' field has been set */
    public boolean hasDesignatorPower() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'designatorPower' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearDesignatorPower() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'designatorWavelength' field */
    public java.lang.Float getDesignatorWavelength() {
      return designatorWavelength;
    }
    
    /** Sets the value of the 'designatorWavelength' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setDesignatorWavelength(float value) {
      validate(fields()[14], value);
      this.designatorWavelength = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'designatorWavelength' field has been set */
    public boolean hasDesignatorWavelength() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'designatorWavelength' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearDesignatorWavelength() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'designatorSpotWrtDesignated' field */
    public com.cohesionforce.dis.avro.Vector3Float getDesignatorSpotWrtDesignated() {
      return designatorSpotWrtDesignated;
    }
    
    /** Sets the value of the 'designatorSpotWrtDesignated' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setDesignatorSpotWrtDesignated(com.cohesionforce.dis.avro.Vector3Float value) {
      validate(fields()[15], value);
      this.designatorSpotWrtDesignated = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'designatorSpotWrtDesignated' field has been set */
    public boolean hasDesignatorSpotWrtDesignated() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'designatorSpotWrtDesignated' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearDesignatorSpotWrtDesignated() {
      designatorSpotWrtDesignated = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'designatorSpotLocation' field */
    public com.cohesionforce.dis.avro.Vector3Double getDesignatorSpotLocation() {
      return designatorSpotLocation;
    }
    
    /** Sets the value of the 'designatorSpotLocation' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setDesignatorSpotLocation(com.cohesionforce.dis.avro.Vector3Double value) {
      validate(fields()[16], value);
      this.designatorSpotLocation = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'designatorSpotLocation' field has been set */
    public boolean hasDesignatorSpotLocation() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'designatorSpotLocation' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearDesignatorSpotLocation() {
      designatorSpotLocation = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'deadReckoningAlgorithm' field */
    public java.lang.Integer getDeadReckoningAlgorithm() {
      return deadReckoningAlgorithm;
    }
    
    /** Sets the value of the 'deadReckoningAlgorithm' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setDeadReckoningAlgorithm(int value) {
      validate(fields()[17], value);
      this.deadReckoningAlgorithm = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'deadReckoningAlgorithm' field has been set */
    public boolean hasDeadReckoningAlgorithm() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'deadReckoningAlgorithm' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearDeadReckoningAlgorithm() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'padding1' field */
    public java.lang.Integer getPadding1() {
      return padding1;
    }
    
    /** Sets the value of the 'padding1' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setPadding1(int value) {
      validate(fields()[18], value);
      this.padding1 = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'padding1' field has been set */
    public boolean hasPadding1() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'padding1' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearPadding1() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'padding2' field */
    public java.lang.Integer getPadding2() {
      return padding2;
    }
    
    /** Sets the value of the 'padding2' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setPadding2(int value) {
      validate(fields()[19], value);
      this.padding2 = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'padding2' field has been set */
    public boolean hasPadding2() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'padding2' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearPadding2() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'entityLinearAcceleration' field */
    public com.cohesionforce.dis.avro.Vector3Float getEntityLinearAcceleration() {
      return entityLinearAcceleration;
    }
    
    /** Sets the value of the 'entityLinearAcceleration' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder setEntityLinearAcceleration(com.cohesionforce.dis.avro.Vector3Float value) {
      validate(fields()[20], value);
      this.entityLinearAcceleration = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'entityLinearAcceleration' field has been set */
    public boolean hasEntityLinearAcceleration() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'entityLinearAcceleration' field */
    public com.cohesionforce.dis.avro.DesignatorPdu.Builder clearEntityLinearAcceleration() {
      entityLinearAcceleration = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    public DesignatorPdu build() {
      try {
        DesignatorPdu record = new DesignatorPdu();
        record.reception_timestamp = fieldSetFlags()[0] ? this.reception_timestamp : (com.cohesionforce.dis.avro.Time_t) defaultValue(fields()[0]);
        record.source_timestamp = fieldSetFlags()[1] ? this.source_timestamp : (com.cohesionforce.dis.avro.Time_t) defaultValue(fields()[1]);
        record.protocolVersion = fieldSetFlags()[2] ? this.protocolVersion : (java.lang.Integer) defaultValue(fields()[2]);
        record.exerciseID = fieldSetFlags()[3] ? this.exerciseID : (java.lang.Integer) defaultValue(fields()[3]);
        record.pduType = fieldSetFlags()[4] ? this.pduType : (java.lang.Integer) defaultValue(fields()[4]);
        record.protocolFamily = fieldSetFlags()[5] ? this.protocolFamily : (java.lang.Integer) defaultValue(fields()[5]);
        record.timestamp = fieldSetFlags()[6] ? this.timestamp : (java.lang.Long) defaultValue(fields()[6]);
        record.pduLength = fieldSetFlags()[7] ? this.pduLength : (java.lang.Integer) defaultValue(fields()[7]);
        record.padding = fieldSetFlags()[8] ? this.padding : (java.lang.Integer) defaultValue(fields()[8]);
        record.designatingEntityID = fieldSetFlags()[9] ? this.designatingEntityID : (com.cohesionforce.dis.avro.EntityID) defaultValue(fields()[9]);
        record.codeName = fieldSetFlags()[10] ? this.codeName : (java.lang.Integer) defaultValue(fields()[10]);
        record.designatedEntityID = fieldSetFlags()[11] ? this.designatedEntityID : (com.cohesionforce.dis.avro.EntityID) defaultValue(fields()[11]);
        record.designatorCode = fieldSetFlags()[12] ? this.designatorCode : (java.lang.Integer) defaultValue(fields()[12]);
        record.designatorPower = fieldSetFlags()[13] ? this.designatorPower : (java.lang.Float) defaultValue(fields()[13]);
        record.designatorWavelength = fieldSetFlags()[14] ? this.designatorWavelength : (java.lang.Float) defaultValue(fields()[14]);
        record.designatorSpotWrtDesignated = fieldSetFlags()[15] ? this.designatorSpotWrtDesignated : (com.cohesionforce.dis.avro.Vector3Float) defaultValue(fields()[15]);
        record.designatorSpotLocation = fieldSetFlags()[16] ? this.designatorSpotLocation : (com.cohesionforce.dis.avro.Vector3Double) defaultValue(fields()[16]);
        record.deadReckoningAlgorithm = fieldSetFlags()[17] ? this.deadReckoningAlgorithm : (java.lang.Integer) defaultValue(fields()[17]);
        record.padding1 = fieldSetFlags()[18] ? this.padding1 : (java.lang.Integer) defaultValue(fields()[18]);
        record.padding2 = fieldSetFlags()[19] ? this.padding2 : (java.lang.Integer) defaultValue(fields()[19]);
        record.entityLinearAcceleration = fieldSetFlags()[20] ? this.entityLinearAcceleration : (com.cohesionforce.dis.avro.Vector3Float) defaultValue(fields()[20]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
