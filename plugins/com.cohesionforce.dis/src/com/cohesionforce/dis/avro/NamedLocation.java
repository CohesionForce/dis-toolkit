/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cohesionforce.dis.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class NamedLocation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NamedLocation\",\"namespace\":\"com.cohesionforce.dis.avro\",\"fields\":[{\"name\":\"stationName\",\"type\":\"int\"},{\"name\":\"stationNumber\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int stationName;
  @Deprecated public int stationNumber;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public NamedLocation() {}

  /**
   * All-args constructor.
   */
  public NamedLocation(java.lang.Integer stationName, java.lang.Integer stationNumber) {
    this.stationName = stationName;
    this.stationNumber = stationNumber;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return stationName;
    case 1: return stationNumber;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: stationName = (java.lang.Integer)value$; break;
    case 1: stationNumber = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'stationName' field.
   */
  public java.lang.Integer getStationName() {
    return stationName;
  }

  /**
   * Sets the value of the 'stationName' field.
   * @param value the value to set.
   */
  public void setStationName(java.lang.Integer value) {
    this.stationName = value;
  }

  /**
   * Gets the value of the 'stationNumber' field.
   */
  public java.lang.Integer getStationNumber() {
    return stationNumber;
  }

  /**
   * Sets the value of the 'stationNumber' field.
   * @param value the value to set.
   */
  public void setStationNumber(java.lang.Integer value) {
    this.stationNumber = value;
  }

  /** Creates a new NamedLocation RecordBuilder */
  public static com.cohesionforce.dis.avro.NamedLocation.Builder newBuilder() {
    return new com.cohesionforce.dis.avro.NamedLocation.Builder();
  }
  
  /** Creates a new NamedLocation RecordBuilder by copying an existing Builder */
  public static com.cohesionforce.dis.avro.NamedLocation.Builder newBuilder(com.cohesionforce.dis.avro.NamedLocation.Builder other) {
    return new com.cohesionforce.dis.avro.NamedLocation.Builder(other);
  }
  
  /** Creates a new NamedLocation RecordBuilder by copying an existing NamedLocation instance */
  public static com.cohesionforce.dis.avro.NamedLocation.Builder newBuilder(com.cohesionforce.dis.avro.NamedLocation other) {
    return new com.cohesionforce.dis.avro.NamedLocation.Builder(other);
  }
  
  /**
   * RecordBuilder for NamedLocation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NamedLocation>
    implements org.apache.avro.data.RecordBuilder<NamedLocation> {

    private int stationName;
    private int stationNumber;

    /** Creates a new Builder */
    private Builder() {
      super(com.cohesionforce.dis.avro.NamedLocation.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cohesionforce.dis.avro.NamedLocation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.stationName)) {
        this.stationName = data().deepCopy(fields()[0].schema(), other.stationName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.stationNumber)) {
        this.stationNumber = data().deepCopy(fields()[1].schema(), other.stationNumber);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing NamedLocation instance */
    private Builder(com.cohesionforce.dis.avro.NamedLocation other) {
            super(com.cohesionforce.dis.avro.NamedLocation.SCHEMA$);
      if (isValidValue(fields()[0], other.stationName)) {
        this.stationName = data().deepCopy(fields()[0].schema(), other.stationName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.stationNumber)) {
        this.stationNumber = data().deepCopy(fields()[1].schema(), other.stationNumber);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'stationName' field */
    public java.lang.Integer getStationName() {
      return stationName;
    }
    
    /** Sets the value of the 'stationName' field */
    public com.cohesionforce.dis.avro.NamedLocation.Builder setStationName(int value) {
      validate(fields()[0], value);
      this.stationName = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'stationName' field has been set */
    public boolean hasStationName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'stationName' field */
    public com.cohesionforce.dis.avro.NamedLocation.Builder clearStationName() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'stationNumber' field */
    public java.lang.Integer getStationNumber() {
      return stationNumber;
    }
    
    /** Sets the value of the 'stationNumber' field */
    public com.cohesionforce.dis.avro.NamedLocation.Builder setStationNumber(int value) {
      validate(fields()[1], value);
      this.stationNumber = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'stationNumber' field has been set */
    public boolean hasStationNumber() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'stationNumber' field */
    public com.cohesionforce.dis.avro.NamedLocation.Builder clearStationNumber() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public NamedLocation build() {
      try {
        NamedLocation record = new NamedLocation();
        record.stationName = fieldSetFlags()[0] ? this.stationName : (java.lang.Integer) defaultValue(fields()[0]);
        record.stationNumber = fieldSetFlags()[1] ? this.stationNumber : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
