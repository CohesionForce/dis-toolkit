/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cohesionforce.dis.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UaPdu extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UaPdu\",\"namespace\":\"com.cohesionforce.dis.avro\",\"fields\":[{\"name\":\"reception_timestamp\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Time_t\",\"fields\":[{\"name\":\"sec\",\"type\":\"int\"},{\"name\":\"nanosec\",\"type\":\"int\"}]}]},{\"name\":\"source_timestamp\",\"type\":[\"null\",\"Time_t\"]},{\"name\":\"protocolVersion\",\"type\":\"int\"},{\"name\":\"exerciseID\",\"type\":\"int\"},{\"name\":\"pduType\",\"type\":\"int\"},{\"name\":\"protocolFamily\",\"type\":\"int\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"pduLength\",\"type\":\"int\"},{\"name\":\"padding\",\"type\":\"int\"},{\"name\":\"emittingEntityID\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EntityID\",\"fields\":[{\"name\":\"site\",\"type\":\"int\"},{\"name\":\"application\",\"type\":\"int\"},{\"name\":\"entity\",\"type\":\"int\"}]}]},{\"name\":\"eventID\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EventID\",\"fields\":[{\"name\":\"site\",\"type\":\"int\"},{\"name\":\"application\",\"type\":\"int\"},{\"name\":\"eventNumber\",\"type\":\"int\"}]}]},{\"name\":\"stateChangeIndicator\",\"type\":\"int\"},{\"name\":\"pad\",\"type\":\"int\"},{\"name\":\"passiveParameterIndex\",\"type\":\"int\"},{\"name\":\"propulsionPlantConfiguration\",\"type\":\"int\"},{\"name\":\"numberOfShaftRPMs\",\"type\":\"int\"},{\"name\":\"numberOfApaData\",\"type\":\"int\"},{\"name\":\"numberOfEmitterSystems\",\"type\":\"int\"},{\"name\":\"shaftRPMs\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ShaftRPMs\",\"fields\":[{\"name\":\"currentShaftRPMs\",\"type\":\"int\"},{\"name\":\"orderedShaftRPMs\",\"type\":\"int\"},{\"name\":\"shaftRPMRateOfChange\",\"type\":\"float\"}]}}]},{\"name\":\"apaData\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ApaData\",\"fields\":[{\"name\":\"parameterIndex\",\"type\":\"int\"},{\"name\":\"parameterValue\",\"type\":\"int\"}]}}]},{\"name\":\"emitterSystems\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AcousticEmitterSystemData\",\"fields\":[{\"name\":\"emitterSystemDataLength\",\"type\":\"int\"},{\"name\":\"numberOfBeamRecords\",\"type\":\"int\"},{\"name\":\"pad2\",\"type\":\"int\"},{\"name\":\"acousticEmitterSystem\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AcousticEmitterSystem\",\"fields\":[{\"name\":\"acousticName\",\"type\":\"int\"},{\"name\":\"acousticFunction\",\"type\":\"int\"},{\"name\":\"acousticID\",\"type\":\"int\"}]}]},{\"name\":\"emitterLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vector3Float\",\"fields\":[{\"name\":\"x\",\"type\":\"float\"},{\"name\":\"y\",\"type\":\"float\"},{\"name\":\"z\",\"type\":\"float\"}]}]},{\"name\":\"beamRecords\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AcousticBeamData\",\"fields\":[{\"name\":\"beamDataLength\",\"type\":\"int\"},{\"name\":\"beamIDNumber\",\"type\":\"int\"},{\"name\":\"pad2\",\"type\":\"int\"},{\"name\":\"fundamentalDataParameters\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AcousticBeamFundamentalParameter\",\"fields\":[{\"name\":\"activeEmissionParameterIndex\",\"type\":\"int\"},{\"name\":\"scanPattern\",\"type\":\"int\"},{\"name\":\"beamCenterAzimuth\",\"type\":\"float\"},{\"name\":\"azimuthalBeamwidth\",\"type\":\"float\"},{\"name\":\"beamCenterDE\",\"type\":\"float\"},{\"name\":\"deBeamwidth\",\"type\":\"float\"}]}]}]}}]}]}}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.cohesionforce.dis.avro.Time_t reception_timestamp;
  @Deprecated public com.cohesionforce.dis.avro.Time_t source_timestamp;
  @Deprecated public int protocolVersion;
  @Deprecated public int exerciseID;
  @Deprecated public int pduType;
  @Deprecated public int protocolFamily;
  @Deprecated public long timestamp;
  @Deprecated public int pduLength;
  @Deprecated public int padding;
  @Deprecated public com.cohesionforce.dis.avro.EntityID emittingEntityID;
  @Deprecated public com.cohesionforce.dis.avro.EventID eventID;
  @Deprecated public int stateChangeIndicator;
  @Deprecated public int pad;
  @Deprecated public int passiveParameterIndex;
  @Deprecated public int propulsionPlantConfiguration;
  @Deprecated public int numberOfShaftRPMs;
  @Deprecated public int numberOfApaData;
  @Deprecated public int numberOfEmitterSystems;
  @Deprecated public java.util.List<com.cohesionforce.dis.avro.ShaftRPMs> shaftRPMs;
  @Deprecated public java.util.List<com.cohesionforce.dis.avro.ApaData> apaData;
  @Deprecated public java.util.List<com.cohesionforce.dis.avro.AcousticEmitterSystemData> emitterSystems;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public UaPdu() {}

  /**
   * All-args constructor.
   */
  public UaPdu(com.cohesionforce.dis.avro.Time_t reception_timestamp, com.cohesionforce.dis.avro.Time_t source_timestamp, java.lang.Integer protocolVersion, java.lang.Integer exerciseID, java.lang.Integer pduType, java.lang.Integer protocolFamily, java.lang.Long timestamp, java.lang.Integer pduLength, java.lang.Integer padding, com.cohesionforce.dis.avro.EntityID emittingEntityID, com.cohesionforce.dis.avro.EventID eventID, java.lang.Integer stateChangeIndicator, java.lang.Integer pad, java.lang.Integer passiveParameterIndex, java.lang.Integer propulsionPlantConfiguration, java.lang.Integer numberOfShaftRPMs, java.lang.Integer numberOfApaData, java.lang.Integer numberOfEmitterSystems, java.util.List<com.cohesionforce.dis.avro.ShaftRPMs> shaftRPMs, java.util.List<com.cohesionforce.dis.avro.ApaData> apaData, java.util.List<com.cohesionforce.dis.avro.AcousticEmitterSystemData> emitterSystems) {
    this.reception_timestamp = reception_timestamp;
    this.source_timestamp = source_timestamp;
    this.protocolVersion = protocolVersion;
    this.exerciseID = exerciseID;
    this.pduType = pduType;
    this.protocolFamily = protocolFamily;
    this.timestamp = timestamp;
    this.pduLength = pduLength;
    this.padding = padding;
    this.emittingEntityID = emittingEntityID;
    this.eventID = eventID;
    this.stateChangeIndicator = stateChangeIndicator;
    this.pad = pad;
    this.passiveParameterIndex = passiveParameterIndex;
    this.propulsionPlantConfiguration = propulsionPlantConfiguration;
    this.numberOfShaftRPMs = numberOfShaftRPMs;
    this.numberOfApaData = numberOfApaData;
    this.numberOfEmitterSystems = numberOfEmitterSystems;
    this.shaftRPMs = shaftRPMs;
    this.apaData = apaData;
    this.emitterSystems = emitterSystems;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return reception_timestamp;
    case 1: return source_timestamp;
    case 2: return protocolVersion;
    case 3: return exerciseID;
    case 4: return pduType;
    case 5: return protocolFamily;
    case 6: return timestamp;
    case 7: return pduLength;
    case 8: return padding;
    case 9: return emittingEntityID;
    case 10: return eventID;
    case 11: return stateChangeIndicator;
    case 12: return pad;
    case 13: return passiveParameterIndex;
    case 14: return propulsionPlantConfiguration;
    case 15: return numberOfShaftRPMs;
    case 16: return numberOfApaData;
    case 17: return numberOfEmitterSystems;
    case 18: return shaftRPMs;
    case 19: return apaData;
    case 20: return emitterSystems;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: reception_timestamp = (com.cohesionforce.dis.avro.Time_t)value$; break;
    case 1: source_timestamp = (com.cohesionforce.dis.avro.Time_t)value$; break;
    case 2: protocolVersion = (java.lang.Integer)value$; break;
    case 3: exerciseID = (java.lang.Integer)value$; break;
    case 4: pduType = (java.lang.Integer)value$; break;
    case 5: protocolFamily = (java.lang.Integer)value$; break;
    case 6: timestamp = (java.lang.Long)value$; break;
    case 7: pduLength = (java.lang.Integer)value$; break;
    case 8: padding = (java.lang.Integer)value$; break;
    case 9: emittingEntityID = (com.cohesionforce.dis.avro.EntityID)value$; break;
    case 10: eventID = (com.cohesionforce.dis.avro.EventID)value$; break;
    case 11: stateChangeIndicator = (java.lang.Integer)value$; break;
    case 12: pad = (java.lang.Integer)value$; break;
    case 13: passiveParameterIndex = (java.lang.Integer)value$; break;
    case 14: propulsionPlantConfiguration = (java.lang.Integer)value$; break;
    case 15: numberOfShaftRPMs = (java.lang.Integer)value$; break;
    case 16: numberOfApaData = (java.lang.Integer)value$; break;
    case 17: numberOfEmitterSystems = (java.lang.Integer)value$; break;
    case 18: shaftRPMs = (java.util.List<com.cohesionforce.dis.avro.ShaftRPMs>)value$; break;
    case 19: apaData = (java.util.List<com.cohesionforce.dis.avro.ApaData>)value$; break;
    case 20: emitterSystems = (java.util.List<com.cohesionforce.dis.avro.AcousticEmitterSystemData>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'reception_timestamp' field.
   */
  public com.cohesionforce.dis.avro.Time_t getReceptionTimestamp() {
    return reception_timestamp;
  }

  /**
   * Sets the value of the 'reception_timestamp' field.
   * @param value the value to set.
   */
  public void setReceptionTimestamp(com.cohesionforce.dis.avro.Time_t value) {
    this.reception_timestamp = value;
  }

  /**
   * Gets the value of the 'source_timestamp' field.
   */
  public com.cohesionforce.dis.avro.Time_t getSourceTimestamp() {
    return source_timestamp;
  }

  /**
   * Sets the value of the 'source_timestamp' field.
   * @param value the value to set.
   */
  public void setSourceTimestamp(com.cohesionforce.dis.avro.Time_t value) {
    this.source_timestamp = value;
  }

  /**
   * Gets the value of the 'protocolVersion' field.
   */
  public java.lang.Integer getProtocolVersion() {
    return protocolVersion;
  }

  /**
   * Sets the value of the 'protocolVersion' field.
   * @param value the value to set.
   */
  public void setProtocolVersion(java.lang.Integer value) {
    this.protocolVersion = value;
  }

  /**
   * Gets the value of the 'exerciseID' field.
   */
  public java.lang.Integer getExerciseID() {
    return exerciseID;
  }

  /**
   * Sets the value of the 'exerciseID' field.
   * @param value the value to set.
   */
  public void setExerciseID(java.lang.Integer value) {
    this.exerciseID = value;
  }

  /**
   * Gets the value of the 'pduType' field.
   */
  public java.lang.Integer getPduType() {
    return pduType;
  }

  /**
   * Sets the value of the 'pduType' field.
   * @param value the value to set.
   */
  public void setPduType(java.lang.Integer value) {
    this.pduType = value;
  }

  /**
   * Gets the value of the 'protocolFamily' field.
   */
  public java.lang.Integer getProtocolFamily() {
    return protocolFamily;
  }

  /**
   * Sets the value of the 'protocolFamily' field.
   * @param value the value to set.
   */
  public void setProtocolFamily(java.lang.Integer value) {
    this.protocolFamily = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'pduLength' field.
   */
  public java.lang.Integer getPduLength() {
    return pduLength;
  }

  /**
   * Sets the value of the 'pduLength' field.
   * @param value the value to set.
   */
  public void setPduLength(java.lang.Integer value) {
    this.pduLength = value;
  }

  /**
   * Gets the value of the 'padding' field.
   */
  public java.lang.Integer getPadding() {
    return padding;
  }

  /**
   * Sets the value of the 'padding' field.
   * @param value the value to set.
   */
  public void setPadding(java.lang.Integer value) {
    this.padding = value;
  }

  /**
   * Gets the value of the 'emittingEntityID' field.
   */
  public com.cohesionforce.dis.avro.EntityID getEmittingEntityID() {
    return emittingEntityID;
  }

  /**
   * Sets the value of the 'emittingEntityID' field.
   * @param value the value to set.
   */
  public void setEmittingEntityID(com.cohesionforce.dis.avro.EntityID value) {
    this.emittingEntityID = value;
  }

  /**
   * Gets the value of the 'eventID' field.
   */
  public com.cohesionforce.dis.avro.EventID getEventID() {
    return eventID;
  }

  /**
   * Sets the value of the 'eventID' field.
   * @param value the value to set.
   */
  public void setEventID(com.cohesionforce.dis.avro.EventID value) {
    this.eventID = value;
  }

  /**
   * Gets the value of the 'stateChangeIndicator' field.
   */
  public java.lang.Integer getStateChangeIndicator() {
    return stateChangeIndicator;
  }

  /**
   * Sets the value of the 'stateChangeIndicator' field.
   * @param value the value to set.
   */
  public void setStateChangeIndicator(java.lang.Integer value) {
    this.stateChangeIndicator = value;
  }

  /**
   * Gets the value of the 'pad' field.
   */
  public java.lang.Integer getPad() {
    return pad;
  }

  /**
   * Sets the value of the 'pad' field.
   * @param value the value to set.
   */
  public void setPad(java.lang.Integer value) {
    this.pad = value;
  }

  /**
   * Gets the value of the 'passiveParameterIndex' field.
   */
  public java.lang.Integer getPassiveParameterIndex() {
    return passiveParameterIndex;
  }

  /**
   * Sets the value of the 'passiveParameterIndex' field.
   * @param value the value to set.
   */
  public void setPassiveParameterIndex(java.lang.Integer value) {
    this.passiveParameterIndex = value;
  }

  /**
   * Gets the value of the 'propulsionPlantConfiguration' field.
   */
  public java.lang.Integer getPropulsionPlantConfiguration() {
    return propulsionPlantConfiguration;
  }

  /**
   * Sets the value of the 'propulsionPlantConfiguration' field.
   * @param value the value to set.
   */
  public void setPropulsionPlantConfiguration(java.lang.Integer value) {
    this.propulsionPlantConfiguration = value;
  }

  /**
   * Gets the value of the 'numberOfShaftRPMs' field.
   */
  public java.lang.Integer getNumberOfShaftRPMs() {
    return numberOfShaftRPMs;
  }

  /**
   * Sets the value of the 'numberOfShaftRPMs' field.
   * @param value the value to set.
   */
  public void setNumberOfShaftRPMs(java.lang.Integer value) {
    this.numberOfShaftRPMs = value;
  }

  /**
   * Gets the value of the 'numberOfApaData' field.
   */
  public java.lang.Integer getNumberOfApaData() {
    return numberOfApaData;
  }

  /**
   * Sets the value of the 'numberOfApaData' field.
   * @param value the value to set.
   */
  public void setNumberOfApaData(java.lang.Integer value) {
    this.numberOfApaData = value;
  }

  /**
   * Gets the value of the 'numberOfEmitterSystems' field.
   */
  public java.lang.Integer getNumberOfEmitterSystems() {
    return numberOfEmitterSystems;
  }

  /**
   * Sets the value of the 'numberOfEmitterSystems' field.
   * @param value the value to set.
   */
  public void setNumberOfEmitterSystems(java.lang.Integer value) {
    this.numberOfEmitterSystems = value;
  }

  /**
   * Gets the value of the 'shaftRPMs' field.
   */
  public java.util.List<com.cohesionforce.dis.avro.ShaftRPMs> getShaftRPMs() {
    return shaftRPMs;
  }

  /**
   * Sets the value of the 'shaftRPMs' field.
   * @param value the value to set.
   */
  public void setShaftRPMs(java.util.List<com.cohesionforce.dis.avro.ShaftRPMs> value) {
    this.shaftRPMs = value;
  }

  /**
   * Gets the value of the 'apaData' field.
   */
  public java.util.List<com.cohesionforce.dis.avro.ApaData> getApaData() {
    return apaData;
  }

  /**
   * Sets the value of the 'apaData' field.
   * @param value the value to set.
   */
  public void setApaData(java.util.List<com.cohesionforce.dis.avro.ApaData> value) {
    this.apaData = value;
  }

  /**
   * Gets the value of the 'emitterSystems' field.
   */
  public java.util.List<com.cohesionforce.dis.avro.AcousticEmitterSystemData> getEmitterSystems() {
    return emitterSystems;
  }

  /**
   * Sets the value of the 'emitterSystems' field.
   * @param value the value to set.
   */
  public void setEmitterSystems(java.util.List<com.cohesionforce.dis.avro.AcousticEmitterSystemData> value) {
    this.emitterSystems = value;
  }

  /** Creates a new UaPdu RecordBuilder */
  public static com.cohesionforce.dis.avro.UaPdu.Builder newBuilder() {
    return new com.cohesionforce.dis.avro.UaPdu.Builder();
  }
  
  /** Creates a new UaPdu RecordBuilder by copying an existing Builder */
  public static com.cohesionforce.dis.avro.UaPdu.Builder newBuilder(com.cohesionforce.dis.avro.UaPdu.Builder other) {
    return new com.cohesionforce.dis.avro.UaPdu.Builder(other);
  }
  
  /** Creates a new UaPdu RecordBuilder by copying an existing UaPdu instance */
  public static com.cohesionforce.dis.avro.UaPdu.Builder newBuilder(com.cohesionforce.dis.avro.UaPdu other) {
    return new com.cohesionforce.dis.avro.UaPdu.Builder(other);
  }
  
  /**
   * RecordBuilder for UaPdu instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UaPdu>
    implements org.apache.avro.data.RecordBuilder<UaPdu> {

    private com.cohesionforce.dis.avro.Time_t reception_timestamp;
    private com.cohesionforce.dis.avro.Time_t source_timestamp;
    private int protocolVersion;
    private int exerciseID;
    private int pduType;
    private int protocolFamily;
    private long timestamp;
    private int pduLength;
    private int padding;
    private com.cohesionforce.dis.avro.EntityID emittingEntityID;
    private com.cohesionforce.dis.avro.EventID eventID;
    private int stateChangeIndicator;
    private int pad;
    private int passiveParameterIndex;
    private int propulsionPlantConfiguration;
    private int numberOfShaftRPMs;
    private int numberOfApaData;
    private int numberOfEmitterSystems;
    private java.util.List<com.cohesionforce.dis.avro.ShaftRPMs> shaftRPMs;
    private java.util.List<com.cohesionforce.dis.avro.ApaData> apaData;
    private java.util.List<com.cohesionforce.dis.avro.AcousticEmitterSystemData> emitterSystems;

    /** Creates a new Builder */
    private Builder() {
      super(com.cohesionforce.dis.avro.UaPdu.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cohesionforce.dis.avro.UaPdu.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.reception_timestamp)) {
        this.reception_timestamp = data().deepCopy(fields()[0].schema(), other.reception_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_timestamp)) {
        this.source_timestamp = data().deepCopy(fields()[1].schema(), other.source_timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[2].schema(), other.protocolVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exerciseID)) {
        this.exerciseID = data().deepCopy(fields()[3].schema(), other.exerciseID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pduType)) {
        this.pduType = data().deepCopy(fields()[4].schema(), other.pduType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocolFamily)) {
        this.protocolFamily = data().deepCopy(fields()[5].schema(), other.protocolFamily);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pduLength)) {
        this.pduLength = data().deepCopy(fields()[7].schema(), other.pduLength);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.padding)) {
        this.padding = data().deepCopy(fields()[8].schema(), other.padding);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.emittingEntityID)) {
        this.emittingEntityID = data().deepCopy(fields()[9].schema(), other.emittingEntityID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eventID)) {
        this.eventID = data().deepCopy(fields()[10].schema(), other.eventID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.stateChangeIndicator)) {
        this.stateChangeIndicator = data().deepCopy(fields()[11].schema(), other.stateChangeIndicator);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.pad)) {
        this.pad = data().deepCopy(fields()[12].schema(), other.pad);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.passiveParameterIndex)) {
        this.passiveParameterIndex = data().deepCopy(fields()[13].schema(), other.passiveParameterIndex);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.propulsionPlantConfiguration)) {
        this.propulsionPlantConfiguration = data().deepCopy(fields()[14].schema(), other.propulsionPlantConfiguration);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.numberOfShaftRPMs)) {
        this.numberOfShaftRPMs = data().deepCopy(fields()[15].schema(), other.numberOfShaftRPMs);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.numberOfApaData)) {
        this.numberOfApaData = data().deepCopy(fields()[16].schema(), other.numberOfApaData);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.numberOfEmitterSystems)) {
        this.numberOfEmitterSystems = data().deepCopy(fields()[17].schema(), other.numberOfEmitterSystems);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.shaftRPMs)) {
        this.shaftRPMs = data().deepCopy(fields()[18].schema(), other.shaftRPMs);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.apaData)) {
        this.apaData = data().deepCopy(fields()[19].schema(), other.apaData);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.emitterSystems)) {
        this.emitterSystems = data().deepCopy(fields()[20].schema(), other.emitterSystems);
        fieldSetFlags()[20] = true;
      }
    }
    
    /** Creates a Builder by copying an existing UaPdu instance */
    private Builder(com.cohesionforce.dis.avro.UaPdu other) {
            super(com.cohesionforce.dis.avro.UaPdu.SCHEMA$);
      if (isValidValue(fields()[0], other.reception_timestamp)) {
        this.reception_timestamp = data().deepCopy(fields()[0].schema(), other.reception_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_timestamp)) {
        this.source_timestamp = data().deepCopy(fields()[1].schema(), other.source_timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[2].schema(), other.protocolVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exerciseID)) {
        this.exerciseID = data().deepCopy(fields()[3].schema(), other.exerciseID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pduType)) {
        this.pduType = data().deepCopy(fields()[4].schema(), other.pduType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocolFamily)) {
        this.protocolFamily = data().deepCopy(fields()[5].schema(), other.protocolFamily);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pduLength)) {
        this.pduLength = data().deepCopy(fields()[7].schema(), other.pduLength);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.padding)) {
        this.padding = data().deepCopy(fields()[8].schema(), other.padding);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.emittingEntityID)) {
        this.emittingEntityID = data().deepCopy(fields()[9].schema(), other.emittingEntityID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eventID)) {
        this.eventID = data().deepCopy(fields()[10].schema(), other.eventID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.stateChangeIndicator)) {
        this.stateChangeIndicator = data().deepCopy(fields()[11].schema(), other.stateChangeIndicator);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.pad)) {
        this.pad = data().deepCopy(fields()[12].schema(), other.pad);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.passiveParameterIndex)) {
        this.passiveParameterIndex = data().deepCopy(fields()[13].schema(), other.passiveParameterIndex);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.propulsionPlantConfiguration)) {
        this.propulsionPlantConfiguration = data().deepCopy(fields()[14].schema(), other.propulsionPlantConfiguration);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.numberOfShaftRPMs)) {
        this.numberOfShaftRPMs = data().deepCopy(fields()[15].schema(), other.numberOfShaftRPMs);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.numberOfApaData)) {
        this.numberOfApaData = data().deepCopy(fields()[16].schema(), other.numberOfApaData);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.numberOfEmitterSystems)) {
        this.numberOfEmitterSystems = data().deepCopy(fields()[17].schema(), other.numberOfEmitterSystems);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.shaftRPMs)) {
        this.shaftRPMs = data().deepCopy(fields()[18].schema(), other.shaftRPMs);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.apaData)) {
        this.apaData = data().deepCopy(fields()[19].schema(), other.apaData);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.emitterSystems)) {
        this.emitterSystems = data().deepCopy(fields()[20].schema(), other.emitterSystems);
        fieldSetFlags()[20] = true;
      }
    }

    /** Gets the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.Time_t getReceptionTimestamp() {
      return reception_timestamp;
    }
    
    /** Sets the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setReceptionTimestamp(com.cohesionforce.dis.avro.Time_t value) {
      validate(fields()[0], value);
      this.reception_timestamp = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'reception_timestamp' field has been set */
    public boolean hasReceptionTimestamp() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearReceptionTimestamp() {
      reception_timestamp = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.Time_t getSourceTimestamp() {
      return source_timestamp;
    }
    
    /** Sets the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setSourceTimestamp(com.cohesionforce.dis.avro.Time_t value) {
      validate(fields()[1], value);
      this.source_timestamp = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'source_timestamp' field has been set */
    public boolean hasSourceTimestamp() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearSourceTimestamp() {
      source_timestamp = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'protocolVersion' field */
    public java.lang.Integer getProtocolVersion() {
      return protocolVersion;
    }
    
    /** Sets the value of the 'protocolVersion' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setProtocolVersion(int value) {
      validate(fields()[2], value);
      this.protocolVersion = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolVersion' field has been set */
    public boolean hasProtocolVersion() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'protocolVersion' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearProtocolVersion() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'exerciseID' field */
    public java.lang.Integer getExerciseID() {
      return exerciseID;
    }
    
    /** Sets the value of the 'exerciseID' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setExerciseID(int value) {
      validate(fields()[3], value);
      this.exerciseID = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'exerciseID' field has been set */
    public boolean hasExerciseID() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'exerciseID' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearExerciseID() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'pduType' field */
    public java.lang.Integer getPduType() {
      return pduType;
    }
    
    /** Sets the value of the 'pduType' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setPduType(int value) {
      validate(fields()[4], value);
      this.pduType = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'pduType' field has been set */
    public boolean hasPduType() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'pduType' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearPduType() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'protocolFamily' field */
    public java.lang.Integer getProtocolFamily() {
      return protocolFamily;
    }
    
    /** Sets the value of the 'protocolFamily' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setProtocolFamily(int value) {
      validate(fields()[5], value);
      this.protocolFamily = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolFamily' field has been set */
    public boolean hasProtocolFamily() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'protocolFamily' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearProtocolFamily() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setTimestamp(long value) {
      validate(fields()[6], value);
      this.timestamp = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'timestamp' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearTimestamp() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'pduLength' field */
    public java.lang.Integer getPduLength() {
      return pduLength;
    }
    
    /** Sets the value of the 'pduLength' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setPduLength(int value) {
      validate(fields()[7], value);
      this.pduLength = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'pduLength' field has been set */
    public boolean hasPduLength() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'pduLength' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearPduLength() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'padding' field */
    public java.lang.Integer getPadding() {
      return padding;
    }
    
    /** Sets the value of the 'padding' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setPadding(int value) {
      validate(fields()[8], value);
      this.padding = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'padding' field has been set */
    public boolean hasPadding() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'padding' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearPadding() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'emittingEntityID' field */
    public com.cohesionforce.dis.avro.EntityID getEmittingEntityID() {
      return emittingEntityID;
    }
    
    /** Sets the value of the 'emittingEntityID' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setEmittingEntityID(com.cohesionforce.dis.avro.EntityID value) {
      validate(fields()[9], value);
      this.emittingEntityID = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'emittingEntityID' field has been set */
    public boolean hasEmittingEntityID() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'emittingEntityID' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearEmittingEntityID() {
      emittingEntityID = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'eventID' field */
    public com.cohesionforce.dis.avro.EventID getEventID() {
      return eventID;
    }
    
    /** Sets the value of the 'eventID' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setEventID(com.cohesionforce.dis.avro.EventID value) {
      validate(fields()[10], value);
      this.eventID = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'eventID' field has been set */
    public boolean hasEventID() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'eventID' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearEventID() {
      eventID = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'stateChangeIndicator' field */
    public java.lang.Integer getStateChangeIndicator() {
      return stateChangeIndicator;
    }
    
    /** Sets the value of the 'stateChangeIndicator' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setStateChangeIndicator(int value) {
      validate(fields()[11], value);
      this.stateChangeIndicator = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'stateChangeIndicator' field has been set */
    public boolean hasStateChangeIndicator() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'stateChangeIndicator' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearStateChangeIndicator() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'pad' field */
    public java.lang.Integer getPad() {
      return pad;
    }
    
    /** Sets the value of the 'pad' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setPad(int value) {
      validate(fields()[12], value);
      this.pad = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'pad' field has been set */
    public boolean hasPad() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'pad' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearPad() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'passiveParameterIndex' field */
    public java.lang.Integer getPassiveParameterIndex() {
      return passiveParameterIndex;
    }
    
    /** Sets the value of the 'passiveParameterIndex' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setPassiveParameterIndex(int value) {
      validate(fields()[13], value);
      this.passiveParameterIndex = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'passiveParameterIndex' field has been set */
    public boolean hasPassiveParameterIndex() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'passiveParameterIndex' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearPassiveParameterIndex() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'propulsionPlantConfiguration' field */
    public java.lang.Integer getPropulsionPlantConfiguration() {
      return propulsionPlantConfiguration;
    }
    
    /** Sets the value of the 'propulsionPlantConfiguration' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setPropulsionPlantConfiguration(int value) {
      validate(fields()[14], value);
      this.propulsionPlantConfiguration = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'propulsionPlantConfiguration' field has been set */
    public boolean hasPropulsionPlantConfiguration() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'propulsionPlantConfiguration' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearPropulsionPlantConfiguration() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'numberOfShaftRPMs' field */
    public java.lang.Integer getNumberOfShaftRPMs() {
      return numberOfShaftRPMs;
    }
    
    /** Sets the value of the 'numberOfShaftRPMs' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setNumberOfShaftRPMs(int value) {
      validate(fields()[15], value);
      this.numberOfShaftRPMs = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'numberOfShaftRPMs' field has been set */
    public boolean hasNumberOfShaftRPMs() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'numberOfShaftRPMs' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearNumberOfShaftRPMs() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'numberOfApaData' field */
    public java.lang.Integer getNumberOfApaData() {
      return numberOfApaData;
    }
    
    /** Sets the value of the 'numberOfApaData' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setNumberOfApaData(int value) {
      validate(fields()[16], value);
      this.numberOfApaData = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'numberOfApaData' field has been set */
    public boolean hasNumberOfApaData() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'numberOfApaData' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearNumberOfApaData() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'numberOfEmitterSystems' field */
    public java.lang.Integer getNumberOfEmitterSystems() {
      return numberOfEmitterSystems;
    }
    
    /** Sets the value of the 'numberOfEmitterSystems' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setNumberOfEmitterSystems(int value) {
      validate(fields()[17], value);
      this.numberOfEmitterSystems = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'numberOfEmitterSystems' field has been set */
    public boolean hasNumberOfEmitterSystems() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'numberOfEmitterSystems' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearNumberOfEmitterSystems() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'shaftRPMs' field */
    public java.util.List<com.cohesionforce.dis.avro.ShaftRPMs> getShaftRPMs() {
      return shaftRPMs;
    }
    
    /** Sets the value of the 'shaftRPMs' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setShaftRPMs(java.util.List<com.cohesionforce.dis.avro.ShaftRPMs> value) {
      validate(fields()[18], value);
      this.shaftRPMs = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'shaftRPMs' field has been set */
    public boolean hasShaftRPMs() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'shaftRPMs' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearShaftRPMs() {
      shaftRPMs = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'apaData' field */
    public java.util.List<com.cohesionforce.dis.avro.ApaData> getApaData() {
      return apaData;
    }
    
    /** Sets the value of the 'apaData' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setApaData(java.util.List<com.cohesionforce.dis.avro.ApaData> value) {
      validate(fields()[19], value);
      this.apaData = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'apaData' field has been set */
    public boolean hasApaData() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'apaData' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearApaData() {
      apaData = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'emitterSystems' field */
    public java.util.List<com.cohesionforce.dis.avro.AcousticEmitterSystemData> getEmitterSystems() {
      return emitterSystems;
    }
    
    /** Sets the value of the 'emitterSystems' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder setEmitterSystems(java.util.List<com.cohesionforce.dis.avro.AcousticEmitterSystemData> value) {
      validate(fields()[20], value);
      this.emitterSystems = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'emitterSystems' field has been set */
    public boolean hasEmitterSystems() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'emitterSystems' field */
    public com.cohesionforce.dis.avro.UaPdu.Builder clearEmitterSystems() {
      emitterSystems = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    public UaPdu build() {
      try {
        UaPdu record = new UaPdu();
        record.reception_timestamp = fieldSetFlags()[0] ? this.reception_timestamp : (com.cohesionforce.dis.avro.Time_t) defaultValue(fields()[0]);
        record.source_timestamp = fieldSetFlags()[1] ? this.source_timestamp : (com.cohesionforce.dis.avro.Time_t) defaultValue(fields()[1]);
        record.protocolVersion = fieldSetFlags()[2] ? this.protocolVersion : (java.lang.Integer) defaultValue(fields()[2]);
        record.exerciseID = fieldSetFlags()[3] ? this.exerciseID : (java.lang.Integer) defaultValue(fields()[3]);
        record.pduType = fieldSetFlags()[4] ? this.pduType : (java.lang.Integer) defaultValue(fields()[4]);
        record.protocolFamily = fieldSetFlags()[5] ? this.protocolFamily : (java.lang.Integer) defaultValue(fields()[5]);
        record.timestamp = fieldSetFlags()[6] ? this.timestamp : (java.lang.Long) defaultValue(fields()[6]);
        record.pduLength = fieldSetFlags()[7] ? this.pduLength : (java.lang.Integer) defaultValue(fields()[7]);
        record.padding = fieldSetFlags()[8] ? this.padding : (java.lang.Integer) defaultValue(fields()[8]);
        record.emittingEntityID = fieldSetFlags()[9] ? this.emittingEntityID : (com.cohesionforce.dis.avro.EntityID) defaultValue(fields()[9]);
        record.eventID = fieldSetFlags()[10] ? this.eventID : (com.cohesionforce.dis.avro.EventID) defaultValue(fields()[10]);
        record.stateChangeIndicator = fieldSetFlags()[11] ? this.stateChangeIndicator : (java.lang.Integer) defaultValue(fields()[11]);
        record.pad = fieldSetFlags()[12] ? this.pad : (java.lang.Integer) defaultValue(fields()[12]);
        record.passiveParameterIndex = fieldSetFlags()[13] ? this.passiveParameterIndex : (java.lang.Integer) defaultValue(fields()[13]);
        record.propulsionPlantConfiguration = fieldSetFlags()[14] ? this.propulsionPlantConfiguration : (java.lang.Integer) defaultValue(fields()[14]);
        record.numberOfShaftRPMs = fieldSetFlags()[15] ? this.numberOfShaftRPMs : (java.lang.Integer) defaultValue(fields()[15]);
        record.numberOfApaData = fieldSetFlags()[16] ? this.numberOfApaData : (java.lang.Integer) defaultValue(fields()[16]);
        record.numberOfEmitterSystems = fieldSetFlags()[17] ? this.numberOfEmitterSystems : (java.lang.Integer) defaultValue(fields()[17]);
        record.shaftRPMs = fieldSetFlags()[18] ? this.shaftRPMs : (java.util.List<com.cohesionforce.dis.avro.ShaftRPMs>) defaultValue(fields()[18]);
        record.apaData = fieldSetFlags()[19] ? this.apaData : (java.util.List<com.cohesionforce.dis.avro.ApaData>) defaultValue(fields()[19]);
        record.emitterSystems = fieldSetFlags()[20] ? this.emitterSystems : (java.util.List<com.cohesionforce.dis.avro.AcousticEmitterSystemData>) defaultValue(fields()[20]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
