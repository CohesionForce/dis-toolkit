/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cohesionforce.dis.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CollisionElasticPdu extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CollisionElasticPdu\",\"namespace\":\"com.cohesionforce.dis.avro\",\"fields\":[{\"name\":\"reception_timestamp\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Time_t\",\"fields\":[{\"name\":\"sec\",\"type\":\"int\"},{\"name\":\"nanosec\",\"type\":\"int\"}]}]},{\"name\":\"source_timestamp\",\"type\":[\"null\",\"Time_t\"]},{\"name\":\"protocolVersion\",\"type\":\"int\"},{\"name\":\"exerciseID\",\"type\":\"int\"},{\"name\":\"pduType\",\"type\":\"int\"},{\"name\":\"protocolFamily\",\"type\":\"int\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"pduLength\",\"type\":\"int\"},{\"name\":\"padding\",\"type\":\"int\"},{\"name\":\"issuingEntityID\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EntityID\",\"fields\":[{\"name\":\"site\",\"type\":\"int\"},{\"name\":\"application\",\"type\":\"int\"},{\"name\":\"entity\",\"type\":\"int\"}]}]},{\"name\":\"collidingEntityID\",\"type\":[\"null\",\"EntityID\"]},{\"name\":\"collisionEventID\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EventID\",\"fields\":[{\"name\":\"site\",\"type\":\"int\"},{\"name\":\"application\",\"type\":\"int\"},{\"name\":\"eventNumber\",\"type\":\"int\"}]}]},{\"name\":\"pad\",\"type\":\"int\"},{\"name\":\"contactVelocity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vector3Float\",\"fields\":[{\"name\":\"x\",\"type\":\"float\"},{\"name\":\"y\",\"type\":\"float\"},{\"name\":\"z\",\"type\":\"float\"}]}]},{\"name\":\"mass\",\"type\":\"float\"},{\"name\":\"location\",\"type\":[\"null\",\"Vector3Float\"]},{\"name\":\"collisionResultXX\",\"type\":\"float\"},{\"name\":\"collisionResultXY\",\"type\":\"float\"},{\"name\":\"collisionResultXZ\",\"type\":\"float\"},{\"name\":\"collisionResultYY\",\"type\":\"float\"},{\"name\":\"collisionResultYZ\",\"type\":\"float\"},{\"name\":\"collisionResultZZ\",\"type\":\"float\"},{\"name\":\"unitSurfaceNormal\",\"type\":[\"null\",\"Vector3Float\"]},{\"name\":\"coefficientOfRestitution\",\"type\":\"float\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.cohesionforce.dis.avro.Time_t reception_timestamp;
  @Deprecated public com.cohesionforce.dis.avro.Time_t source_timestamp;
  @Deprecated public int protocolVersion;
  @Deprecated public int exerciseID;
  @Deprecated public int pduType;
  @Deprecated public int protocolFamily;
  @Deprecated public long timestamp;
  @Deprecated public int pduLength;
  @Deprecated public int padding;
  @Deprecated public com.cohesionforce.dis.avro.EntityID issuingEntityID;
  @Deprecated public com.cohesionforce.dis.avro.EntityID collidingEntityID;
  @Deprecated public com.cohesionforce.dis.avro.EventID collisionEventID;
  @Deprecated public int pad;
  @Deprecated public com.cohesionforce.dis.avro.Vector3Float contactVelocity;
  @Deprecated public float mass;
  @Deprecated public com.cohesionforce.dis.avro.Vector3Float location;
  @Deprecated public float collisionResultXX;
  @Deprecated public float collisionResultXY;
  @Deprecated public float collisionResultXZ;
  @Deprecated public float collisionResultYY;
  @Deprecated public float collisionResultYZ;
  @Deprecated public float collisionResultZZ;
  @Deprecated public com.cohesionforce.dis.avro.Vector3Float unitSurfaceNormal;
  @Deprecated public float coefficientOfRestitution;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CollisionElasticPdu() {}

  /**
   * All-args constructor.
   */
  public CollisionElasticPdu(com.cohesionforce.dis.avro.Time_t reception_timestamp, com.cohesionforce.dis.avro.Time_t source_timestamp, java.lang.Integer protocolVersion, java.lang.Integer exerciseID, java.lang.Integer pduType, java.lang.Integer protocolFamily, java.lang.Long timestamp, java.lang.Integer pduLength, java.lang.Integer padding, com.cohesionforce.dis.avro.EntityID issuingEntityID, com.cohesionforce.dis.avro.EntityID collidingEntityID, com.cohesionforce.dis.avro.EventID collisionEventID, java.lang.Integer pad, com.cohesionforce.dis.avro.Vector3Float contactVelocity, java.lang.Float mass, com.cohesionforce.dis.avro.Vector3Float location, java.lang.Float collisionResultXX, java.lang.Float collisionResultXY, java.lang.Float collisionResultXZ, java.lang.Float collisionResultYY, java.lang.Float collisionResultYZ, java.lang.Float collisionResultZZ, com.cohesionforce.dis.avro.Vector3Float unitSurfaceNormal, java.lang.Float coefficientOfRestitution) {
    this.reception_timestamp = reception_timestamp;
    this.source_timestamp = source_timestamp;
    this.protocolVersion = protocolVersion;
    this.exerciseID = exerciseID;
    this.pduType = pduType;
    this.protocolFamily = protocolFamily;
    this.timestamp = timestamp;
    this.pduLength = pduLength;
    this.padding = padding;
    this.issuingEntityID = issuingEntityID;
    this.collidingEntityID = collidingEntityID;
    this.collisionEventID = collisionEventID;
    this.pad = pad;
    this.contactVelocity = contactVelocity;
    this.mass = mass;
    this.location = location;
    this.collisionResultXX = collisionResultXX;
    this.collisionResultXY = collisionResultXY;
    this.collisionResultXZ = collisionResultXZ;
    this.collisionResultYY = collisionResultYY;
    this.collisionResultYZ = collisionResultYZ;
    this.collisionResultZZ = collisionResultZZ;
    this.unitSurfaceNormal = unitSurfaceNormal;
    this.coefficientOfRestitution = coefficientOfRestitution;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return reception_timestamp;
    case 1: return source_timestamp;
    case 2: return protocolVersion;
    case 3: return exerciseID;
    case 4: return pduType;
    case 5: return protocolFamily;
    case 6: return timestamp;
    case 7: return pduLength;
    case 8: return padding;
    case 9: return issuingEntityID;
    case 10: return collidingEntityID;
    case 11: return collisionEventID;
    case 12: return pad;
    case 13: return contactVelocity;
    case 14: return mass;
    case 15: return location;
    case 16: return collisionResultXX;
    case 17: return collisionResultXY;
    case 18: return collisionResultXZ;
    case 19: return collisionResultYY;
    case 20: return collisionResultYZ;
    case 21: return collisionResultZZ;
    case 22: return unitSurfaceNormal;
    case 23: return coefficientOfRestitution;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: reception_timestamp = (com.cohesionforce.dis.avro.Time_t)value$; break;
    case 1: source_timestamp = (com.cohesionforce.dis.avro.Time_t)value$; break;
    case 2: protocolVersion = (java.lang.Integer)value$; break;
    case 3: exerciseID = (java.lang.Integer)value$; break;
    case 4: pduType = (java.lang.Integer)value$; break;
    case 5: protocolFamily = (java.lang.Integer)value$; break;
    case 6: timestamp = (java.lang.Long)value$; break;
    case 7: pduLength = (java.lang.Integer)value$; break;
    case 8: padding = (java.lang.Integer)value$; break;
    case 9: issuingEntityID = (com.cohesionforce.dis.avro.EntityID)value$; break;
    case 10: collidingEntityID = (com.cohesionforce.dis.avro.EntityID)value$; break;
    case 11: collisionEventID = (com.cohesionforce.dis.avro.EventID)value$; break;
    case 12: pad = (java.lang.Integer)value$; break;
    case 13: contactVelocity = (com.cohesionforce.dis.avro.Vector3Float)value$; break;
    case 14: mass = (java.lang.Float)value$; break;
    case 15: location = (com.cohesionforce.dis.avro.Vector3Float)value$; break;
    case 16: collisionResultXX = (java.lang.Float)value$; break;
    case 17: collisionResultXY = (java.lang.Float)value$; break;
    case 18: collisionResultXZ = (java.lang.Float)value$; break;
    case 19: collisionResultYY = (java.lang.Float)value$; break;
    case 20: collisionResultYZ = (java.lang.Float)value$; break;
    case 21: collisionResultZZ = (java.lang.Float)value$; break;
    case 22: unitSurfaceNormal = (com.cohesionforce.dis.avro.Vector3Float)value$; break;
    case 23: coefficientOfRestitution = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'reception_timestamp' field.
   */
  public com.cohesionforce.dis.avro.Time_t getReceptionTimestamp() {
    return reception_timestamp;
  }

  /**
   * Sets the value of the 'reception_timestamp' field.
   * @param value the value to set.
   */
  public void setReceptionTimestamp(com.cohesionforce.dis.avro.Time_t value) {
    this.reception_timestamp = value;
  }

  /**
   * Gets the value of the 'source_timestamp' field.
   */
  public com.cohesionforce.dis.avro.Time_t getSourceTimestamp() {
    return source_timestamp;
  }

  /**
   * Sets the value of the 'source_timestamp' field.
   * @param value the value to set.
   */
  public void setSourceTimestamp(com.cohesionforce.dis.avro.Time_t value) {
    this.source_timestamp = value;
  }

  /**
   * Gets the value of the 'protocolVersion' field.
   */
  public java.lang.Integer getProtocolVersion() {
    return protocolVersion;
  }

  /**
   * Sets the value of the 'protocolVersion' field.
   * @param value the value to set.
   */
  public void setProtocolVersion(java.lang.Integer value) {
    this.protocolVersion = value;
  }

  /**
   * Gets the value of the 'exerciseID' field.
   */
  public java.lang.Integer getExerciseID() {
    return exerciseID;
  }

  /**
   * Sets the value of the 'exerciseID' field.
   * @param value the value to set.
   */
  public void setExerciseID(java.lang.Integer value) {
    this.exerciseID = value;
  }

  /**
   * Gets the value of the 'pduType' field.
   */
  public java.lang.Integer getPduType() {
    return pduType;
  }

  /**
   * Sets the value of the 'pduType' field.
   * @param value the value to set.
   */
  public void setPduType(java.lang.Integer value) {
    this.pduType = value;
  }

  /**
   * Gets the value of the 'protocolFamily' field.
   */
  public java.lang.Integer getProtocolFamily() {
    return protocolFamily;
  }

  /**
   * Sets the value of the 'protocolFamily' field.
   * @param value the value to set.
   */
  public void setProtocolFamily(java.lang.Integer value) {
    this.protocolFamily = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'pduLength' field.
   */
  public java.lang.Integer getPduLength() {
    return pduLength;
  }

  /**
   * Sets the value of the 'pduLength' field.
   * @param value the value to set.
   */
  public void setPduLength(java.lang.Integer value) {
    this.pduLength = value;
  }

  /**
   * Gets the value of the 'padding' field.
   */
  public java.lang.Integer getPadding() {
    return padding;
  }

  /**
   * Sets the value of the 'padding' field.
   * @param value the value to set.
   */
  public void setPadding(java.lang.Integer value) {
    this.padding = value;
  }

  /**
   * Gets the value of the 'issuingEntityID' field.
   */
  public com.cohesionforce.dis.avro.EntityID getIssuingEntityID() {
    return issuingEntityID;
  }

  /**
   * Sets the value of the 'issuingEntityID' field.
   * @param value the value to set.
   */
  public void setIssuingEntityID(com.cohesionforce.dis.avro.EntityID value) {
    this.issuingEntityID = value;
  }

  /**
   * Gets the value of the 'collidingEntityID' field.
   */
  public com.cohesionforce.dis.avro.EntityID getCollidingEntityID() {
    return collidingEntityID;
  }

  /**
   * Sets the value of the 'collidingEntityID' field.
   * @param value the value to set.
   */
  public void setCollidingEntityID(com.cohesionforce.dis.avro.EntityID value) {
    this.collidingEntityID = value;
  }

  /**
   * Gets the value of the 'collisionEventID' field.
   */
  public com.cohesionforce.dis.avro.EventID getCollisionEventID() {
    return collisionEventID;
  }

  /**
   * Sets the value of the 'collisionEventID' field.
   * @param value the value to set.
   */
  public void setCollisionEventID(com.cohesionforce.dis.avro.EventID value) {
    this.collisionEventID = value;
  }

  /**
   * Gets the value of the 'pad' field.
   */
  public java.lang.Integer getPad() {
    return pad;
  }

  /**
   * Sets the value of the 'pad' field.
   * @param value the value to set.
   */
  public void setPad(java.lang.Integer value) {
    this.pad = value;
  }

  /**
   * Gets the value of the 'contactVelocity' field.
   */
  public com.cohesionforce.dis.avro.Vector3Float getContactVelocity() {
    return contactVelocity;
  }

  /**
   * Sets the value of the 'contactVelocity' field.
   * @param value the value to set.
   */
  public void setContactVelocity(com.cohesionforce.dis.avro.Vector3Float value) {
    this.contactVelocity = value;
  }

  /**
   * Gets the value of the 'mass' field.
   */
  public java.lang.Float getMass() {
    return mass;
  }

  /**
   * Sets the value of the 'mass' field.
   * @param value the value to set.
   */
  public void setMass(java.lang.Float value) {
    this.mass = value;
  }

  /**
   * Gets the value of the 'location' field.
   */
  public com.cohesionforce.dis.avro.Vector3Float getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(com.cohesionforce.dis.avro.Vector3Float value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'collisionResultXX' field.
   */
  public java.lang.Float getCollisionResultXX() {
    return collisionResultXX;
  }

  /**
   * Sets the value of the 'collisionResultXX' field.
   * @param value the value to set.
   */
  public void setCollisionResultXX(java.lang.Float value) {
    this.collisionResultXX = value;
  }

  /**
   * Gets the value of the 'collisionResultXY' field.
   */
  public java.lang.Float getCollisionResultXY() {
    return collisionResultXY;
  }

  /**
   * Sets the value of the 'collisionResultXY' field.
   * @param value the value to set.
   */
  public void setCollisionResultXY(java.lang.Float value) {
    this.collisionResultXY = value;
  }

  /**
   * Gets the value of the 'collisionResultXZ' field.
   */
  public java.lang.Float getCollisionResultXZ() {
    return collisionResultXZ;
  }

  /**
   * Sets the value of the 'collisionResultXZ' field.
   * @param value the value to set.
   */
  public void setCollisionResultXZ(java.lang.Float value) {
    this.collisionResultXZ = value;
  }

  /**
   * Gets the value of the 'collisionResultYY' field.
   */
  public java.lang.Float getCollisionResultYY() {
    return collisionResultYY;
  }

  /**
   * Sets the value of the 'collisionResultYY' field.
   * @param value the value to set.
   */
  public void setCollisionResultYY(java.lang.Float value) {
    this.collisionResultYY = value;
  }

  /**
   * Gets the value of the 'collisionResultYZ' field.
   */
  public java.lang.Float getCollisionResultYZ() {
    return collisionResultYZ;
  }

  /**
   * Sets the value of the 'collisionResultYZ' field.
   * @param value the value to set.
   */
  public void setCollisionResultYZ(java.lang.Float value) {
    this.collisionResultYZ = value;
  }

  /**
   * Gets the value of the 'collisionResultZZ' field.
   */
  public java.lang.Float getCollisionResultZZ() {
    return collisionResultZZ;
  }

  /**
   * Sets the value of the 'collisionResultZZ' field.
   * @param value the value to set.
   */
  public void setCollisionResultZZ(java.lang.Float value) {
    this.collisionResultZZ = value;
  }

  /**
   * Gets the value of the 'unitSurfaceNormal' field.
   */
  public com.cohesionforce.dis.avro.Vector3Float getUnitSurfaceNormal() {
    return unitSurfaceNormal;
  }

  /**
   * Sets the value of the 'unitSurfaceNormal' field.
   * @param value the value to set.
   */
  public void setUnitSurfaceNormal(com.cohesionforce.dis.avro.Vector3Float value) {
    this.unitSurfaceNormal = value;
  }

  /**
   * Gets the value of the 'coefficientOfRestitution' field.
   */
  public java.lang.Float getCoefficientOfRestitution() {
    return coefficientOfRestitution;
  }

  /**
   * Sets the value of the 'coefficientOfRestitution' field.
   * @param value the value to set.
   */
  public void setCoefficientOfRestitution(java.lang.Float value) {
    this.coefficientOfRestitution = value;
  }

  /** Creates a new CollisionElasticPdu RecordBuilder */
  public static com.cohesionforce.dis.avro.CollisionElasticPdu.Builder newBuilder() {
    return new com.cohesionforce.dis.avro.CollisionElasticPdu.Builder();
  }
  
  /** Creates a new CollisionElasticPdu RecordBuilder by copying an existing Builder */
  public static com.cohesionforce.dis.avro.CollisionElasticPdu.Builder newBuilder(com.cohesionforce.dis.avro.CollisionElasticPdu.Builder other) {
    return new com.cohesionforce.dis.avro.CollisionElasticPdu.Builder(other);
  }
  
  /** Creates a new CollisionElasticPdu RecordBuilder by copying an existing CollisionElasticPdu instance */
  public static com.cohesionforce.dis.avro.CollisionElasticPdu.Builder newBuilder(com.cohesionforce.dis.avro.CollisionElasticPdu other) {
    return new com.cohesionforce.dis.avro.CollisionElasticPdu.Builder(other);
  }
  
  /**
   * RecordBuilder for CollisionElasticPdu instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CollisionElasticPdu>
    implements org.apache.avro.data.RecordBuilder<CollisionElasticPdu> {

    private com.cohesionforce.dis.avro.Time_t reception_timestamp;
    private com.cohesionforce.dis.avro.Time_t source_timestamp;
    private int protocolVersion;
    private int exerciseID;
    private int pduType;
    private int protocolFamily;
    private long timestamp;
    private int pduLength;
    private int padding;
    private com.cohesionforce.dis.avro.EntityID issuingEntityID;
    private com.cohesionforce.dis.avro.EntityID collidingEntityID;
    private com.cohesionforce.dis.avro.EventID collisionEventID;
    private int pad;
    private com.cohesionforce.dis.avro.Vector3Float contactVelocity;
    private float mass;
    private com.cohesionforce.dis.avro.Vector3Float location;
    private float collisionResultXX;
    private float collisionResultXY;
    private float collisionResultXZ;
    private float collisionResultYY;
    private float collisionResultYZ;
    private float collisionResultZZ;
    private com.cohesionforce.dis.avro.Vector3Float unitSurfaceNormal;
    private float coefficientOfRestitution;

    /** Creates a new Builder */
    private Builder() {
      super(com.cohesionforce.dis.avro.CollisionElasticPdu.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cohesionforce.dis.avro.CollisionElasticPdu.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.reception_timestamp)) {
        this.reception_timestamp = data().deepCopy(fields()[0].schema(), other.reception_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_timestamp)) {
        this.source_timestamp = data().deepCopy(fields()[1].schema(), other.source_timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[2].schema(), other.protocolVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exerciseID)) {
        this.exerciseID = data().deepCopy(fields()[3].schema(), other.exerciseID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pduType)) {
        this.pduType = data().deepCopy(fields()[4].schema(), other.pduType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocolFamily)) {
        this.protocolFamily = data().deepCopy(fields()[5].schema(), other.protocolFamily);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pduLength)) {
        this.pduLength = data().deepCopy(fields()[7].schema(), other.pduLength);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.padding)) {
        this.padding = data().deepCopy(fields()[8].schema(), other.padding);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.issuingEntityID)) {
        this.issuingEntityID = data().deepCopy(fields()[9].schema(), other.issuingEntityID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.collidingEntityID)) {
        this.collidingEntityID = data().deepCopy(fields()[10].schema(), other.collidingEntityID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.collisionEventID)) {
        this.collisionEventID = data().deepCopy(fields()[11].schema(), other.collisionEventID);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.pad)) {
        this.pad = data().deepCopy(fields()[12].schema(), other.pad);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.contactVelocity)) {
        this.contactVelocity = data().deepCopy(fields()[13].schema(), other.contactVelocity);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.mass)) {
        this.mass = data().deepCopy(fields()[14].schema(), other.mass);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.location)) {
        this.location = data().deepCopy(fields()[15].schema(), other.location);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.collisionResultXX)) {
        this.collisionResultXX = data().deepCopy(fields()[16].schema(), other.collisionResultXX);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.collisionResultXY)) {
        this.collisionResultXY = data().deepCopy(fields()[17].schema(), other.collisionResultXY);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.collisionResultXZ)) {
        this.collisionResultXZ = data().deepCopy(fields()[18].schema(), other.collisionResultXZ);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.collisionResultYY)) {
        this.collisionResultYY = data().deepCopy(fields()[19].schema(), other.collisionResultYY);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.collisionResultYZ)) {
        this.collisionResultYZ = data().deepCopy(fields()[20].schema(), other.collisionResultYZ);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.collisionResultZZ)) {
        this.collisionResultZZ = data().deepCopy(fields()[21].schema(), other.collisionResultZZ);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.unitSurfaceNormal)) {
        this.unitSurfaceNormal = data().deepCopy(fields()[22].schema(), other.unitSurfaceNormal);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.coefficientOfRestitution)) {
        this.coefficientOfRestitution = data().deepCopy(fields()[23].schema(), other.coefficientOfRestitution);
        fieldSetFlags()[23] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CollisionElasticPdu instance */
    private Builder(com.cohesionforce.dis.avro.CollisionElasticPdu other) {
            super(com.cohesionforce.dis.avro.CollisionElasticPdu.SCHEMA$);
      if (isValidValue(fields()[0], other.reception_timestamp)) {
        this.reception_timestamp = data().deepCopy(fields()[0].schema(), other.reception_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_timestamp)) {
        this.source_timestamp = data().deepCopy(fields()[1].schema(), other.source_timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[2].schema(), other.protocolVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exerciseID)) {
        this.exerciseID = data().deepCopy(fields()[3].schema(), other.exerciseID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pduType)) {
        this.pduType = data().deepCopy(fields()[4].schema(), other.pduType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocolFamily)) {
        this.protocolFamily = data().deepCopy(fields()[5].schema(), other.protocolFamily);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pduLength)) {
        this.pduLength = data().deepCopy(fields()[7].schema(), other.pduLength);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.padding)) {
        this.padding = data().deepCopy(fields()[8].schema(), other.padding);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.issuingEntityID)) {
        this.issuingEntityID = data().deepCopy(fields()[9].schema(), other.issuingEntityID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.collidingEntityID)) {
        this.collidingEntityID = data().deepCopy(fields()[10].schema(), other.collidingEntityID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.collisionEventID)) {
        this.collisionEventID = data().deepCopy(fields()[11].schema(), other.collisionEventID);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.pad)) {
        this.pad = data().deepCopy(fields()[12].schema(), other.pad);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.contactVelocity)) {
        this.contactVelocity = data().deepCopy(fields()[13].schema(), other.contactVelocity);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.mass)) {
        this.mass = data().deepCopy(fields()[14].schema(), other.mass);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.location)) {
        this.location = data().deepCopy(fields()[15].schema(), other.location);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.collisionResultXX)) {
        this.collisionResultXX = data().deepCopy(fields()[16].schema(), other.collisionResultXX);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.collisionResultXY)) {
        this.collisionResultXY = data().deepCopy(fields()[17].schema(), other.collisionResultXY);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.collisionResultXZ)) {
        this.collisionResultXZ = data().deepCopy(fields()[18].schema(), other.collisionResultXZ);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.collisionResultYY)) {
        this.collisionResultYY = data().deepCopy(fields()[19].schema(), other.collisionResultYY);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.collisionResultYZ)) {
        this.collisionResultYZ = data().deepCopy(fields()[20].schema(), other.collisionResultYZ);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.collisionResultZZ)) {
        this.collisionResultZZ = data().deepCopy(fields()[21].schema(), other.collisionResultZZ);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.unitSurfaceNormal)) {
        this.unitSurfaceNormal = data().deepCopy(fields()[22].schema(), other.unitSurfaceNormal);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.coefficientOfRestitution)) {
        this.coefficientOfRestitution = data().deepCopy(fields()[23].schema(), other.coefficientOfRestitution);
        fieldSetFlags()[23] = true;
      }
    }

    /** Gets the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.Time_t getReceptionTimestamp() {
      return reception_timestamp;
    }
    
    /** Sets the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setReceptionTimestamp(com.cohesionforce.dis.avro.Time_t value) {
      validate(fields()[0], value);
      this.reception_timestamp = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'reception_timestamp' field has been set */
    public boolean hasReceptionTimestamp() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearReceptionTimestamp() {
      reception_timestamp = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.Time_t getSourceTimestamp() {
      return source_timestamp;
    }
    
    /** Sets the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setSourceTimestamp(com.cohesionforce.dis.avro.Time_t value) {
      validate(fields()[1], value);
      this.source_timestamp = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'source_timestamp' field has been set */
    public boolean hasSourceTimestamp() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearSourceTimestamp() {
      source_timestamp = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'protocolVersion' field */
    public java.lang.Integer getProtocolVersion() {
      return protocolVersion;
    }
    
    /** Sets the value of the 'protocolVersion' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setProtocolVersion(int value) {
      validate(fields()[2], value);
      this.protocolVersion = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolVersion' field has been set */
    public boolean hasProtocolVersion() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'protocolVersion' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearProtocolVersion() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'exerciseID' field */
    public java.lang.Integer getExerciseID() {
      return exerciseID;
    }
    
    /** Sets the value of the 'exerciseID' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setExerciseID(int value) {
      validate(fields()[3], value);
      this.exerciseID = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'exerciseID' field has been set */
    public boolean hasExerciseID() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'exerciseID' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearExerciseID() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'pduType' field */
    public java.lang.Integer getPduType() {
      return pduType;
    }
    
    /** Sets the value of the 'pduType' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setPduType(int value) {
      validate(fields()[4], value);
      this.pduType = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'pduType' field has been set */
    public boolean hasPduType() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'pduType' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearPduType() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'protocolFamily' field */
    public java.lang.Integer getProtocolFamily() {
      return protocolFamily;
    }
    
    /** Sets the value of the 'protocolFamily' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setProtocolFamily(int value) {
      validate(fields()[5], value);
      this.protocolFamily = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolFamily' field has been set */
    public boolean hasProtocolFamily() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'protocolFamily' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearProtocolFamily() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setTimestamp(long value) {
      validate(fields()[6], value);
      this.timestamp = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'timestamp' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearTimestamp() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'pduLength' field */
    public java.lang.Integer getPduLength() {
      return pduLength;
    }
    
    /** Sets the value of the 'pduLength' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setPduLength(int value) {
      validate(fields()[7], value);
      this.pduLength = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'pduLength' field has been set */
    public boolean hasPduLength() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'pduLength' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearPduLength() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'padding' field */
    public java.lang.Integer getPadding() {
      return padding;
    }
    
    /** Sets the value of the 'padding' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setPadding(int value) {
      validate(fields()[8], value);
      this.padding = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'padding' field has been set */
    public boolean hasPadding() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'padding' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearPadding() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'issuingEntityID' field */
    public com.cohesionforce.dis.avro.EntityID getIssuingEntityID() {
      return issuingEntityID;
    }
    
    /** Sets the value of the 'issuingEntityID' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setIssuingEntityID(com.cohesionforce.dis.avro.EntityID value) {
      validate(fields()[9], value);
      this.issuingEntityID = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'issuingEntityID' field has been set */
    public boolean hasIssuingEntityID() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'issuingEntityID' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearIssuingEntityID() {
      issuingEntityID = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'collidingEntityID' field */
    public com.cohesionforce.dis.avro.EntityID getCollidingEntityID() {
      return collidingEntityID;
    }
    
    /** Sets the value of the 'collidingEntityID' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setCollidingEntityID(com.cohesionforce.dis.avro.EntityID value) {
      validate(fields()[10], value);
      this.collidingEntityID = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'collidingEntityID' field has been set */
    public boolean hasCollidingEntityID() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'collidingEntityID' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearCollidingEntityID() {
      collidingEntityID = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'collisionEventID' field */
    public com.cohesionforce.dis.avro.EventID getCollisionEventID() {
      return collisionEventID;
    }
    
    /** Sets the value of the 'collisionEventID' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setCollisionEventID(com.cohesionforce.dis.avro.EventID value) {
      validate(fields()[11], value);
      this.collisionEventID = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'collisionEventID' field has been set */
    public boolean hasCollisionEventID() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'collisionEventID' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearCollisionEventID() {
      collisionEventID = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'pad' field */
    public java.lang.Integer getPad() {
      return pad;
    }
    
    /** Sets the value of the 'pad' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setPad(int value) {
      validate(fields()[12], value);
      this.pad = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'pad' field has been set */
    public boolean hasPad() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'pad' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearPad() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'contactVelocity' field */
    public com.cohesionforce.dis.avro.Vector3Float getContactVelocity() {
      return contactVelocity;
    }
    
    /** Sets the value of the 'contactVelocity' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setContactVelocity(com.cohesionforce.dis.avro.Vector3Float value) {
      validate(fields()[13], value);
      this.contactVelocity = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'contactVelocity' field has been set */
    public boolean hasContactVelocity() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'contactVelocity' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearContactVelocity() {
      contactVelocity = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'mass' field */
    public java.lang.Float getMass() {
      return mass;
    }
    
    /** Sets the value of the 'mass' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setMass(float value) {
      validate(fields()[14], value);
      this.mass = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'mass' field has been set */
    public boolean hasMass() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'mass' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearMass() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'location' field */
    public com.cohesionforce.dis.avro.Vector3Float getLocation() {
      return location;
    }
    
    /** Sets the value of the 'location' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setLocation(com.cohesionforce.dis.avro.Vector3Float value) {
      validate(fields()[15], value);
      this.location = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'location' field has been set */
    public boolean hasLocation() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'location' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearLocation() {
      location = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'collisionResultXX' field */
    public java.lang.Float getCollisionResultXX() {
      return collisionResultXX;
    }
    
    /** Sets the value of the 'collisionResultXX' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setCollisionResultXX(float value) {
      validate(fields()[16], value);
      this.collisionResultXX = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'collisionResultXX' field has been set */
    public boolean hasCollisionResultXX() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'collisionResultXX' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearCollisionResultXX() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'collisionResultXY' field */
    public java.lang.Float getCollisionResultXY() {
      return collisionResultXY;
    }
    
    /** Sets the value of the 'collisionResultXY' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setCollisionResultXY(float value) {
      validate(fields()[17], value);
      this.collisionResultXY = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'collisionResultXY' field has been set */
    public boolean hasCollisionResultXY() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'collisionResultXY' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearCollisionResultXY() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'collisionResultXZ' field */
    public java.lang.Float getCollisionResultXZ() {
      return collisionResultXZ;
    }
    
    /** Sets the value of the 'collisionResultXZ' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setCollisionResultXZ(float value) {
      validate(fields()[18], value);
      this.collisionResultXZ = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'collisionResultXZ' field has been set */
    public boolean hasCollisionResultXZ() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'collisionResultXZ' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearCollisionResultXZ() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'collisionResultYY' field */
    public java.lang.Float getCollisionResultYY() {
      return collisionResultYY;
    }
    
    /** Sets the value of the 'collisionResultYY' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setCollisionResultYY(float value) {
      validate(fields()[19], value);
      this.collisionResultYY = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'collisionResultYY' field has been set */
    public boolean hasCollisionResultYY() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'collisionResultYY' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearCollisionResultYY() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'collisionResultYZ' field */
    public java.lang.Float getCollisionResultYZ() {
      return collisionResultYZ;
    }
    
    /** Sets the value of the 'collisionResultYZ' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setCollisionResultYZ(float value) {
      validate(fields()[20], value);
      this.collisionResultYZ = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'collisionResultYZ' field has been set */
    public boolean hasCollisionResultYZ() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'collisionResultYZ' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearCollisionResultYZ() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'collisionResultZZ' field */
    public java.lang.Float getCollisionResultZZ() {
      return collisionResultZZ;
    }
    
    /** Sets the value of the 'collisionResultZZ' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setCollisionResultZZ(float value) {
      validate(fields()[21], value);
      this.collisionResultZZ = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'collisionResultZZ' field has been set */
    public boolean hasCollisionResultZZ() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'collisionResultZZ' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearCollisionResultZZ() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'unitSurfaceNormal' field */
    public com.cohesionforce.dis.avro.Vector3Float getUnitSurfaceNormal() {
      return unitSurfaceNormal;
    }
    
    /** Sets the value of the 'unitSurfaceNormal' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setUnitSurfaceNormal(com.cohesionforce.dis.avro.Vector3Float value) {
      validate(fields()[22], value);
      this.unitSurfaceNormal = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'unitSurfaceNormal' field has been set */
    public boolean hasUnitSurfaceNormal() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'unitSurfaceNormal' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearUnitSurfaceNormal() {
      unitSurfaceNormal = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'coefficientOfRestitution' field */
    public java.lang.Float getCoefficientOfRestitution() {
      return coefficientOfRestitution;
    }
    
    /** Sets the value of the 'coefficientOfRestitution' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder setCoefficientOfRestitution(float value) {
      validate(fields()[23], value);
      this.coefficientOfRestitution = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'coefficientOfRestitution' field has been set */
    public boolean hasCoefficientOfRestitution() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'coefficientOfRestitution' field */
    public com.cohesionforce.dis.avro.CollisionElasticPdu.Builder clearCoefficientOfRestitution() {
      fieldSetFlags()[23] = false;
      return this;
    }

    @Override
    public CollisionElasticPdu build() {
      try {
        CollisionElasticPdu record = new CollisionElasticPdu();
        record.reception_timestamp = fieldSetFlags()[0] ? this.reception_timestamp : (com.cohesionforce.dis.avro.Time_t) defaultValue(fields()[0]);
        record.source_timestamp = fieldSetFlags()[1] ? this.source_timestamp : (com.cohesionforce.dis.avro.Time_t) defaultValue(fields()[1]);
        record.protocolVersion = fieldSetFlags()[2] ? this.protocolVersion : (java.lang.Integer) defaultValue(fields()[2]);
        record.exerciseID = fieldSetFlags()[3] ? this.exerciseID : (java.lang.Integer) defaultValue(fields()[3]);
        record.pduType = fieldSetFlags()[4] ? this.pduType : (java.lang.Integer) defaultValue(fields()[4]);
        record.protocolFamily = fieldSetFlags()[5] ? this.protocolFamily : (java.lang.Integer) defaultValue(fields()[5]);
        record.timestamp = fieldSetFlags()[6] ? this.timestamp : (java.lang.Long) defaultValue(fields()[6]);
        record.pduLength = fieldSetFlags()[7] ? this.pduLength : (java.lang.Integer) defaultValue(fields()[7]);
        record.padding = fieldSetFlags()[8] ? this.padding : (java.lang.Integer) defaultValue(fields()[8]);
        record.issuingEntityID = fieldSetFlags()[9] ? this.issuingEntityID : (com.cohesionforce.dis.avro.EntityID) defaultValue(fields()[9]);
        record.collidingEntityID = fieldSetFlags()[10] ? this.collidingEntityID : (com.cohesionforce.dis.avro.EntityID) defaultValue(fields()[10]);
        record.collisionEventID = fieldSetFlags()[11] ? this.collisionEventID : (com.cohesionforce.dis.avro.EventID) defaultValue(fields()[11]);
        record.pad = fieldSetFlags()[12] ? this.pad : (java.lang.Integer) defaultValue(fields()[12]);
        record.contactVelocity = fieldSetFlags()[13] ? this.contactVelocity : (com.cohesionforce.dis.avro.Vector3Float) defaultValue(fields()[13]);
        record.mass = fieldSetFlags()[14] ? this.mass : (java.lang.Float) defaultValue(fields()[14]);
        record.location = fieldSetFlags()[15] ? this.location : (com.cohesionforce.dis.avro.Vector3Float) defaultValue(fields()[15]);
        record.collisionResultXX = fieldSetFlags()[16] ? this.collisionResultXX : (java.lang.Float) defaultValue(fields()[16]);
        record.collisionResultXY = fieldSetFlags()[17] ? this.collisionResultXY : (java.lang.Float) defaultValue(fields()[17]);
        record.collisionResultXZ = fieldSetFlags()[18] ? this.collisionResultXZ : (java.lang.Float) defaultValue(fields()[18]);
        record.collisionResultYY = fieldSetFlags()[19] ? this.collisionResultYY : (java.lang.Float) defaultValue(fields()[19]);
        record.collisionResultYZ = fieldSetFlags()[20] ? this.collisionResultYZ : (java.lang.Float) defaultValue(fields()[20]);
        record.collisionResultZZ = fieldSetFlags()[21] ? this.collisionResultZZ : (java.lang.Float) defaultValue(fields()[21]);
        record.unitSurfaceNormal = fieldSetFlags()[22] ? this.unitSurfaceNormal : (com.cohesionforce.dis.avro.Vector3Float) defaultValue(fields()[22]);
        record.coefficientOfRestitution = fieldSetFlags()[23] ? this.coefficientOfRestitution : (java.lang.Float) defaultValue(fields()[23]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
