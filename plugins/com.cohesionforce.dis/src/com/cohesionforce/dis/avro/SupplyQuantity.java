/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cohesionforce.dis.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SupplyQuantity extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SupplyQuantity\",\"namespace\":\"com.cohesionforce.dis.avro\",\"fields\":[{\"name\":\"supplyType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EntityType\",\"fields\":[{\"name\":\"entityKind\",\"type\":\"int\"},{\"name\":\"domain\",\"type\":\"int\"},{\"name\":\"country\",\"type\":\"int\"},{\"name\":\"category\",\"type\":\"int\"},{\"name\":\"subcategory\",\"type\":\"int\"},{\"name\":\"spec\",\"type\":\"int\"},{\"name\":\"extra\",\"type\":\"int\"}]}]},{\"name\":\"quantity\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.cohesionforce.dis.avro.EntityType supplyType;
  @Deprecated public int quantity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SupplyQuantity() {}

  /**
   * All-args constructor.
   */
  public SupplyQuantity(com.cohesionforce.dis.avro.EntityType supplyType, java.lang.Integer quantity) {
    this.supplyType = supplyType;
    this.quantity = quantity;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return supplyType;
    case 1: return quantity;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: supplyType = (com.cohesionforce.dis.avro.EntityType)value$; break;
    case 1: quantity = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'supplyType' field.
   */
  public com.cohesionforce.dis.avro.EntityType getSupplyType() {
    return supplyType;
  }

  /**
   * Sets the value of the 'supplyType' field.
   * @param value the value to set.
   */
  public void setSupplyType(com.cohesionforce.dis.avro.EntityType value) {
    this.supplyType = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   */
  public java.lang.Integer getQuantity() {
    return quantity;
  }

  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Integer value) {
    this.quantity = value;
  }

  /** Creates a new SupplyQuantity RecordBuilder */
  public static com.cohesionforce.dis.avro.SupplyQuantity.Builder newBuilder() {
    return new com.cohesionforce.dis.avro.SupplyQuantity.Builder();
  }
  
  /** Creates a new SupplyQuantity RecordBuilder by copying an existing Builder */
  public static com.cohesionforce.dis.avro.SupplyQuantity.Builder newBuilder(com.cohesionforce.dis.avro.SupplyQuantity.Builder other) {
    return new com.cohesionforce.dis.avro.SupplyQuantity.Builder(other);
  }
  
  /** Creates a new SupplyQuantity RecordBuilder by copying an existing SupplyQuantity instance */
  public static com.cohesionforce.dis.avro.SupplyQuantity.Builder newBuilder(com.cohesionforce.dis.avro.SupplyQuantity other) {
    return new com.cohesionforce.dis.avro.SupplyQuantity.Builder(other);
  }
  
  /**
   * RecordBuilder for SupplyQuantity instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SupplyQuantity>
    implements org.apache.avro.data.RecordBuilder<SupplyQuantity> {

    private com.cohesionforce.dis.avro.EntityType supplyType;
    private int quantity;

    /** Creates a new Builder */
    private Builder() {
      super(com.cohesionforce.dis.avro.SupplyQuantity.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cohesionforce.dis.avro.SupplyQuantity.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.supplyType)) {
        this.supplyType = data().deepCopy(fields()[0].schema(), other.supplyType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.quantity)) {
        this.quantity = data().deepCopy(fields()[1].schema(), other.quantity);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SupplyQuantity instance */
    private Builder(com.cohesionforce.dis.avro.SupplyQuantity other) {
            super(com.cohesionforce.dis.avro.SupplyQuantity.SCHEMA$);
      if (isValidValue(fields()[0], other.supplyType)) {
        this.supplyType = data().deepCopy(fields()[0].schema(), other.supplyType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.quantity)) {
        this.quantity = data().deepCopy(fields()[1].schema(), other.quantity);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'supplyType' field */
    public com.cohesionforce.dis.avro.EntityType getSupplyType() {
      return supplyType;
    }
    
    /** Sets the value of the 'supplyType' field */
    public com.cohesionforce.dis.avro.SupplyQuantity.Builder setSupplyType(com.cohesionforce.dis.avro.EntityType value) {
      validate(fields()[0], value);
      this.supplyType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'supplyType' field has been set */
    public boolean hasSupplyType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'supplyType' field */
    public com.cohesionforce.dis.avro.SupplyQuantity.Builder clearSupplyType() {
      supplyType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'quantity' field */
    public java.lang.Integer getQuantity() {
      return quantity;
    }
    
    /** Sets the value of the 'quantity' field */
    public com.cohesionforce.dis.avro.SupplyQuantity.Builder setQuantity(int value) {
      validate(fields()[1], value);
      this.quantity = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'quantity' field has been set */
    public boolean hasQuantity() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'quantity' field */
    public com.cohesionforce.dis.avro.SupplyQuantity.Builder clearQuantity() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public SupplyQuantity build() {
      try {
        SupplyQuantity record = new SupplyQuantity();
        record.supplyType = fieldSetFlags()[0] ? this.supplyType : (com.cohesionforce.dis.avro.EntityType) defaultValue(fields()[0]);
        record.quantity = fieldSetFlags()[1] ? this.quantity : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
