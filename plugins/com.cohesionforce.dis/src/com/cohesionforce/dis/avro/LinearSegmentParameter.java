/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cohesionforce.dis.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LinearSegmentParameter extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LinearSegmentParameter\",\"namespace\":\"com.cohesionforce.dis.avro\",\"fields\":[{\"name\":\"segmentNumber\",\"type\":\"int\"},{\"name\":\"segmentAppearance\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"SixByteChunk\",\"fields\":[{\"name\":\"otherParameters\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}]}]}]},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vector3Double\",\"fields\":[{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"z\",\"type\":\"double\"}]}]},{\"name\":\"orientation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Orientation\",\"fields\":[{\"name\":\"psi\",\"type\":\"float\"},{\"name\":\"theta\",\"type\":\"float\"},{\"name\":\"phi\",\"type\":\"float\"}]}]},{\"name\":\"segmentLength\",\"type\":\"int\"},{\"name\":\"segmentWidth\",\"type\":\"int\"},{\"name\":\"segmentHeight\",\"type\":\"int\"},{\"name\":\"segmentDepth\",\"type\":\"int\"},{\"name\":\"pad1\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int segmentNumber;
  @Deprecated public com.cohesionforce.dis.avro.SixByteChunk segmentAppearance;
  @Deprecated public com.cohesionforce.dis.avro.Vector3Double location;
  @Deprecated public com.cohesionforce.dis.avro.Orientation orientation;
  @Deprecated public int segmentLength;
  @Deprecated public int segmentWidth;
  @Deprecated public int segmentHeight;
  @Deprecated public int segmentDepth;
  @Deprecated public long pad1;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public LinearSegmentParameter() {}

  /**
   * All-args constructor.
   */
  public LinearSegmentParameter(java.lang.Integer segmentNumber, com.cohesionforce.dis.avro.SixByteChunk segmentAppearance, com.cohesionforce.dis.avro.Vector3Double location, com.cohesionforce.dis.avro.Orientation orientation, java.lang.Integer segmentLength, java.lang.Integer segmentWidth, java.lang.Integer segmentHeight, java.lang.Integer segmentDepth, java.lang.Long pad1) {
    this.segmentNumber = segmentNumber;
    this.segmentAppearance = segmentAppearance;
    this.location = location;
    this.orientation = orientation;
    this.segmentLength = segmentLength;
    this.segmentWidth = segmentWidth;
    this.segmentHeight = segmentHeight;
    this.segmentDepth = segmentDepth;
    this.pad1 = pad1;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return segmentNumber;
    case 1: return segmentAppearance;
    case 2: return location;
    case 3: return orientation;
    case 4: return segmentLength;
    case 5: return segmentWidth;
    case 6: return segmentHeight;
    case 7: return segmentDepth;
    case 8: return pad1;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: segmentNumber = (java.lang.Integer)value$; break;
    case 1: segmentAppearance = (com.cohesionforce.dis.avro.SixByteChunk)value$; break;
    case 2: location = (com.cohesionforce.dis.avro.Vector3Double)value$; break;
    case 3: orientation = (com.cohesionforce.dis.avro.Orientation)value$; break;
    case 4: segmentLength = (java.lang.Integer)value$; break;
    case 5: segmentWidth = (java.lang.Integer)value$; break;
    case 6: segmentHeight = (java.lang.Integer)value$; break;
    case 7: segmentDepth = (java.lang.Integer)value$; break;
    case 8: pad1 = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'segmentNumber' field.
   */
  public java.lang.Integer getSegmentNumber() {
    return segmentNumber;
  }

  /**
   * Sets the value of the 'segmentNumber' field.
   * @param value the value to set.
   */
  public void setSegmentNumber(java.lang.Integer value) {
    this.segmentNumber = value;
  }

  /**
   * Gets the value of the 'segmentAppearance' field.
   */
  public com.cohesionforce.dis.avro.SixByteChunk getSegmentAppearance() {
    return segmentAppearance;
  }

  /**
   * Sets the value of the 'segmentAppearance' field.
   * @param value the value to set.
   */
  public void setSegmentAppearance(com.cohesionforce.dis.avro.SixByteChunk value) {
    this.segmentAppearance = value;
  }

  /**
   * Gets the value of the 'location' field.
   */
  public com.cohesionforce.dis.avro.Vector3Double getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(com.cohesionforce.dis.avro.Vector3Double value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'orientation' field.
   */
  public com.cohesionforce.dis.avro.Orientation getOrientation() {
    return orientation;
  }

  /**
   * Sets the value of the 'orientation' field.
   * @param value the value to set.
   */
  public void setOrientation(com.cohesionforce.dis.avro.Orientation value) {
    this.orientation = value;
  }

  /**
   * Gets the value of the 'segmentLength' field.
   */
  public java.lang.Integer getSegmentLength() {
    return segmentLength;
  }

  /**
   * Sets the value of the 'segmentLength' field.
   * @param value the value to set.
   */
  public void setSegmentLength(java.lang.Integer value) {
    this.segmentLength = value;
  }

  /**
   * Gets the value of the 'segmentWidth' field.
   */
  public java.lang.Integer getSegmentWidth() {
    return segmentWidth;
  }

  /**
   * Sets the value of the 'segmentWidth' field.
   * @param value the value to set.
   */
  public void setSegmentWidth(java.lang.Integer value) {
    this.segmentWidth = value;
  }

  /**
   * Gets the value of the 'segmentHeight' field.
   */
  public java.lang.Integer getSegmentHeight() {
    return segmentHeight;
  }

  /**
   * Sets the value of the 'segmentHeight' field.
   * @param value the value to set.
   */
  public void setSegmentHeight(java.lang.Integer value) {
    this.segmentHeight = value;
  }

  /**
   * Gets the value of the 'segmentDepth' field.
   */
  public java.lang.Integer getSegmentDepth() {
    return segmentDepth;
  }

  /**
   * Sets the value of the 'segmentDepth' field.
   * @param value the value to set.
   */
  public void setSegmentDepth(java.lang.Integer value) {
    this.segmentDepth = value;
  }

  /**
   * Gets the value of the 'pad1' field.
   */
  public java.lang.Long getPad1() {
    return pad1;
  }

  /**
   * Sets the value of the 'pad1' field.
   * @param value the value to set.
   */
  public void setPad1(java.lang.Long value) {
    this.pad1 = value;
  }

  /** Creates a new LinearSegmentParameter RecordBuilder */
  public static com.cohesionforce.dis.avro.LinearSegmentParameter.Builder newBuilder() {
    return new com.cohesionforce.dis.avro.LinearSegmentParameter.Builder();
  }
  
  /** Creates a new LinearSegmentParameter RecordBuilder by copying an existing Builder */
  public static com.cohesionforce.dis.avro.LinearSegmentParameter.Builder newBuilder(com.cohesionforce.dis.avro.LinearSegmentParameter.Builder other) {
    return new com.cohesionforce.dis.avro.LinearSegmentParameter.Builder(other);
  }
  
  /** Creates a new LinearSegmentParameter RecordBuilder by copying an existing LinearSegmentParameter instance */
  public static com.cohesionforce.dis.avro.LinearSegmentParameter.Builder newBuilder(com.cohesionforce.dis.avro.LinearSegmentParameter other) {
    return new com.cohesionforce.dis.avro.LinearSegmentParameter.Builder(other);
  }
  
  /**
   * RecordBuilder for LinearSegmentParameter instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LinearSegmentParameter>
    implements org.apache.avro.data.RecordBuilder<LinearSegmentParameter> {

    private int segmentNumber;
    private com.cohesionforce.dis.avro.SixByteChunk segmentAppearance;
    private com.cohesionforce.dis.avro.Vector3Double location;
    private com.cohesionforce.dis.avro.Orientation orientation;
    private int segmentLength;
    private int segmentWidth;
    private int segmentHeight;
    private int segmentDepth;
    private long pad1;

    /** Creates a new Builder */
    private Builder() {
      super(com.cohesionforce.dis.avro.LinearSegmentParameter.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cohesionforce.dis.avro.LinearSegmentParameter.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.segmentNumber)) {
        this.segmentNumber = data().deepCopy(fields()[0].schema(), other.segmentNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.segmentAppearance)) {
        this.segmentAppearance = data().deepCopy(fields()[1].schema(), other.segmentAppearance);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orientation)) {
        this.orientation = data().deepCopy(fields()[3].schema(), other.orientation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.segmentLength)) {
        this.segmentLength = data().deepCopy(fields()[4].schema(), other.segmentLength);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.segmentWidth)) {
        this.segmentWidth = data().deepCopy(fields()[5].schema(), other.segmentWidth);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.segmentHeight)) {
        this.segmentHeight = data().deepCopy(fields()[6].schema(), other.segmentHeight);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.segmentDepth)) {
        this.segmentDepth = data().deepCopy(fields()[7].schema(), other.segmentDepth);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pad1)) {
        this.pad1 = data().deepCopy(fields()[8].schema(), other.pad1);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing LinearSegmentParameter instance */
    private Builder(com.cohesionforce.dis.avro.LinearSegmentParameter other) {
            super(com.cohesionforce.dis.avro.LinearSegmentParameter.SCHEMA$);
      if (isValidValue(fields()[0], other.segmentNumber)) {
        this.segmentNumber = data().deepCopy(fields()[0].schema(), other.segmentNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.segmentAppearance)) {
        this.segmentAppearance = data().deepCopy(fields()[1].schema(), other.segmentAppearance);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orientation)) {
        this.orientation = data().deepCopy(fields()[3].schema(), other.orientation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.segmentLength)) {
        this.segmentLength = data().deepCopy(fields()[4].schema(), other.segmentLength);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.segmentWidth)) {
        this.segmentWidth = data().deepCopy(fields()[5].schema(), other.segmentWidth);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.segmentHeight)) {
        this.segmentHeight = data().deepCopy(fields()[6].schema(), other.segmentHeight);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.segmentDepth)) {
        this.segmentDepth = data().deepCopy(fields()[7].schema(), other.segmentDepth);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pad1)) {
        this.pad1 = data().deepCopy(fields()[8].schema(), other.pad1);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'segmentNumber' field */
    public java.lang.Integer getSegmentNumber() {
      return segmentNumber;
    }
    
    /** Sets the value of the 'segmentNumber' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder setSegmentNumber(int value) {
      validate(fields()[0], value);
      this.segmentNumber = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'segmentNumber' field has been set */
    public boolean hasSegmentNumber() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'segmentNumber' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder clearSegmentNumber() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'segmentAppearance' field */
    public com.cohesionforce.dis.avro.SixByteChunk getSegmentAppearance() {
      return segmentAppearance;
    }
    
    /** Sets the value of the 'segmentAppearance' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder setSegmentAppearance(com.cohesionforce.dis.avro.SixByteChunk value) {
      validate(fields()[1], value);
      this.segmentAppearance = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'segmentAppearance' field has been set */
    public boolean hasSegmentAppearance() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'segmentAppearance' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder clearSegmentAppearance() {
      segmentAppearance = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'location' field */
    public com.cohesionforce.dis.avro.Vector3Double getLocation() {
      return location;
    }
    
    /** Sets the value of the 'location' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder setLocation(com.cohesionforce.dis.avro.Vector3Double value) {
      validate(fields()[2], value);
      this.location = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'location' field has been set */
    public boolean hasLocation() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'location' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder clearLocation() {
      location = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'orientation' field */
    public com.cohesionforce.dis.avro.Orientation getOrientation() {
      return orientation;
    }
    
    /** Sets the value of the 'orientation' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder setOrientation(com.cohesionforce.dis.avro.Orientation value) {
      validate(fields()[3], value);
      this.orientation = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'orientation' field has been set */
    public boolean hasOrientation() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'orientation' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder clearOrientation() {
      orientation = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'segmentLength' field */
    public java.lang.Integer getSegmentLength() {
      return segmentLength;
    }
    
    /** Sets the value of the 'segmentLength' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder setSegmentLength(int value) {
      validate(fields()[4], value);
      this.segmentLength = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'segmentLength' field has been set */
    public boolean hasSegmentLength() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'segmentLength' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder clearSegmentLength() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'segmentWidth' field */
    public java.lang.Integer getSegmentWidth() {
      return segmentWidth;
    }
    
    /** Sets the value of the 'segmentWidth' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder setSegmentWidth(int value) {
      validate(fields()[5], value);
      this.segmentWidth = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'segmentWidth' field has been set */
    public boolean hasSegmentWidth() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'segmentWidth' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder clearSegmentWidth() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'segmentHeight' field */
    public java.lang.Integer getSegmentHeight() {
      return segmentHeight;
    }
    
    /** Sets the value of the 'segmentHeight' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder setSegmentHeight(int value) {
      validate(fields()[6], value);
      this.segmentHeight = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'segmentHeight' field has been set */
    public boolean hasSegmentHeight() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'segmentHeight' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder clearSegmentHeight() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'segmentDepth' field */
    public java.lang.Integer getSegmentDepth() {
      return segmentDepth;
    }
    
    /** Sets the value of the 'segmentDepth' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder setSegmentDepth(int value) {
      validate(fields()[7], value);
      this.segmentDepth = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'segmentDepth' field has been set */
    public boolean hasSegmentDepth() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'segmentDepth' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder clearSegmentDepth() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'pad1' field */
    public java.lang.Long getPad1() {
      return pad1;
    }
    
    /** Sets the value of the 'pad1' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder setPad1(long value) {
      validate(fields()[8], value);
      this.pad1 = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'pad1' field has been set */
    public boolean hasPad1() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'pad1' field */
    public com.cohesionforce.dis.avro.LinearSegmentParameter.Builder clearPad1() {
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public LinearSegmentParameter build() {
      try {
        LinearSegmentParameter record = new LinearSegmentParameter();
        record.segmentNumber = fieldSetFlags()[0] ? this.segmentNumber : (java.lang.Integer) defaultValue(fields()[0]);
        record.segmentAppearance = fieldSetFlags()[1] ? this.segmentAppearance : (com.cohesionforce.dis.avro.SixByteChunk) defaultValue(fields()[1]);
        record.location = fieldSetFlags()[2] ? this.location : (com.cohesionforce.dis.avro.Vector3Double) defaultValue(fields()[2]);
        record.orientation = fieldSetFlags()[3] ? this.orientation : (com.cohesionforce.dis.avro.Orientation) defaultValue(fields()[3]);
        record.segmentLength = fieldSetFlags()[4] ? this.segmentLength : (java.lang.Integer) defaultValue(fields()[4]);
        record.segmentWidth = fieldSetFlags()[5] ? this.segmentWidth : (java.lang.Integer) defaultValue(fields()[5]);
        record.segmentHeight = fieldSetFlags()[6] ? this.segmentHeight : (java.lang.Integer) defaultValue(fields()[6]);
        record.segmentDepth = fieldSetFlags()[7] ? this.segmentDepth : (java.lang.Integer) defaultValue(fields()[7]);
        record.pad1 = fieldSetFlags()[8] ? this.pad1 : (java.lang.Long) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
