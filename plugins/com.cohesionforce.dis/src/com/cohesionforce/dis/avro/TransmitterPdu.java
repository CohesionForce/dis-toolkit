/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cohesionforce.dis.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TransmitterPdu extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TransmitterPdu\",\"namespace\":\"com.cohesionforce.dis.avro\",\"fields\":[{\"name\":\"reception_timestamp\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Time_t\",\"fields\":[{\"name\":\"sec\",\"type\":\"int\"},{\"name\":\"nanosec\",\"type\":\"int\"}]}]},{\"name\":\"source_timestamp\",\"type\":[\"null\",\"Time_t\"]},{\"name\":\"protocolVersion\",\"type\":\"int\"},{\"name\":\"exerciseID\",\"type\":\"int\"},{\"name\":\"pduType\",\"type\":\"int\"},{\"name\":\"protocolFamily\",\"type\":\"int\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"pduLength\",\"type\":\"int\"},{\"name\":\"padding\",\"type\":\"int\"},{\"name\":\"entityId\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EntityID\",\"fields\":[{\"name\":\"site\",\"type\":\"int\"},{\"name\":\"application\",\"type\":\"int\"},{\"name\":\"entity\",\"type\":\"int\"}]}]},{\"name\":\"radioId\",\"type\":\"int\"},{\"name\":\"radioEntityType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"RadioEntityType\",\"fields\":[{\"name\":\"entityKind\",\"type\":\"int\"},{\"name\":\"domain\",\"type\":\"int\"},{\"name\":\"country\",\"type\":\"int\"},{\"name\":\"category\",\"type\":\"int\"},{\"name\":\"nomenclatureVersion\",\"type\":\"int\"},{\"name\":\"nomenclature\",\"type\":\"int\"}]}]},{\"name\":\"transmitState\",\"type\":\"int\"},{\"name\":\"inputSource\",\"type\":\"int\"},{\"name\":\"padding1\",\"type\":\"int\"},{\"name\":\"antennaLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vector3Double\",\"fields\":[{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"z\",\"type\":\"double\"}]}]},{\"name\":\"relativeAntennaLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vector3Float\",\"fields\":[{\"name\":\"x\",\"type\":\"float\"},{\"name\":\"y\",\"type\":\"float\"},{\"name\":\"z\",\"type\":\"float\"}]}]},{\"name\":\"antennaPatternType\",\"type\":\"int\"},{\"name\":\"numberOfAntennaPatternList\",\"type\":\"int\"},{\"name\":\"frequency\",\"type\":\"long\"},{\"name\":\"transmitFrequencyBandwidth\",\"type\":\"float\"},{\"name\":\"power\",\"type\":\"float\"},{\"name\":\"modulationType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ModulationType\",\"fields\":[{\"name\":\"spreadSpectrum\",\"type\":\"int\"},{\"name\":\"major\",\"type\":\"int\"},{\"name\":\"detail\",\"type\":\"int\"},{\"name\":\"system\",\"type\":\"int\"}]}]},{\"name\":\"cryptoSystem\",\"type\":\"int\"},{\"name\":\"cryptoKeyId\",\"type\":\"int\"},{\"name\":\"numberOfModulationParametersList\",\"type\":\"int\"},{\"name\":\"padding2\",\"type\":\"int\"},{\"name\":\"padding3\",\"type\":\"int\"},{\"name\":\"modulationParametersList\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Vector3Float\"}]},{\"name\":\"antennaPatternList\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Vector3Float\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.cohesionforce.dis.avro.Time_t reception_timestamp;
  @Deprecated public com.cohesionforce.dis.avro.Time_t source_timestamp;
  @Deprecated public int protocolVersion;
  @Deprecated public int exerciseID;
  @Deprecated public int pduType;
  @Deprecated public int protocolFamily;
  @Deprecated public long timestamp;
  @Deprecated public int pduLength;
  @Deprecated public int padding;
  @Deprecated public com.cohesionforce.dis.avro.EntityID entityId;
  @Deprecated public int radioId;
  @Deprecated public com.cohesionforce.dis.avro.RadioEntityType radioEntityType;
  @Deprecated public int transmitState;
  @Deprecated public int inputSource;
  @Deprecated public int padding1;
  @Deprecated public com.cohesionforce.dis.avro.Vector3Double antennaLocation;
  @Deprecated public com.cohesionforce.dis.avro.Vector3Float relativeAntennaLocation;
  @Deprecated public int antennaPatternType;
  @Deprecated public int numberOfAntennaPatternList;
  @Deprecated public long frequency;
  @Deprecated public float transmitFrequencyBandwidth;
  @Deprecated public float power;
  @Deprecated public com.cohesionforce.dis.avro.ModulationType modulationType;
  @Deprecated public int cryptoSystem;
  @Deprecated public int cryptoKeyId;
  @Deprecated public int numberOfModulationParametersList;
  @Deprecated public int padding2;
  @Deprecated public int padding3;
  @Deprecated public java.util.List<com.cohesionforce.dis.avro.Vector3Float> modulationParametersList;
  @Deprecated public java.util.List<com.cohesionforce.dis.avro.Vector3Float> antennaPatternList;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TransmitterPdu() {}

  /**
   * All-args constructor.
   */
  public TransmitterPdu(com.cohesionforce.dis.avro.Time_t reception_timestamp, com.cohesionforce.dis.avro.Time_t source_timestamp, java.lang.Integer protocolVersion, java.lang.Integer exerciseID, java.lang.Integer pduType, java.lang.Integer protocolFamily, java.lang.Long timestamp, java.lang.Integer pduLength, java.lang.Integer padding, com.cohesionforce.dis.avro.EntityID entityId, java.lang.Integer radioId, com.cohesionforce.dis.avro.RadioEntityType radioEntityType, java.lang.Integer transmitState, java.lang.Integer inputSource, java.lang.Integer padding1, com.cohesionforce.dis.avro.Vector3Double antennaLocation, com.cohesionforce.dis.avro.Vector3Float relativeAntennaLocation, java.lang.Integer antennaPatternType, java.lang.Integer numberOfAntennaPatternList, java.lang.Long frequency, java.lang.Float transmitFrequencyBandwidth, java.lang.Float power, com.cohesionforce.dis.avro.ModulationType modulationType, java.lang.Integer cryptoSystem, java.lang.Integer cryptoKeyId, java.lang.Integer numberOfModulationParametersList, java.lang.Integer padding2, java.lang.Integer padding3, java.util.List<com.cohesionforce.dis.avro.Vector3Float> modulationParametersList, java.util.List<com.cohesionforce.dis.avro.Vector3Float> antennaPatternList) {
    this.reception_timestamp = reception_timestamp;
    this.source_timestamp = source_timestamp;
    this.protocolVersion = protocolVersion;
    this.exerciseID = exerciseID;
    this.pduType = pduType;
    this.protocolFamily = protocolFamily;
    this.timestamp = timestamp;
    this.pduLength = pduLength;
    this.padding = padding;
    this.entityId = entityId;
    this.radioId = radioId;
    this.radioEntityType = radioEntityType;
    this.transmitState = transmitState;
    this.inputSource = inputSource;
    this.padding1 = padding1;
    this.antennaLocation = antennaLocation;
    this.relativeAntennaLocation = relativeAntennaLocation;
    this.antennaPatternType = antennaPatternType;
    this.numberOfAntennaPatternList = numberOfAntennaPatternList;
    this.frequency = frequency;
    this.transmitFrequencyBandwidth = transmitFrequencyBandwidth;
    this.power = power;
    this.modulationType = modulationType;
    this.cryptoSystem = cryptoSystem;
    this.cryptoKeyId = cryptoKeyId;
    this.numberOfModulationParametersList = numberOfModulationParametersList;
    this.padding2 = padding2;
    this.padding3 = padding3;
    this.modulationParametersList = modulationParametersList;
    this.antennaPatternList = antennaPatternList;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return reception_timestamp;
    case 1: return source_timestamp;
    case 2: return protocolVersion;
    case 3: return exerciseID;
    case 4: return pduType;
    case 5: return protocolFamily;
    case 6: return timestamp;
    case 7: return pduLength;
    case 8: return padding;
    case 9: return entityId;
    case 10: return radioId;
    case 11: return radioEntityType;
    case 12: return transmitState;
    case 13: return inputSource;
    case 14: return padding1;
    case 15: return antennaLocation;
    case 16: return relativeAntennaLocation;
    case 17: return antennaPatternType;
    case 18: return numberOfAntennaPatternList;
    case 19: return frequency;
    case 20: return transmitFrequencyBandwidth;
    case 21: return power;
    case 22: return modulationType;
    case 23: return cryptoSystem;
    case 24: return cryptoKeyId;
    case 25: return numberOfModulationParametersList;
    case 26: return padding2;
    case 27: return padding3;
    case 28: return modulationParametersList;
    case 29: return antennaPatternList;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: reception_timestamp = (com.cohesionforce.dis.avro.Time_t)value$; break;
    case 1: source_timestamp = (com.cohesionforce.dis.avro.Time_t)value$; break;
    case 2: protocolVersion = (java.lang.Integer)value$; break;
    case 3: exerciseID = (java.lang.Integer)value$; break;
    case 4: pduType = (java.lang.Integer)value$; break;
    case 5: protocolFamily = (java.lang.Integer)value$; break;
    case 6: timestamp = (java.lang.Long)value$; break;
    case 7: pduLength = (java.lang.Integer)value$; break;
    case 8: padding = (java.lang.Integer)value$; break;
    case 9: entityId = (com.cohesionforce.dis.avro.EntityID)value$; break;
    case 10: radioId = (java.lang.Integer)value$; break;
    case 11: radioEntityType = (com.cohesionforce.dis.avro.RadioEntityType)value$; break;
    case 12: transmitState = (java.lang.Integer)value$; break;
    case 13: inputSource = (java.lang.Integer)value$; break;
    case 14: padding1 = (java.lang.Integer)value$; break;
    case 15: antennaLocation = (com.cohesionforce.dis.avro.Vector3Double)value$; break;
    case 16: relativeAntennaLocation = (com.cohesionforce.dis.avro.Vector3Float)value$; break;
    case 17: antennaPatternType = (java.lang.Integer)value$; break;
    case 18: numberOfAntennaPatternList = (java.lang.Integer)value$; break;
    case 19: frequency = (java.lang.Long)value$; break;
    case 20: transmitFrequencyBandwidth = (java.lang.Float)value$; break;
    case 21: power = (java.lang.Float)value$; break;
    case 22: modulationType = (com.cohesionforce.dis.avro.ModulationType)value$; break;
    case 23: cryptoSystem = (java.lang.Integer)value$; break;
    case 24: cryptoKeyId = (java.lang.Integer)value$; break;
    case 25: numberOfModulationParametersList = (java.lang.Integer)value$; break;
    case 26: padding2 = (java.lang.Integer)value$; break;
    case 27: padding3 = (java.lang.Integer)value$; break;
    case 28: modulationParametersList = (java.util.List<com.cohesionforce.dis.avro.Vector3Float>)value$; break;
    case 29: antennaPatternList = (java.util.List<com.cohesionforce.dis.avro.Vector3Float>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'reception_timestamp' field.
   */
  public com.cohesionforce.dis.avro.Time_t getReceptionTimestamp() {
    return reception_timestamp;
  }

  /**
   * Sets the value of the 'reception_timestamp' field.
   * @param value the value to set.
   */
  public void setReceptionTimestamp(com.cohesionforce.dis.avro.Time_t value) {
    this.reception_timestamp = value;
  }

  /**
   * Gets the value of the 'source_timestamp' field.
   */
  public com.cohesionforce.dis.avro.Time_t getSourceTimestamp() {
    return source_timestamp;
  }

  /**
   * Sets the value of the 'source_timestamp' field.
   * @param value the value to set.
   */
  public void setSourceTimestamp(com.cohesionforce.dis.avro.Time_t value) {
    this.source_timestamp = value;
  }

  /**
   * Gets the value of the 'protocolVersion' field.
   */
  public java.lang.Integer getProtocolVersion() {
    return protocolVersion;
  }

  /**
   * Sets the value of the 'protocolVersion' field.
   * @param value the value to set.
   */
  public void setProtocolVersion(java.lang.Integer value) {
    this.protocolVersion = value;
  }

  /**
   * Gets the value of the 'exerciseID' field.
   */
  public java.lang.Integer getExerciseID() {
    return exerciseID;
  }

  /**
   * Sets the value of the 'exerciseID' field.
   * @param value the value to set.
   */
  public void setExerciseID(java.lang.Integer value) {
    this.exerciseID = value;
  }

  /**
   * Gets the value of the 'pduType' field.
   */
  public java.lang.Integer getPduType() {
    return pduType;
  }

  /**
   * Sets the value of the 'pduType' field.
   * @param value the value to set.
   */
  public void setPduType(java.lang.Integer value) {
    this.pduType = value;
  }

  /**
   * Gets the value of the 'protocolFamily' field.
   */
  public java.lang.Integer getProtocolFamily() {
    return protocolFamily;
  }

  /**
   * Sets the value of the 'protocolFamily' field.
   * @param value the value to set.
   */
  public void setProtocolFamily(java.lang.Integer value) {
    this.protocolFamily = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'pduLength' field.
   */
  public java.lang.Integer getPduLength() {
    return pduLength;
  }

  /**
   * Sets the value of the 'pduLength' field.
   * @param value the value to set.
   */
  public void setPduLength(java.lang.Integer value) {
    this.pduLength = value;
  }

  /**
   * Gets the value of the 'padding' field.
   */
  public java.lang.Integer getPadding() {
    return padding;
  }

  /**
   * Sets the value of the 'padding' field.
   * @param value the value to set.
   */
  public void setPadding(java.lang.Integer value) {
    this.padding = value;
  }

  /**
   * Gets the value of the 'entityId' field.
   */
  public com.cohesionforce.dis.avro.EntityID getEntityId() {
    return entityId;
  }

  /**
   * Sets the value of the 'entityId' field.
   * @param value the value to set.
   */
  public void setEntityId(com.cohesionforce.dis.avro.EntityID value) {
    this.entityId = value;
  }

  /**
   * Gets the value of the 'radioId' field.
   */
  public java.lang.Integer getRadioId() {
    return radioId;
  }

  /**
   * Sets the value of the 'radioId' field.
   * @param value the value to set.
   */
  public void setRadioId(java.lang.Integer value) {
    this.radioId = value;
  }

  /**
   * Gets the value of the 'radioEntityType' field.
   */
  public com.cohesionforce.dis.avro.RadioEntityType getRadioEntityType() {
    return radioEntityType;
  }

  /**
   * Sets the value of the 'radioEntityType' field.
   * @param value the value to set.
   */
  public void setRadioEntityType(com.cohesionforce.dis.avro.RadioEntityType value) {
    this.radioEntityType = value;
  }

  /**
   * Gets the value of the 'transmitState' field.
   */
  public java.lang.Integer getTransmitState() {
    return transmitState;
  }

  /**
   * Sets the value of the 'transmitState' field.
   * @param value the value to set.
   */
  public void setTransmitState(java.lang.Integer value) {
    this.transmitState = value;
  }

  /**
   * Gets the value of the 'inputSource' field.
   */
  public java.lang.Integer getInputSource() {
    return inputSource;
  }

  /**
   * Sets the value of the 'inputSource' field.
   * @param value the value to set.
   */
  public void setInputSource(java.lang.Integer value) {
    this.inputSource = value;
  }

  /**
   * Gets the value of the 'padding1' field.
   */
  public java.lang.Integer getPadding1() {
    return padding1;
  }

  /**
   * Sets the value of the 'padding1' field.
   * @param value the value to set.
   */
  public void setPadding1(java.lang.Integer value) {
    this.padding1 = value;
  }

  /**
   * Gets the value of the 'antennaLocation' field.
   */
  public com.cohesionforce.dis.avro.Vector3Double getAntennaLocation() {
    return antennaLocation;
  }

  /**
   * Sets the value of the 'antennaLocation' field.
   * @param value the value to set.
   */
  public void setAntennaLocation(com.cohesionforce.dis.avro.Vector3Double value) {
    this.antennaLocation = value;
  }

  /**
   * Gets the value of the 'relativeAntennaLocation' field.
   */
  public com.cohesionforce.dis.avro.Vector3Float getRelativeAntennaLocation() {
    return relativeAntennaLocation;
  }

  /**
   * Sets the value of the 'relativeAntennaLocation' field.
   * @param value the value to set.
   */
  public void setRelativeAntennaLocation(com.cohesionforce.dis.avro.Vector3Float value) {
    this.relativeAntennaLocation = value;
  }

  /**
   * Gets the value of the 'antennaPatternType' field.
   */
  public java.lang.Integer getAntennaPatternType() {
    return antennaPatternType;
  }

  /**
   * Sets the value of the 'antennaPatternType' field.
   * @param value the value to set.
   */
  public void setAntennaPatternType(java.lang.Integer value) {
    this.antennaPatternType = value;
  }

  /**
   * Gets the value of the 'numberOfAntennaPatternList' field.
   */
  public java.lang.Integer getNumberOfAntennaPatternList() {
    return numberOfAntennaPatternList;
  }

  /**
   * Sets the value of the 'numberOfAntennaPatternList' field.
   * @param value the value to set.
   */
  public void setNumberOfAntennaPatternList(java.lang.Integer value) {
    this.numberOfAntennaPatternList = value;
  }

  /**
   * Gets the value of the 'frequency' field.
   */
  public java.lang.Long getFrequency() {
    return frequency;
  }

  /**
   * Sets the value of the 'frequency' field.
   * @param value the value to set.
   */
  public void setFrequency(java.lang.Long value) {
    this.frequency = value;
  }

  /**
   * Gets the value of the 'transmitFrequencyBandwidth' field.
   */
  public java.lang.Float getTransmitFrequencyBandwidth() {
    return transmitFrequencyBandwidth;
  }

  /**
   * Sets the value of the 'transmitFrequencyBandwidth' field.
   * @param value the value to set.
   */
  public void setTransmitFrequencyBandwidth(java.lang.Float value) {
    this.transmitFrequencyBandwidth = value;
  }

  /**
   * Gets the value of the 'power' field.
   */
  public java.lang.Float getPower() {
    return power;
  }

  /**
   * Sets the value of the 'power' field.
   * @param value the value to set.
   */
  public void setPower(java.lang.Float value) {
    this.power = value;
  }

  /**
   * Gets the value of the 'modulationType' field.
   */
  public com.cohesionforce.dis.avro.ModulationType getModulationType() {
    return modulationType;
  }

  /**
   * Sets the value of the 'modulationType' field.
   * @param value the value to set.
   */
  public void setModulationType(com.cohesionforce.dis.avro.ModulationType value) {
    this.modulationType = value;
  }

  /**
   * Gets the value of the 'cryptoSystem' field.
   */
  public java.lang.Integer getCryptoSystem() {
    return cryptoSystem;
  }

  /**
   * Sets the value of the 'cryptoSystem' field.
   * @param value the value to set.
   */
  public void setCryptoSystem(java.lang.Integer value) {
    this.cryptoSystem = value;
  }

  /**
   * Gets the value of the 'cryptoKeyId' field.
   */
  public java.lang.Integer getCryptoKeyId() {
    return cryptoKeyId;
  }

  /**
   * Sets the value of the 'cryptoKeyId' field.
   * @param value the value to set.
   */
  public void setCryptoKeyId(java.lang.Integer value) {
    this.cryptoKeyId = value;
  }

  /**
   * Gets the value of the 'numberOfModulationParametersList' field.
   */
  public java.lang.Integer getNumberOfModulationParametersList() {
    return numberOfModulationParametersList;
  }

  /**
   * Sets the value of the 'numberOfModulationParametersList' field.
   * @param value the value to set.
   */
  public void setNumberOfModulationParametersList(java.lang.Integer value) {
    this.numberOfModulationParametersList = value;
  }

  /**
   * Gets the value of the 'padding2' field.
   */
  public java.lang.Integer getPadding2() {
    return padding2;
  }

  /**
   * Sets the value of the 'padding2' field.
   * @param value the value to set.
   */
  public void setPadding2(java.lang.Integer value) {
    this.padding2 = value;
  }

  /**
   * Gets the value of the 'padding3' field.
   */
  public java.lang.Integer getPadding3() {
    return padding3;
  }

  /**
   * Sets the value of the 'padding3' field.
   * @param value the value to set.
   */
  public void setPadding3(java.lang.Integer value) {
    this.padding3 = value;
  }

  /**
   * Gets the value of the 'modulationParametersList' field.
   */
  public java.util.List<com.cohesionforce.dis.avro.Vector3Float> getModulationParametersList() {
    return modulationParametersList;
  }

  /**
   * Sets the value of the 'modulationParametersList' field.
   * @param value the value to set.
   */
  public void setModulationParametersList(java.util.List<com.cohesionforce.dis.avro.Vector3Float> value) {
    this.modulationParametersList = value;
  }

  /**
   * Gets the value of the 'antennaPatternList' field.
   */
  public java.util.List<com.cohesionforce.dis.avro.Vector3Float> getAntennaPatternList() {
    return antennaPatternList;
  }

  /**
   * Sets the value of the 'antennaPatternList' field.
   * @param value the value to set.
   */
  public void setAntennaPatternList(java.util.List<com.cohesionforce.dis.avro.Vector3Float> value) {
    this.antennaPatternList = value;
  }

  /** Creates a new TransmitterPdu RecordBuilder */
  public static com.cohesionforce.dis.avro.TransmitterPdu.Builder newBuilder() {
    return new com.cohesionforce.dis.avro.TransmitterPdu.Builder();
  }
  
  /** Creates a new TransmitterPdu RecordBuilder by copying an existing Builder */
  public static com.cohesionforce.dis.avro.TransmitterPdu.Builder newBuilder(com.cohesionforce.dis.avro.TransmitterPdu.Builder other) {
    return new com.cohesionforce.dis.avro.TransmitterPdu.Builder(other);
  }
  
  /** Creates a new TransmitterPdu RecordBuilder by copying an existing TransmitterPdu instance */
  public static com.cohesionforce.dis.avro.TransmitterPdu.Builder newBuilder(com.cohesionforce.dis.avro.TransmitterPdu other) {
    return new com.cohesionforce.dis.avro.TransmitterPdu.Builder(other);
  }
  
  /**
   * RecordBuilder for TransmitterPdu instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TransmitterPdu>
    implements org.apache.avro.data.RecordBuilder<TransmitterPdu> {

    private com.cohesionforce.dis.avro.Time_t reception_timestamp;
    private com.cohesionforce.dis.avro.Time_t source_timestamp;
    private int protocolVersion;
    private int exerciseID;
    private int pduType;
    private int protocolFamily;
    private long timestamp;
    private int pduLength;
    private int padding;
    private com.cohesionforce.dis.avro.EntityID entityId;
    private int radioId;
    private com.cohesionforce.dis.avro.RadioEntityType radioEntityType;
    private int transmitState;
    private int inputSource;
    private int padding1;
    private com.cohesionforce.dis.avro.Vector3Double antennaLocation;
    private com.cohesionforce.dis.avro.Vector3Float relativeAntennaLocation;
    private int antennaPatternType;
    private int numberOfAntennaPatternList;
    private long frequency;
    private float transmitFrequencyBandwidth;
    private float power;
    private com.cohesionforce.dis.avro.ModulationType modulationType;
    private int cryptoSystem;
    private int cryptoKeyId;
    private int numberOfModulationParametersList;
    private int padding2;
    private int padding3;
    private java.util.List<com.cohesionforce.dis.avro.Vector3Float> modulationParametersList;
    private java.util.List<com.cohesionforce.dis.avro.Vector3Float> antennaPatternList;

    /** Creates a new Builder */
    private Builder() {
      super(com.cohesionforce.dis.avro.TransmitterPdu.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cohesionforce.dis.avro.TransmitterPdu.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.reception_timestamp)) {
        this.reception_timestamp = data().deepCopy(fields()[0].schema(), other.reception_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_timestamp)) {
        this.source_timestamp = data().deepCopy(fields()[1].schema(), other.source_timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[2].schema(), other.protocolVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exerciseID)) {
        this.exerciseID = data().deepCopy(fields()[3].schema(), other.exerciseID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pduType)) {
        this.pduType = data().deepCopy(fields()[4].schema(), other.pduType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocolFamily)) {
        this.protocolFamily = data().deepCopy(fields()[5].schema(), other.protocolFamily);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pduLength)) {
        this.pduLength = data().deepCopy(fields()[7].schema(), other.pduLength);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.padding)) {
        this.padding = data().deepCopy(fields()[8].schema(), other.padding);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.entityId)) {
        this.entityId = data().deepCopy(fields()[9].schema(), other.entityId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.radioId)) {
        this.radioId = data().deepCopy(fields()[10].schema(), other.radioId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.radioEntityType)) {
        this.radioEntityType = data().deepCopy(fields()[11].schema(), other.radioEntityType);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.transmitState)) {
        this.transmitState = data().deepCopy(fields()[12].schema(), other.transmitState);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.inputSource)) {
        this.inputSource = data().deepCopy(fields()[13].schema(), other.inputSource);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.padding1)) {
        this.padding1 = data().deepCopy(fields()[14].schema(), other.padding1);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.antennaLocation)) {
        this.antennaLocation = data().deepCopy(fields()[15].schema(), other.antennaLocation);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.relativeAntennaLocation)) {
        this.relativeAntennaLocation = data().deepCopy(fields()[16].schema(), other.relativeAntennaLocation);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.antennaPatternType)) {
        this.antennaPatternType = data().deepCopy(fields()[17].schema(), other.antennaPatternType);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.numberOfAntennaPatternList)) {
        this.numberOfAntennaPatternList = data().deepCopy(fields()[18].schema(), other.numberOfAntennaPatternList);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.frequency)) {
        this.frequency = data().deepCopy(fields()[19].schema(), other.frequency);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.transmitFrequencyBandwidth)) {
        this.transmitFrequencyBandwidth = data().deepCopy(fields()[20].schema(), other.transmitFrequencyBandwidth);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.power)) {
        this.power = data().deepCopy(fields()[21].schema(), other.power);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.modulationType)) {
        this.modulationType = data().deepCopy(fields()[22].schema(), other.modulationType);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.cryptoSystem)) {
        this.cryptoSystem = data().deepCopy(fields()[23].schema(), other.cryptoSystem);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.cryptoKeyId)) {
        this.cryptoKeyId = data().deepCopy(fields()[24].schema(), other.cryptoKeyId);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.numberOfModulationParametersList)) {
        this.numberOfModulationParametersList = data().deepCopy(fields()[25].schema(), other.numberOfModulationParametersList);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.padding2)) {
        this.padding2 = data().deepCopy(fields()[26].schema(), other.padding2);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.padding3)) {
        this.padding3 = data().deepCopy(fields()[27].schema(), other.padding3);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.modulationParametersList)) {
        this.modulationParametersList = data().deepCopy(fields()[28].schema(), other.modulationParametersList);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.antennaPatternList)) {
        this.antennaPatternList = data().deepCopy(fields()[29].schema(), other.antennaPatternList);
        fieldSetFlags()[29] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TransmitterPdu instance */
    private Builder(com.cohesionforce.dis.avro.TransmitterPdu other) {
            super(com.cohesionforce.dis.avro.TransmitterPdu.SCHEMA$);
      if (isValidValue(fields()[0], other.reception_timestamp)) {
        this.reception_timestamp = data().deepCopy(fields()[0].schema(), other.reception_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_timestamp)) {
        this.source_timestamp = data().deepCopy(fields()[1].schema(), other.source_timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[2].schema(), other.protocolVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exerciseID)) {
        this.exerciseID = data().deepCopy(fields()[3].schema(), other.exerciseID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pduType)) {
        this.pduType = data().deepCopy(fields()[4].schema(), other.pduType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocolFamily)) {
        this.protocolFamily = data().deepCopy(fields()[5].schema(), other.protocolFamily);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pduLength)) {
        this.pduLength = data().deepCopy(fields()[7].schema(), other.pduLength);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.padding)) {
        this.padding = data().deepCopy(fields()[8].schema(), other.padding);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.entityId)) {
        this.entityId = data().deepCopy(fields()[9].schema(), other.entityId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.radioId)) {
        this.radioId = data().deepCopy(fields()[10].schema(), other.radioId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.radioEntityType)) {
        this.radioEntityType = data().deepCopy(fields()[11].schema(), other.radioEntityType);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.transmitState)) {
        this.transmitState = data().deepCopy(fields()[12].schema(), other.transmitState);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.inputSource)) {
        this.inputSource = data().deepCopy(fields()[13].schema(), other.inputSource);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.padding1)) {
        this.padding1 = data().deepCopy(fields()[14].schema(), other.padding1);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.antennaLocation)) {
        this.antennaLocation = data().deepCopy(fields()[15].schema(), other.antennaLocation);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.relativeAntennaLocation)) {
        this.relativeAntennaLocation = data().deepCopy(fields()[16].schema(), other.relativeAntennaLocation);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.antennaPatternType)) {
        this.antennaPatternType = data().deepCopy(fields()[17].schema(), other.antennaPatternType);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.numberOfAntennaPatternList)) {
        this.numberOfAntennaPatternList = data().deepCopy(fields()[18].schema(), other.numberOfAntennaPatternList);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.frequency)) {
        this.frequency = data().deepCopy(fields()[19].schema(), other.frequency);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.transmitFrequencyBandwidth)) {
        this.transmitFrequencyBandwidth = data().deepCopy(fields()[20].schema(), other.transmitFrequencyBandwidth);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.power)) {
        this.power = data().deepCopy(fields()[21].schema(), other.power);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.modulationType)) {
        this.modulationType = data().deepCopy(fields()[22].schema(), other.modulationType);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.cryptoSystem)) {
        this.cryptoSystem = data().deepCopy(fields()[23].schema(), other.cryptoSystem);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.cryptoKeyId)) {
        this.cryptoKeyId = data().deepCopy(fields()[24].schema(), other.cryptoKeyId);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.numberOfModulationParametersList)) {
        this.numberOfModulationParametersList = data().deepCopy(fields()[25].schema(), other.numberOfModulationParametersList);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.padding2)) {
        this.padding2 = data().deepCopy(fields()[26].schema(), other.padding2);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.padding3)) {
        this.padding3 = data().deepCopy(fields()[27].schema(), other.padding3);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.modulationParametersList)) {
        this.modulationParametersList = data().deepCopy(fields()[28].schema(), other.modulationParametersList);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.antennaPatternList)) {
        this.antennaPatternList = data().deepCopy(fields()[29].schema(), other.antennaPatternList);
        fieldSetFlags()[29] = true;
      }
    }

    /** Gets the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.Time_t getReceptionTimestamp() {
      return reception_timestamp;
    }
    
    /** Sets the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setReceptionTimestamp(com.cohesionforce.dis.avro.Time_t value) {
      validate(fields()[0], value);
      this.reception_timestamp = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'reception_timestamp' field has been set */
    public boolean hasReceptionTimestamp() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearReceptionTimestamp() {
      reception_timestamp = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.Time_t getSourceTimestamp() {
      return source_timestamp;
    }
    
    /** Sets the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setSourceTimestamp(com.cohesionforce.dis.avro.Time_t value) {
      validate(fields()[1], value);
      this.source_timestamp = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'source_timestamp' field has been set */
    public boolean hasSourceTimestamp() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearSourceTimestamp() {
      source_timestamp = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'protocolVersion' field */
    public java.lang.Integer getProtocolVersion() {
      return protocolVersion;
    }
    
    /** Sets the value of the 'protocolVersion' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setProtocolVersion(int value) {
      validate(fields()[2], value);
      this.protocolVersion = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolVersion' field has been set */
    public boolean hasProtocolVersion() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'protocolVersion' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearProtocolVersion() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'exerciseID' field */
    public java.lang.Integer getExerciseID() {
      return exerciseID;
    }
    
    /** Sets the value of the 'exerciseID' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setExerciseID(int value) {
      validate(fields()[3], value);
      this.exerciseID = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'exerciseID' field has been set */
    public boolean hasExerciseID() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'exerciseID' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearExerciseID() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'pduType' field */
    public java.lang.Integer getPduType() {
      return pduType;
    }
    
    /** Sets the value of the 'pduType' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setPduType(int value) {
      validate(fields()[4], value);
      this.pduType = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'pduType' field has been set */
    public boolean hasPduType() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'pduType' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearPduType() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'protocolFamily' field */
    public java.lang.Integer getProtocolFamily() {
      return protocolFamily;
    }
    
    /** Sets the value of the 'protocolFamily' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setProtocolFamily(int value) {
      validate(fields()[5], value);
      this.protocolFamily = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolFamily' field has been set */
    public boolean hasProtocolFamily() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'protocolFamily' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearProtocolFamily() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setTimestamp(long value) {
      validate(fields()[6], value);
      this.timestamp = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'timestamp' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearTimestamp() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'pduLength' field */
    public java.lang.Integer getPduLength() {
      return pduLength;
    }
    
    /** Sets the value of the 'pduLength' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setPduLength(int value) {
      validate(fields()[7], value);
      this.pduLength = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'pduLength' field has been set */
    public boolean hasPduLength() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'pduLength' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearPduLength() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'padding' field */
    public java.lang.Integer getPadding() {
      return padding;
    }
    
    /** Sets the value of the 'padding' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setPadding(int value) {
      validate(fields()[8], value);
      this.padding = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'padding' field has been set */
    public boolean hasPadding() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'padding' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearPadding() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'entityId' field */
    public com.cohesionforce.dis.avro.EntityID getEntityId() {
      return entityId;
    }
    
    /** Sets the value of the 'entityId' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setEntityId(com.cohesionforce.dis.avro.EntityID value) {
      validate(fields()[9], value);
      this.entityId = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'entityId' field has been set */
    public boolean hasEntityId() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'entityId' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearEntityId() {
      entityId = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'radioId' field */
    public java.lang.Integer getRadioId() {
      return radioId;
    }
    
    /** Sets the value of the 'radioId' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setRadioId(int value) {
      validate(fields()[10], value);
      this.radioId = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'radioId' field has been set */
    public boolean hasRadioId() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'radioId' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearRadioId() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'radioEntityType' field */
    public com.cohesionforce.dis.avro.RadioEntityType getRadioEntityType() {
      return radioEntityType;
    }
    
    /** Sets the value of the 'radioEntityType' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setRadioEntityType(com.cohesionforce.dis.avro.RadioEntityType value) {
      validate(fields()[11], value);
      this.radioEntityType = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'radioEntityType' field has been set */
    public boolean hasRadioEntityType() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'radioEntityType' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearRadioEntityType() {
      radioEntityType = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'transmitState' field */
    public java.lang.Integer getTransmitState() {
      return transmitState;
    }
    
    /** Sets the value of the 'transmitState' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setTransmitState(int value) {
      validate(fields()[12], value);
      this.transmitState = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'transmitState' field has been set */
    public boolean hasTransmitState() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'transmitState' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearTransmitState() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'inputSource' field */
    public java.lang.Integer getInputSource() {
      return inputSource;
    }
    
    /** Sets the value of the 'inputSource' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setInputSource(int value) {
      validate(fields()[13], value);
      this.inputSource = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'inputSource' field has been set */
    public boolean hasInputSource() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'inputSource' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearInputSource() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'padding1' field */
    public java.lang.Integer getPadding1() {
      return padding1;
    }
    
    /** Sets the value of the 'padding1' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setPadding1(int value) {
      validate(fields()[14], value);
      this.padding1 = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'padding1' field has been set */
    public boolean hasPadding1() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'padding1' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearPadding1() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'antennaLocation' field */
    public com.cohesionforce.dis.avro.Vector3Double getAntennaLocation() {
      return antennaLocation;
    }
    
    /** Sets the value of the 'antennaLocation' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setAntennaLocation(com.cohesionforce.dis.avro.Vector3Double value) {
      validate(fields()[15], value);
      this.antennaLocation = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'antennaLocation' field has been set */
    public boolean hasAntennaLocation() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'antennaLocation' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearAntennaLocation() {
      antennaLocation = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'relativeAntennaLocation' field */
    public com.cohesionforce.dis.avro.Vector3Float getRelativeAntennaLocation() {
      return relativeAntennaLocation;
    }
    
    /** Sets the value of the 'relativeAntennaLocation' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setRelativeAntennaLocation(com.cohesionforce.dis.avro.Vector3Float value) {
      validate(fields()[16], value);
      this.relativeAntennaLocation = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'relativeAntennaLocation' field has been set */
    public boolean hasRelativeAntennaLocation() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'relativeAntennaLocation' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearRelativeAntennaLocation() {
      relativeAntennaLocation = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'antennaPatternType' field */
    public java.lang.Integer getAntennaPatternType() {
      return antennaPatternType;
    }
    
    /** Sets the value of the 'antennaPatternType' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setAntennaPatternType(int value) {
      validate(fields()[17], value);
      this.antennaPatternType = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'antennaPatternType' field has been set */
    public boolean hasAntennaPatternType() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'antennaPatternType' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearAntennaPatternType() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'numberOfAntennaPatternList' field */
    public java.lang.Integer getNumberOfAntennaPatternList() {
      return numberOfAntennaPatternList;
    }
    
    /** Sets the value of the 'numberOfAntennaPatternList' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setNumberOfAntennaPatternList(int value) {
      validate(fields()[18], value);
      this.numberOfAntennaPatternList = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'numberOfAntennaPatternList' field has been set */
    public boolean hasNumberOfAntennaPatternList() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'numberOfAntennaPatternList' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearNumberOfAntennaPatternList() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'frequency' field */
    public java.lang.Long getFrequency() {
      return frequency;
    }
    
    /** Sets the value of the 'frequency' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setFrequency(long value) {
      validate(fields()[19], value);
      this.frequency = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'frequency' field has been set */
    public boolean hasFrequency() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'frequency' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearFrequency() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'transmitFrequencyBandwidth' field */
    public java.lang.Float getTransmitFrequencyBandwidth() {
      return transmitFrequencyBandwidth;
    }
    
    /** Sets the value of the 'transmitFrequencyBandwidth' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setTransmitFrequencyBandwidth(float value) {
      validate(fields()[20], value);
      this.transmitFrequencyBandwidth = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'transmitFrequencyBandwidth' field has been set */
    public boolean hasTransmitFrequencyBandwidth() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'transmitFrequencyBandwidth' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearTransmitFrequencyBandwidth() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'power' field */
    public java.lang.Float getPower() {
      return power;
    }
    
    /** Sets the value of the 'power' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setPower(float value) {
      validate(fields()[21], value);
      this.power = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'power' field has been set */
    public boolean hasPower() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'power' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearPower() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'modulationType' field */
    public com.cohesionforce.dis.avro.ModulationType getModulationType() {
      return modulationType;
    }
    
    /** Sets the value of the 'modulationType' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setModulationType(com.cohesionforce.dis.avro.ModulationType value) {
      validate(fields()[22], value);
      this.modulationType = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'modulationType' field has been set */
    public boolean hasModulationType() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'modulationType' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearModulationType() {
      modulationType = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'cryptoSystem' field */
    public java.lang.Integer getCryptoSystem() {
      return cryptoSystem;
    }
    
    /** Sets the value of the 'cryptoSystem' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setCryptoSystem(int value) {
      validate(fields()[23], value);
      this.cryptoSystem = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'cryptoSystem' field has been set */
    public boolean hasCryptoSystem() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'cryptoSystem' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearCryptoSystem() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'cryptoKeyId' field */
    public java.lang.Integer getCryptoKeyId() {
      return cryptoKeyId;
    }
    
    /** Sets the value of the 'cryptoKeyId' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setCryptoKeyId(int value) {
      validate(fields()[24], value);
      this.cryptoKeyId = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'cryptoKeyId' field has been set */
    public boolean hasCryptoKeyId() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'cryptoKeyId' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearCryptoKeyId() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'numberOfModulationParametersList' field */
    public java.lang.Integer getNumberOfModulationParametersList() {
      return numberOfModulationParametersList;
    }
    
    /** Sets the value of the 'numberOfModulationParametersList' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setNumberOfModulationParametersList(int value) {
      validate(fields()[25], value);
      this.numberOfModulationParametersList = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'numberOfModulationParametersList' field has been set */
    public boolean hasNumberOfModulationParametersList() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'numberOfModulationParametersList' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearNumberOfModulationParametersList() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'padding2' field */
    public java.lang.Integer getPadding2() {
      return padding2;
    }
    
    /** Sets the value of the 'padding2' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setPadding2(int value) {
      validate(fields()[26], value);
      this.padding2 = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'padding2' field has been set */
    public boolean hasPadding2() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'padding2' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearPadding2() {
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'padding3' field */
    public java.lang.Integer getPadding3() {
      return padding3;
    }
    
    /** Sets the value of the 'padding3' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setPadding3(int value) {
      validate(fields()[27], value);
      this.padding3 = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'padding3' field has been set */
    public boolean hasPadding3() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'padding3' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearPadding3() {
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'modulationParametersList' field */
    public java.util.List<com.cohesionforce.dis.avro.Vector3Float> getModulationParametersList() {
      return modulationParametersList;
    }
    
    /** Sets the value of the 'modulationParametersList' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setModulationParametersList(java.util.List<com.cohesionforce.dis.avro.Vector3Float> value) {
      validate(fields()[28], value);
      this.modulationParametersList = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'modulationParametersList' field has been set */
    public boolean hasModulationParametersList() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'modulationParametersList' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearModulationParametersList() {
      modulationParametersList = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'antennaPatternList' field */
    public java.util.List<com.cohesionforce.dis.avro.Vector3Float> getAntennaPatternList() {
      return antennaPatternList;
    }
    
    /** Sets the value of the 'antennaPatternList' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder setAntennaPatternList(java.util.List<com.cohesionforce.dis.avro.Vector3Float> value) {
      validate(fields()[29], value);
      this.antennaPatternList = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'antennaPatternList' field has been set */
    public boolean hasAntennaPatternList() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'antennaPatternList' field */
    public com.cohesionforce.dis.avro.TransmitterPdu.Builder clearAntennaPatternList() {
      antennaPatternList = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    @Override
    public TransmitterPdu build() {
      try {
        TransmitterPdu record = new TransmitterPdu();
        record.reception_timestamp = fieldSetFlags()[0] ? this.reception_timestamp : (com.cohesionforce.dis.avro.Time_t) defaultValue(fields()[0]);
        record.source_timestamp = fieldSetFlags()[1] ? this.source_timestamp : (com.cohesionforce.dis.avro.Time_t) defaultValue(fields()[1]);
        record.protocolVersion = fieldSetFlags()[2] ? this.protocolVersion : (java.lang.Integer) defaultValue(fields()[2]);
        record.exerciseID = fieldSetFlags()[3] ? this.exerciseID : (java.lang.Integer) defaultValue(fields()[3]);
        record.pduType = fieldSetFlags()[4] ? this.pduType : (java.lang.Integer) defaultValue(fields()[4]);
        record.protocolFamily = fieldSetFlags()[5] ? this.protocolFamily : (java.lang.Integer) defaultValue(fields()[5]);
        record.timestamp = fieldSetFlags()[6] ? this.timestamp : (java.lang.Long) defaultValue(fields()[6]);
        record.pduLength = fieldSetFlags()[7] ? this.pduLength : (java.lang.Integer) defaultValue(fields()[7]);
        record.padding = fieldSetFlags()[8] ? this.padding : (java.lang.Integer) defaultValue(fields()[8]);
        record.entityId = fieldSetFlags()[9] ? this.entityId : (com.cohesionforce.dis.avro.EntityID) defaultValue(fields()[9]);
        record.radioId = fieldSetFlags()[10] ? this.radioId : (java.lang.Integer) defaultValue(fields()[10]);
        record.radioEntityType = fieldSetFlags()[11] ? this.radioEntityType : (com.cohesionforce.dis.avro.RadioEntityType) defaultValue(fields()[11]);
        record.transmitState = fieldSetFlags()[12] ? this.transmitState : (java.lang.Integer) defaultValue(fields()[12]);
        record.inputSource = fieldSetFlags()[13] ? this.inputSource : (java.lang.Integer) defaultValue(fields()[13]);
        record.padding1 = fieldSetFlags()[14] ? this.padding1 : (java.lang.Integer) defaultValue(fields()[14]);
        record.antennaLocation = fieldSetFlags()[15] ? this.antennaLocation : (com.cohesionforce.dis.avro.Vector3Double) defaultValue(fields()[15]);
        record.relativeAntennaLocation = fieldSetFlags()[16] ? this.relativeAntennaLocation : (com.cohesionforce.dis.avro.Vector3Float) defaultValue(fields()[16]);
        record.antennaPatternType = fieldSetFlags()[17] ? this.antennaPatternType : (java.lang.Integer) defaultValue(fields()[17]);
        record.numberOfAntennaPatternList = fieldSetFlags()[18] ? this.numberOfAntennaPatternList : (java.lang.Integer) defaultValue(fields()[18]);
        record.frequency = fieldSetFlags()[19] ? this.frequency : (java.lang.Long) defaultValue(fields()[19]);
        record.transmitFrequencyBandwidth = fieldSetFlags()[20] ? this.transmitFrequencyBandwidth : (java.lang.Float) defaultValue(fields()[20]);
        record.power = fieldSetFlags()[21] ? this.power : (java.lang.Float) defaultValue(fields()[21]);
        record.modulationType = fieldSetFlags()[22] ? this.modulationType : (com.cohesionforce.dis.avro.ModulationType) defaultValue(fields()[22]);
        record.cryptoSystem = fieldSetFlags()[23] ? this.cryptoSystem : (java.lang.Integer) defaultValue(fields()[23]);
        record.cryptoKeyId = fieldSetFlags()[24] ? this.cryptoKeyId : (java.lang.Integer) defaultValue(fields()[24]);
        record.numberOfModulationParametersList = fieldSetFlags()[25] ? this.numberOfModulationParametersList : (java.lang.Integer) defaultValue(fields()[25]);
        record.padding2 = fieldSetFlags()[26] ? this.padding2 : (java.lang.Integer) defaultValue(fields()[26]);
        record.padding3 = fieldSetFlags()[27] ? this.padding3 : (java.lang.Integer) defaultValue(fields()[27]);
        record.modulationParametersList = fieldSetFlags()[28] ? this.modulationParametersList : (java.util.List<com.cohesionforce.dis.avro.Vector3Float>) defaultValue(fields()[28]);
        record.antennaPatternList = fieldSetFlags()[29] ? this.antennaPatternList : (java.util.List<com.cohesionforce.dis.avro.Vector3Float>) defaultValue(fields()[29]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
