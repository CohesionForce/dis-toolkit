/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cohesionforce.dis.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class GriddedDataPdu extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GriddedDataPdu\",\"namespace\":\"com.cohesionforce.dis.avro\",\"fields\":[{\"name\":\"reception_timestamp\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Time_t\",\"fields\":[{\"name\":\"sec\",\"type\":\"int\"},{\"name\":\"nanosec\",\"type\":\"int\"}]}]},{\"name\":\"source_timestamp\",\"type\":[\"null\",\"Time_t\"]},{\"name\":\"protocolVersion\",\"type\":\"int\"},{\"name\":\"exerciseID\",\"type\":\"int\"},{\"name\":\"pduType\",\"type\":\"int\"},{\"name\":\"protocolFamily\",\"type\":\"int\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"pduLength\",\"type\":\"int\"},{\"name\":\"padding\",\"type\":\"int\"},{\"name\":\"environmentalSimulationApplicationID\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EntityID\",\"fields\":[{\"name\":\"site\",\"type\":\"int\"},{\"name\":\"application\",\"type\":\"int\"},{\"name\":\"entity\",\"type\":\"int\"}]}]},{\"name\":\"fieldNumber\",\"type\":\"int\"},{\"name\":\"pduNumber\",\"type\":\"int\"},{\"name\":\"pduTotal\",\"type\":\"int\"},{\"name\":\"coordinateSystem\",\"type\":\"int\"},{\"name\":\"numberOfGridDataList\",\"type\":\"int\"},{\"name\":\"constantGrid\",\"type\":\"int\"},{\"name\":\"environmentType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EntityType\",\"fields\":[{\"name\":\"entityKind\",\"type\":\"int\"},{\"name\":\"domain\",\"type\":\"int\"},{\"name\":\"country\",\"type\":\"int\"},{\"name\":\"category\",\"type\":\"int\"},{\"name\":\"subcategory\",\"type\":\"int\"},{\"name\":\"spec\",\"type\":\"int\"},{\"name\":\"extra\",\"type\":\"int\"}]}]},{\"name\":\"orientation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Orientation\",\"fields\":[{\"name\":\"psi\",\"type\":\"float\"},{\"name\":\"theta\",\"type\":\"float\"},{\"name\":\"phi\",\"type\":\"float\"}]}]},{\"name\":\"sampleTime\",\"type\":\"long\"},{\"name\":\"totalValues\",\"type\":\"long\"},{\"name\":\"vectorDimension\",\"type\":\"int\"},{\"name\":\"padding1\",\"type\":\"int\"},{\"name\":\"padding2\",\"type\":\"int\"},{\"name\":\"gridDataList\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GridAxis\",\"fields\":[{\"name\":\"domainInitialXi\",\"type\":\"double\"},{\"name\":\"domainFinalXi\",\"type\":\"double\"},{\"name\":\"domainPointsXi\",\"type\":\"int\"},{\"name\":\"interleafFactor\",\"type\":\"int\"},{\"name\":\"axisType\",\"type\":\"int\"},{\"name\":\"numberOfPointsOnXiAxis\",\"type\":\"int\"},{\"name\":\"initialIndex\",\"type\":\"int\"}]}}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.cohesionforce.dis.avro.Time_t reception_timestamp;
  @Deprecated public com.cohesionforce.dis.avro.Time_t source_timestamp;
  @Deprecated public int protocolVersion;
  @Deprecated public int exerciseID;
  @Deprecated public int pduType;
  @Deprecated public int protocolFamily;
  @Deprecated public long timestamp;
  @Deprecated public int pduLength;
  @Deprecated public int padding;
  @Deprecated public com.cohesionforce.dis.avro.EntityID environmentalSimulationApplicationID;
  @Deprecated public int fieldNumber;
  @Deprecated public int pduNumber;
  @Deprecated public int pduTotal;
  @Deprecated public int coordinateSystem;
  @Deprecated public int numberOfGridDataList;
  @Deprecated public int constantGrid;
  @Deprecated public com.cohesionforce.dis.avro.EntityType environmentType;
  @Deprecated public com.cohesionforce.dis.avro.Orientation orientation;
  @Deprecated public long sampleTime;
  @Deprecated public long totalValues;
  @Deprecated public int vectorDimension;
  @Deprecated public int padding1;
  @Deprecated public int padding2;
  @Deprecated public java.util.List<com.cohesionforce.dis.avro.GridAxis> gridDataList;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public GriddedDataPdu() {}

  /**
   * All-args constructor.
   */
  public GriddedDataPdu(com.cohesionforce.dis.avro.Time_t reception_timestamp, com.cohesionforce.dis.avro.Time_t source_timestamp, java.lang.Integer protocolVersion, java.lang.Integer exerciseID, java.lang.Integer pduType, java.lang.Integer protocolFamily, java.lang.Long timestamp, java.lang.Integer pduLength, java.lang.Integer padding, com.cohesionforce.dis.avro.EntityID environmentalSimulationApplicationID, java.lang.Integer fieldNumber, java.lang.Integer pduNumber, java.lang.Integer pduTotal, java.lang.Integer coordinateSystem, java.lang.Integer numberOfGridDataList, java.lang.Integer constantGrid, com.cohesionforce.dis.avro.EntityType environmentType, com.cohesionforce.dis.avro.Orientation orientation, java.lang.Long sampleTime, java.lang.Long totalValues, java.lang.Integer vectorDimension, java.lang.Integer padding1, java.lang.Integer padding2, java.util.List<com.cohesionforce.dis.avro.GridAxis> gridDataList) {
    this.reception_timestamp = reception_timestamp;
    this.source_timestamp = source_timestamp;
    this.protocolVersion = protocolVersion;
    this.exerciseID = exerciseID;
    this.pduType = pduType;
    this.protocolFamily = protocolFamily;
    this.timestamp = timestamp;
    this.pduLength = pduLength;
    this.padding = padding;
    this.environmentalSimulationApplicationID = environmentalSimulationApplicationID;
    this.fieldNumber = fieldNumber;
    this.pduNumber = pduNumber;
    this.pduTotal = pduTotal;
    this.coordinateSystem = coordinateSystem;
    this.numberOfGridDataList = numberOfGridDataList;
    this.constantGrid = constantGrid;
    this.environmentType = environmentType;
    this.orientation = orientation;
    this.sampleTime = sampleTime;
    this.totalValues = totalValues;
    this.vectorDimension = vectorDimension;
    this.padding1 = padding1;
    this.padding2 = padding2;
    this.gridDataList = gridDataList;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return reception_timestamp;
    case 1: return source_timestamp;
    case 2: return protocolVersion;
    case 3: return exerciseID;
    case 4: return pduType;
    case 5: return protocolFamily;
    case 6: return timestamp;
    case 7: return pduLength;
    case 8: return padding;
    case 9: return environmentalSimulationApplicationID;
    case 10: return fieldNumber;
    case 11: return pduNumber;
    case 12: return pduTotal;
    case 13: return coordinateSystem;
    case 14: return numberOfGridDataList;
    case 15: return constantGrid;
    case 16: return environmentType;
    case 17: return orientation;
    case 18: return sampleTime;
    case 19: return totalValues;
    case 20: return vectorDimension;
    case 21: return padding1;
    case 22: return padding2;
    case 23: return gridDataList;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: reception_timestamp = (com.cohesionforce.dis.avro.Time_t)value$; break;
    case 1: source_timestamp = (com.cohesionforce.dis.avro.Time_t)value$; break;
    case 2: protocolVersion = (java.lang.Integer)value$; break;
    case 3: exerciseID = (java.lang.Integer)value$; break;
    case 4: pduType = (java.lang.Integer)value$; break;
    case 5: protocolFamily = (java.lang.Integer)value$; break;
    case 6: timestamp = (java.lang.Long)value$; break;
    case 7: pduLength = (java.lang.Integer)value$; break;
    case 8: padding = (java.lang.Integer)value$; break;
    case 9: environmentalSimulationApplicationID = (com.cohesionforce.dis.avro.EntityID)value$; break;
    case 10: fieldNumber = (java.lang.Integer)value$; break;
    case 11: pduNumber = (java.lang.Integer)value$; break;
    case 12: pduTotal = (java.lang.Integer)value$; break;
    case 13: coordinateSystem = (java.lang.Integer)value$; break;
    case 14: numberOfGridDataList = (java.lang.Integer)value$; break;
    case 15: constantGrid = (java.lang.Integer)value$; break;
    case 16: environmentType = (com.cohesionforce.dis.avro.EntityType)value$; break;
    case 17: orientation = (com.cohesionforce.dis.avro.Orientation)value$; break;
    case 18: sampleTime = (java.lang.Long)value$; break;
    case 19: totalValues = (java.lang.Long)value$; break;
    case 20: vectorDimension = (java.lang.Integer)value$; break;
    case 21: padding1 = (java.lang.Integer)value$; break;
    case 22: padding2 = (java.lang.Integer)value$; break;
    case 23: gridDataList = (java.util.List<com.cohesionforce.dis.avro.GridAxis>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'reception_timestamp' field.
   */
  public com.cohesionforce.dis.avro.Time_t getReceptionTimestamp() {
    return reception_timestamp;
  }

  /**
   * Sets the value of the 'reception_timestamp' field.
   * @param value the value to set.
   */
  public void setReceptionTimestamp(com.cohesionforce.dis.avro.Time_t value) {
    this.reception_timestamp = value;
  }

  /**
   * Gets the value of the 'source_timestamp' field.
   */
  public com.cohesionforce.dis.avro.Time_t getSourceTimestamp() {
    return source_timestamp;
  }

  /**
   * Sets the value of the 'source_timestamp' field.
   * @param value the value to set.
   */
  public void setSourceTimestamp(com.cohesionforce.dis.avro.Time_t value) {
    this.source_timestamp = value;
  }

  /**
   * Gets the value of the 'protocolVersion' field.
   */
  public java.lang.Integer getProtocolVersion() {
    return protocolVersion;
  }

  /**
   * Sets the value of the 'protocolVersion' field.
   * @param value the value to set.
   */
  public void setProtocolVersion(java.lang.Integer value) {
    this.protocolVersion = value;
  }

  /**
   * Gets the value of the 'exerciseID' field.
   */
  public java.lang.Integer getExerciseID() {
    return exerciseID;
  }

  /**
   * Sets the value of the 'exerciseID' field.
   * @param value the value to set.
   */
  public void setExerciseID(java.lang.Integer value) {
    this.exerciseID = value;
  }

  /**
   * Gets the value of the 'pduType' field.
   */
  public java.lang.Integer getPduType() {
    return pduType;
  }

  /**
   * Sets the value of the 'pduType' field.
   * @param value the value to set.
   */
  public void setPduType(java.lang.Integer value) {
    this.pduType = value;
  }

  /**
   * Gets the value of the 'protocolFamily' field.
   */
  public java.lang.Integer getProtocolFamily() {
    return protocolFamily;
  }

  /**
   * Sets the value of the 'protocolFamily' field.
   * @param value the value to set.
   */
  public void setProtocolFamily(java.lang.Integer value) {
    this.protocolFamily = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'pduLength' field.
   */
  public java.lang.Integer getPduLength() {
    return pduLength;
  }

  /**
   * Sets the value of the 'pduLength' field.
   * @param value the value to set.
   */
  public void setPduLength(java.lang.Integer value) {
    this.pduLength = value;
  }

  /**
   * Gets the value of the 'padding' field.
   */
  public java.lang.Integer getPadding() {
    return padding;
  }

  /**
   * Sets the value of the 'padding' field.
   * @param value the value to set.
   */
  public void setPadding(java.lang.Integer value) {
    this.padding = value;
  }

  /**
   * Gets the value of the 'environmentalSimulationApplicationID' field.
   */
  public com.cohesionforce.dis.avro.EntityID getEnvironmentalSimulationApplicationID() {
    return environmentalSimulationApplicationID;
  }

  /**
   * Sets the value of the 'environmentalSimulationApplicationID' field.
   * @param value the value to set.
   */
  public void setEnvironmentalSimulationApplicationID(com.cohesionforce.dis.avro.EntityID value) {
    this.environmentalSimulationApplicationID = value;
  }

  /**
   * Gets the value of the 'fieldNumber' field.
   */
  public java.lang.Integer getFieldNumber() {
    return fieldNumber;
  }

  /**
   * Sets the value of the 'fieldNumber' field.
   * @param value the value to set.
   */
  public void setFieldNumber(java.lang.Integer value) {
    this.fieldNumber = value;
  }

  /**
   * Gets the value of the 'pduNumber' field.
   */
  public java.lang.Integer getPduNumber() {
    return pduNumber;
  }

  /**
   * Sets the value of the 'pduNumber' field.
   * @param value the value to set.
   */
  public void setPduNumber(java.lang.Integer value) {
    this.pduNumber = value;
  }

  /**
   * Gets the value of the 'pduTotal' field.
   */
  public java.lang.Integer getPduTotal() {
    return pduTotal;
  }

  /**
   * Sets the value of the 'pduTotal' field.
   * @param value the value to set.
   */
  public void setPduTotal(java.lang.Integer value) {
    this.pduTotal = value;
  }

  /**
   * Gets the value of the 'coordinateSystem' field.
   */
  public java.lang.Integer getCoordinateSystem() {
    return coordinateSystem;
  }

  /**
   * Sets the value of the 'coordinateSystem' field.
   * @param value the value to set.
   */
  public void setCoordinateSystem(java.lang.Integer value) {
    this.coordinateSystem = value;
  }

  /**
   * Gets the value of the 'numberOfGridDataList' field.
   */
  public java.lang.Integer getNumberOfGridDataList() {
    return numberOfGridDataList;
  }

  /**
   * Sets the value of the 'numberOfGridDataList' field.
   * @param value the value to set.
   */
  public void setNumberOfGridDataList(java.lang.Integer value) {
    this.numberOfGridDataList = value;
  }

  /**
   * Gets the value of the 'constantGrid' field.
   */
  public java.lang.Integer getConstantGrid() {
    return constantGrid;
  }

  /**
   * Sets the value of the 'constantGrid' field.
   * @param value the value to set.
   */
  public void setConstantGrid(java.lang.Integer value) {
    this.constantGrid = value;
  }

  /**
   * Gets the value of the 'environmentType' field.
   */
  public com.cohesionforce.dis.avro.EntityType getEnvironmentType() {
    return environmentType;
  }

  /**
   * Sets the value of the 'environmentType' field.
   * @param value the value to set.
   */
  public void setEnvironmentType(com.cohesionforce.dis.avro.EntityType value) {
    this.environmentType = value;
  }

  /**
   * Gets the value of the 'orientation' field.
   */
  public com.cohesionforce.dis.avro.Orientation getOrientation() {
    return orientation;
  }

  /**
   * Sets the value of the 'orientation' field.
   * @param value the value to set.
   */
  public void setOrientation(com.cohesionforce.dis.avro.Orientation value) {
    this.orientation = value;
  }

  /**
   * Gets the value of the 'sampleTime' field.
   */
  public java.lang.Long getSampleTime() {
    return sampleTime;
  }

  /**
   * Sets the value of the 'sampleTime' field.
   * @param value the value to set.
   */
  public void setSampleTime(java.lang.Long value) {
    this.sampleTime = value;
  }

  /**
   * Gets the value of the 'totalValues' field.
   */
  public java.lang.Long getTotalValues() {
    return totalValues;
  }

  /**
   * Sets the value of the 'totalValues' field.
   * @param value the value to set.
   */
  public void setTotalValues(java.lang.Long value) {
    this.totalValues = value;
  }

  /**
   * Gets the value of the 'vectorDimension' field.
   */
  public java.lang.Integer getVectorDimension() {
    return vectorDimension;
  }

  /**
   * Sets the value of the 'vectorDimension' field.
   * @param value the value to set.
   */
  public void setVectorDimension(java.lang.Integer value) {
    this.vectorDimension = value;
  }

  /**
   * Gets the value of the 'padding1' field.
   */
  public java.lang.Integer getPadding1() {
    return padding1;
  }

  /**
   * Sets the value of the 'padding1' field.
   * @param value the value to set.
   */
  public void setPadding1(java.lang.Integer value) {
    this.padding1 = value;
  }

  /**
   * Gets the value of the 'padding2' field.
   */
  public java.lang.Integer getPadding2() {
    return padding2;
  }

  /**
   * Sets the value of the 'padding2' field.
   * @param value the value to set.
   */
  public void setPadding2(java.lang.Integer value) {
    this.padding2 = value;
  }

  /**
   * Gets the value of the 'gridDataList' field.
   */
  public java.util.List<com.cohesionforce.dis.avro.GridAxis> getGridDataList() {
    return gridDataList;
  }

  /**
   * Sets the value of the 'gridDataList' field.
   * @param value the value to set.
   */
  public void setGridDataList(java.util.List<com.cohesionforce.dis.avro.GridAxis> value) {
    this.gridDataList = value;
  }

  /** Creates a new GriddedDataPdu RecordBuilder */
  public static com.cohesionforce.dis.avro.GriddedDataPdu.Builder newBuilder() {
    return new com.cohesionforce.dis.avro.GriddedDataPdu.Builder();
  }
  
  /** Creates a new GriddedDataPdu RecordBuilder by copying an existing Builder */
  public static com.cohesionforce.dis.avro.GriddedDataPdu.Builder newBuilder(com.cohesionforce.dis.avro.GriddedDataPdu.Builder other) {
    return new com.cohesionforce.dis.avro.GriddedDataPdu.Builder(other);
  }
  
  /** Creates a new GriddedDataPdu RecordBuilder by copying an existing GriddedDataPdu instance */
  public static com.cohesionforce.dis.avro.GriddedDataPdu.Builder newBuilder(com.cohesionforce.dis.avro.GriddedDataPdu other) {
    return new com.cohesionforce.dis.avro.GriddedDataPdu.Builder(other);
  }
  
  /**
   * RecordBuilder for GriddedDataPdu instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GriddedDataPdu>
    implements org.apache.avro.data.RecordBuilder<GriddedDataPdu> {

    private com.cohesionforce.dis.avro.Time_t reception_timestamp;
    private com.cohesionforce.dis.avro.Time_t source_timestamp;
    private int protocolVersion;
    private int exerciseID;
    private int pduType;
    private int protocolFamily;
    private long timestamp;
    private int pduLength;
    private int padding;
    private com.cohesionforce.dis.avro.EntityID environmentalSimulationApplicationID;
    private int fieldNumber;
    private int pduNumber;
    private int pduTotal;
    private int coordinateSystem;
    private int numberOfGridDataList;
    private int constantGrid;
    private com.cohesionforce.dis.avro.EntityType environmentType;
    private com.cohesionforce.dis.avro.Orientation orientation;
    private long sampleTime;
    private long totalValues;
    private int vectorDimension;
    private int padding1;
    private int padding2;
    private java.util.List<com.cohesionforce.dis.avro.GridAxis> gridDataList;

    /** Creates a new Builder */
    private Builder() {
      super(com.cohesionforce.dis.avro.GriddedDataPdu.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cohesionforce.dis.avro.GriddedDataPdu.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.reception_timestamp)) {
        this.reception_timestamp = data().deepCopy(fields()[0].schema(), other.reception_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_timestamp)) {
        this.source_timestamp = data().deepCopy(fields()[1].schema(), other.source_timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[2].schema(), other.protocolVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exerciseID)) {
        this.exerciseID = data().deepCopy(fields()[3].schema(), other.exerciseID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pduType)) {
        this.pduType = data().deepCopy(fields()[4].schema(), other.pduType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocolFamily)) {
        this.protocolFamily = data().deepCopy(fields()[5].schema(), other.protocolFamily);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pduLength)) {
        this.pduLength = data().deepCopy(fields()[7].schema(), other.pduLength);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.padding)) {
        this.padding = data().deepCopy(fields()[8].schema(), other.padding);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.environmentalSimulationApplicationID)) {
        this.environmentalSimulationApplicationID = data().deepCopy(fields()[9].schema(), other.environmentalSimulationApplicationID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.fieldNumber)) {
        this.fieldNumber = data().deepCopy(fields()[10].schema(), other.fieldNumber);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.pduNumber)) {
        this.pduNumber = data().deepCopy(fields()[11].schema(), other.pduNumber);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.pduTotal)) {
        this.pduTotal = data().deepCopy(fields()[12].schema(), other.pduTotal);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.coordinateSystem)) {
        this.coordinateSystem = data().deepCopy(fields()[13].schema(), other.coordinateSystem);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.numberOfGridDataList)) {
        this.numberOfGridDataList = data().deepCopy(fields()[14].schema(), other.numberOfGridDataList);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.constantGrid)) {
        this.constantGrid = data().deepCopy(fields()[15].schema(), other.constantGrid);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.environmentType)) {
        this.environmentType = data().deepCopy(fields()[16].schema(), other.environmentType);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.orientation)) {
        this.orientation = data().deepCopy(fields()[17].schema(), other.orientation);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.sampleTime)) {
        this.sampleTime = data().deepCopy(fields()[18].schema(), other.sampleTime);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.totalValues)) {
        this.totalValues = data().deepCopy(fields()[19].schema(), other.totalValues);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.vectorDimension)) {
        this.vectorDimension = data().deepCopy(fields()[20].schema(), other.vectorDimension);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.padding1)) {
        this.padding1 = data().deepCopy(fields()[21].schema(), other.padding1);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.padding2)) {
        this.padding2 = data().deepCopy(fields()[22].schema(), other.padding2);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.gridDataList)) {
        this.gridDataList = data().deepCopy(fields()[23].schema(), other.gridDataList);
        fieldSetFlags()[23] = true;
      }
    }
    
    /** Creates a Builder by copying an existing GriddedDataPdu instance */
    private Builder(com.cohesionforce.dis.avro.GriddedDataPdu other) {
            super(com.cohesionforce.dis.avro.GriddedDataPdu.SCHEMA$);
      if (isValidValue(fields()[0], other.reception_timestamp)) {
        this.reception_timestamp = data().deepCopy(fields()[0].schema(), other.reception_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_timestamp)) {
        this.source_timestamp = data().deepCopy(fields()[1].schema(), other.source_timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[2].schema(), other.protocolVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exerciseID)) {
        this.exerciseID = data().deepCopy(fields()[3].schema(), other.exerciseID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pduType)) {
        this.pduType = data().deepCopy(fields()[4].schema(), other.pduType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocolFamily)) {
        this.protocolFamily = data().deepCopy(fields()[5].schema(), other.protocolFamily);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pduLength)) {
        this.pduLength = data().deepCopy(fields()[7].schema(), other.pduLength);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.padding)) {
        this.padding = data().deepCopy(fields()[8].schema(), other.padding);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.environmentalSimulationApplicationID)) {
        this.environmentalSimulationApplicationID = data().deepCopy(fields()[9].schema(), other.environmentalSimulationApplicationID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.fieldNumber)) {
        this.fieldNumber = data().deepCopy(fields()[10].schema(), other.fieldNumber);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.pduNumber)) {
        this.pduNumber = data().deepCopy(fields()[11].schema(), other.pduNumber);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.pduTotal)) {
        this.pduTotal = data().deepCopy(fields()[12].schema(), other.pduTotal);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.coordinateSystem)) {
        this.coordinateSystem = data().deepCopy(fields()[13].schema(), other.coordinateSystem);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.numberOfGridDataList)) {
        this.numberOfGridDataList = data().deepCopy(fields()[14].schema(), other.numberOfGridDataList);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.constantGrid)) {
        this.constantGrid = data().deepCopy(fields()[15].schema(), other.constantGrid);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.environmentType)) {
        this.environmentType = data().deepCopy(fields()[16].schema(), other.environmentType);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.orientation)) {
        this.orientation = data().deepCopy(fields()[17].schema(), other.orientation);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.sampleTime)) {
        this.sampleTime = data().deepCopy(fields()[18].schema(), other.sampleTime);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.totalValues)) {
        this.totalValues = data().deepCopy(fields()[19].schema(), other.totalValues);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.vectorDimension)) {
        this.vectorDimension = data().deepCopy(fields()[20].schema(), other.vectorDimension);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.padding1)) {
        this.padding1 = data().deepCopy(fields()[21].schema(), other.padding1);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.padding2)) {
        this.padding2 = data().deepCopy(fields()[22].schema(), other.padding2);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.gridDataList)) {
        this.gridDataList = data().deepCopy(fields()[23].schema(), other.gridDataList);
        fieldSetFlags()[23] = true;
      }
    }

    /** Gets the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.Time_t getReceptionTimestamp() {
      return reception_timestamp;
    }
    
    /** Sets the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setReceptionTimestamp(com.cohesionforce.dis.avro.Time_t value) {
      validate(fields()[0], value);
      this.reception_timestamp = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'reception_timestamp' field has been set */
    public boolean hasReceptionTimestamp() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'reception_timestamp' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearReceptionTimestamp() {
      reception_timestamp = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.Time_t getSourceTimestamp() {
      return source_timestamp;
    }
    
    /** Sets the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setSourceTimestamp(com.cohesionforce.dis.avro.Time_t value) {
      validate(fields()[1], value);
      this.source_timestamp = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'source_timestamp' field has been set */
    public boolean hasSourceTimestamp() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'source_timestamp' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearSourceTimestamp() {
      source_timestamp = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'protocolVersion' field */
    public java.lang.Integer getProtocolVersion() {
      return protocolVersion;
    }
    
    /** Sets the value of the 'protocolVersion' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setProtocolVersion(int value) {
      validate(fields()[2], value);
      this.protocolVersion = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolVersion' field has been set */
    public boolean hasProtocolVersion() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'protocolVersion' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearProtocolVersion() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'exerciseID' field */
    public java.lang.Integer getExerciseID() {
      return exerciseID;
    }
    
    /** Sets the value of the 'exerciseID' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setExerciseID(int value) {
      validate(fields()[3], value);
      this.exerciseID = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'exerciseID' field has been set */
    public boolean hasExerciseID() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'exerciseID' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearExerciseID() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'pduType' field */
    public java.lang.Integer getPduType() {
      return pduType;
    }
    
    /** Sets the value of the 'pduType' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setPduType(int value) {
      validate(fields()[4], value);
      this.pduType = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'pduType' field has been set */
    public boolean hasPduType() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'pduType' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearPduType() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'protocolFamily' field */
    public java.lang.Integer getProtocolFamily() {
      return protocolFamily;
    }
    
    /** Sets the value of the 'protocolFamily' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setProtocolFamily(int value) {
      validate(fields()[5], value);
      this.protocolFamily = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolFamily' field has been set */
    public boolean hasProtocolFamily() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'protocolFamily' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearProtocolFamily() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setTimestamp(long value) {
      validate(fields()[6], value);
      this.timestamp = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'timestamp' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearTimestamp() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'pduLength' field */
    public java.lang.Integer getPduLength() {
      return pduLength;
    }
    
    /** Sets the value of the 'pduLength' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setPduLength(int value) {
      validate(fields()[7], value);
      this.pduLength = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'pduLength' field has been set */
    public boolean hasPduLength() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'pduLength' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearPduLength() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'padding' field */
    public java.lang.Integer getPadding() {
      return padding;
    }
    
    /** Sets the value of the 'padding' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setPadding(int value) {
      validate(fields()[8], value);
      this.padding = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'padding' field has been set */
    public boolean hasPadding() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'padding' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearPadding() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'environmentalSimulationApplicationID' field */
    public com.cohesionforce.dis.avro.EntityID getEnvironmentalSimulationApplicationID() {
      return environmentalSimulationApplicationID;
    }
    
    /** Sets the value of the 'environmentalSimulationApplicationID' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setEnvironmentalSimulationApplicationID(com.cohesionforce.dis.avro.EntityID value) {
      validate(fields()[9], value);
      this.environmentalSimulationApplicationID = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'environmentalSimulationApplicationID' field has been set */
    public boolean hasEnvironmentalSimulationApplicationID() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'environmentalSimulationApplicationID' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearEnvironmentalSimulationApplicationID() {
      environmentalSimulationApplicationID = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'fieldNumber' field */
    public java.lang.Integer getFieldNumber() {
      return fieldNumber;
    }
    
    /** Sets the value of the 'fieldNumber' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setFieldNumber(int value) {
      validate(fields()[10], value);
      this.fieldNumber = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldNumber' field has been set */
    public boolean hasFieldNumber() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'fieldNumber' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearFieldNumber() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'pduNumber' field */
    public java.lang.Integer getPduNumber() {
      return pduNumber;
    }
    
    /** Sets the value of the 'pduNumber' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setPduNumber(int value) {
      validate(fields()[11], value);
      this.pduNumber = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'pduNumber' field has been set */
    public boolean hasPduNumber() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'pduNumber' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearPduNumber() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'pduTotal' field */
    public java.lang.Integer getPduTotal() {
      return pduTotal;
    }
    
    /** Sets the value of the 'pduTotal' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setPduTotal(int value) {
      validate(fields()[12], value);
      this.pduTotal = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'pduTotal' field has been set */
    public boolean hasPduTotal() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'pduTotal' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearPduTotal() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'coordinateSystem' field */
    public java.lang.Integer getCoordinateSystem() {
      return coordinateSystem;
    }
    
    /** Sets the value of the 'coordinateSystem' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setCoordinateSystem(int value) {
      validate(fields()[13], value);
      this.coordinateSystem = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'coordinateSystem' field has been set */
    public boolean hasCoordinateSystem() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'coordinateSystem' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearCoordinateSystem() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'numberOfGridDataList' field */
    public java.lang.Integer getNumberOfGridDataList() {
      return numberOfGridDataList;
    }
    
    /** Sets the value of the 'numberOfGridDataList' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setNumberOfGridDataList(int value) {
      validate(fields()[14], value);
      this.numberOfGridDataList = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'numberOfGridDataList' field has been set */
    public boolean hasNumberOfGridDataList() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'numberOfGridDataList' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearNumberOfGridDataList() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'constantGrid' field */
    public java.lang.Integer getConstantGrid() {
      return constantGrid;
    }
    
    /** Sets the value of the 'constantGrid' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setConstantGrid(int value) {
      validate(fields()[15], value);
      this.constantGrid = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'constantGrid' field has been set */
    public boolean hasConstantGrid() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'constantGrid' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearConstantGrid() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'environmentType' field */
    public com.cohesionforce.dis.avro.EntityType getEnvironmentType() {
      return environmentType;
    }
    
    /** Sets the value of the 'environmentType' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setEnvironmentType(com.cohesionforce.dis.avro.EntityType value) {
      validate(fields()[16], value);
      this.environmentType = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'environmentType' field has been set */
    public boolean hasEnvironmentType() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'environmentType' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearEnvironmentType() {
      environmentType = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'orientation' field */
    public com.cohesionforce.dis.avro.Orientation getOrientation() {
      return orientation;
    }
    
    /** Sets the value of the 'orientation' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setOrientation(com.cohesionforce.dis.avro.Orientation value) {
      validate(fields()[17], value);
      this.orientation = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'orientation' field has been set */
    public boolean hasOrientation() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'orientation' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearOrientation() {
      orientation = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'sampleTime' field */
    public java.lang.Long getSampleTime() {
      return sampleTime;
    }
    
    /** Sets the value of the 'sampleTime' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setSampleTime(long value) {
      validate(fields()[18], value);
      this.sampleTime = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'sampleTime' field has been set */
    public boolean hasSampleTime() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'sampleTime' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearSampleTime() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'totalValues' field */
    public java.lang.Long getTotalValues() {
      return totalValues;
    }
    
    /** Sets the value of the 'totalValues' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setTotalValues(long value) {
      validate(fields()[19], value);
      this.totalValues = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'totalValues' field has been set */
    public boolean hasTotalValues() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'totalValues' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearTotalValues() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'vectorDimension' field */
    public java.lang.Integer getVectorDimension() {
      return vectorDimension;
    }
    
    /** Sets the value of the 'vectorDimension' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setVectorDimension(int value) {
      validate(fields()[20], value);
      this.vectorDimension = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'vectorDimension' field has been set */
    public boolean hasVectorDimension() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'vectorDimension' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearVectorDimension() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'padding1' field */
    public java.lang.Integer getPadding1() {
      return padding1;
    }
    
    /** Sets the value of the 'padding1' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setPadding1(int value) {
      validate(fields()[21], value);
      this.padding1 = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'padding1' field has been set */
    public boolean hasPadding1() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'padding1' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearPadding1() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'padding2' field */
    public java.lang.Integer getPadding2() {
      return padding2;
    }
    
    /** Sets the value of the 'padding2' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setPadding2(int value) {
      validate(fields()[22], value);
      this.padding2 = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'padding2' field has been set */
    public boolean hasPadding2() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'padding2' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearPadding2() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'gridDataList' field */
    public java.util.List<com.cohesionforce.dis.avro.GridAxis> getGridDataList() {
      return gridDataList;
    }
    
    /** Sets the value of the 'gridDataList' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder setGridDataList(java.util.List<com.cohesionforce.dis.avro.GridAxis> value) {
      validate(fields()[23], value);
      this.gridDataList = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'gridDataList' field has been set */
    public boolean hasGridDataList() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'gridDataList' field */
    public com.cohesionforce.dis.avro.GriddedDataPdu.Builder clearGridDataList() {
      gridDataList = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    @Override
    public GriddedDataPdu build() {
      try {
        GriddedDataPdu record = new GriddedDataPdu();
        record.reception_timestamp = fieldSetFlags()[0] ? this.reception_timestamp : (com.cohesionforce.dis.avro.Time_t) defaultValue(fields()[0]);
        record.source_timestamp = fieldSetFlags()[1] ? this.source_timestamp : (com.cohesionforce.dis.avro.Time_t) defaultValue(fields()[1]);
        record.protocolVersion = fieldSetFlags()[2] ? this.protocolVersion : (java.lang.Integer) defaultValue(fields()[2]);
        record.exerciseID = fieldSetFlags()[3] ? this.exerciseID : (java.lang.Integer) defaultValue(fields()[3]);
        record.pduType = fieldSetFlags()[4] ? this.pduType : (java.lang.Integer) defaultValue(fields()[4]);
        record.protocolFamily = fieldSetFlags()[5] ? this.protocolFamily : (java.lang.Integer) defaultValue(fields()[5]);
        record.timestamp = fieldSetFlags()[6] ? this.timestamp : (java.lang.Long) defaultValue(fields()[6]);
        record.pduLength = fieldSetFlags()[7] ? this.pduLength : (java.lang.Integer) defaultValue(fields()[7]);
        record.padding = fieldSetFlags()[8] ? this.padding : (java.lang.Integer) defaultValue(fields()[8]);
        record.environmentalSimulationApplicationID = fieldSetFlags()[9] ? this.environmentalSimulationApplicationID : (com.cohesionforce.dis.avro.EntityID) defaultValue(fields()[9]);
        record.fieldNumber = fieldSetFlags()[10] ? this.fieldNumber : (java.lang.Integer) defaultValue(fields()[10]);
        record.pduNumber = fieldSetFlags()[11] ? this.pduNumber : (java.lang.Integer) defaultValue(fields()[11]);
        record.pduTotal = fieldSetFlags()[12] ? this.pduTotal : (java.lang.Integer) defaultValue(fields()[12]);
        record.coordinateSystem = fieldSetFlags()[13] ? this.coordinateSystem : (java.lang.Integer) defaultValue(fields()[13]);
        record.numberOfGridDataList = fieldSetFlags()[14] ? this.numberOfGridDataList : (java.lang.Integer) defaultValue(fields()[14]);
        record.constantGrid = fieldSetFlags()[15] ? this.constantGrid : (java.lang.Integer) defaultValue(fields()[15]);
        record.environmentType = fieldSetFlags()[16] ? this.environmentType : (com.cohesionforce.dis.avro.EntityType) defaultValue(fields()[16]);
        record.orientation = fieldSetFlags()[17] ? this.orientation : (com.cohesionforce.dis.avro.Orientation) defaultValue(fields()[17]);
        record.sampleTime = fieldSetFlags()[18] ? this.sampleTime : (java.lang.Long) defaultValue(fields()[18]);
        record.totalValues = fieldSetFlags()[19] ? this.totalValues : (java.lang.Long) defaultValue(fields()[19]);
        record.vectorDimension = fieldSetFlags()[20] ? this.vectorDimension : (java.lang.Integer) defaultValue(fields()[20]);
        record.padding1 = fieldSetFlags()[21] ? this.padding1 : (java.lang.Integer) defaultValue(fields()[21]);
        record.padding2 = fieldSetFlags()[22] ? this.padding2 : (java.lang.Integer) defaultValue(fields()[22]);
        record.gridDataList = fieldSetFlags()[23] ? this.gridDataList : (java.util.List<com.cohesionforce.dis.avro.GridAxis>) defaultValue(fields()[23]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
