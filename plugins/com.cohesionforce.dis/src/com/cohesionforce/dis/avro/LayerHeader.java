/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cohesionforce.dis.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LayerHeader extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LayerHeader\",\"namespace\":\"com.cohesionforce.dis.avro\",\"fields\":[{\"name\":\"layerNumber\",\"type\":\"int\"},{\"name\":\"layerSpecificInformaiton\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int layerNumber;
  @Deprecated public int layerSpecificInformaiton;
  @Deprecated public int length;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public LayerHeader() {}

  /**
   * All-args constructor.
   */
  public LayerHeader(java.lang.Integer layerNumber, java.lang.Integer layerSpecificInformaiton, java.lang.Integer length) {
    this.layerNumber = layerNumber;
    this.layerSpecificInformaiton = layerSpecificInformaiton;
    this.length = length;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return layerNumber;
    case 1: return layerSpecificInformaiton;
    case 2: return length;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: layerNumber = (java.lang.Integer)value$; break;
    case 1: layerSpecificInformaiton = (java.lang.Integer)value$; break;
    case 2: length = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'layerNumber' field.
   */
  public java.lang.Integer getLayerNumber() {
    return layerNumber;
  }

  /**
   * Sets the value of the 'layerNumber' field.
   * @param value the value to set.
   */
  public void setLayerNumber(java.lang.Integer value) {
    this.layerNumber = value;
  }

  /**
   * Gets the value of the 'layerSpecificInformaiton' field.
   */
  public java.lang.Integer getLayerSpecificInformaiton() {
    return layerSpecificInformaiton;
  }

  /**
   * Sets the value of the 'layerSpecificInformaiton' field.
   * @param value the value to set.
   */
  public void setLayerSpecificInformaiton(java.lang.Integer value) {
    this.layerSpecificInformaiton = value;
  }

  /**
   * Gets the value of the 'length' field.
   */
  public java.lang.Integer getLength() {
    return length;
  }

  /**
   * Sets the value of the 'length' field.
   * @param value the value to set.
   */
  public void setLength(java.lang.Integer value) {
    this.length = value;
  }

  /** Creates a new LayerHeader RecordBuilder */
  public static com.cohesionforce.dis.avro.LayerHeader.Builder newBuilder() {
    return new com.cohesionforce.dis.avro.LayerHeader.Builder();
  }
  
  /** Creates a new LayerHeader RecordBuilder by copying an existing Builder */
  public static com.cohesionforce.dis.avro.LayerHeader.Builder newBuilder(com.cohesionforce.dis.avro.LayerHeader.Builder other) {
    return new com.cohesionforce.dis.avro.LayerHeader.Builder(other);
  }
  
  /** Creates a new LayerHeader RecordBuilder by copying an existing LayerHeader instance */
  public static com.cohesionforce.dis.avro.LayerHeader.Builder newBuilder(com.cohesionforce.dis.avro.LayerHeader other) {
    return new com.cohesionforce.dis.avro.LayerHeader.Builder(other);
  }
  
  /**
   * RecordBuilder for LayerHeader instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LayerHeader>
    implements org.apache.avro.data.RecordBuilder<LayerHeader> {

    private int layerNumber;
    private int layerSpecificInformaiton;
    private int length;

    /** Creates a new Builder */
    private Builder() {
      super(com.cohesionforce.dis.avro.LayerHeader.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cohesionforce.dis.avro.LayerHeader.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.layerNumber)) {
        this.layerNumber = data().deepCopy(fields()[0].schema(), other.layerNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.layerSpecificInformaiton)) {
        this.layerSpecificInformaiton = data().deepCopy(fields()[1].schema(), other.layerSpecificInformaiton);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.length)) {
        this.length = data().deepCopy(fields()[2].schema(), other.length);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing LayerHeader instance */
    private Builder(com.cohesionforce.dis.avro.LayerHeader other) {
            super(com.cohesionforce.dis.avro.LayerHeader.SCHEMA$);
      if (isValidValue(fields()[0], other.layerNumber)) {
        this.layerNumber = data().deepCopy(fields()[0].schema(), other.layerNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.layerSpecificInformaiton)) {
        this.layerSpecificInformaiton = data().deepCopy(fields()[1].schema(), other.layerSpecificInformaiton);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.length)) {
        this.length = data().deepCopy(fields()[2].schema(), other.length);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'layerNumber' field */
    public java.lang.Integer getLayerNumber() {
      return layerNumber;
    }
    
    /** Sets the value of the 'layerNumber' field */
    public com.cohesionforce.dis.avro.LayerHeader.Builder setLayerNumber(int value) {
      validate(fields()[0], value);
      this.layerNumber = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'layerNumber' field has been set */
    public boolean hasLayerNumber() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'layerNumber' field */
    public com.cohesionforce.dis.avro.LayerHeader.Builder clearLayerNumber() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'layerSpecificInformaiton' field */
    public java.lang.Integer getLayerSpecificInformaiton() {
      return layerSpecificInformaiton;
    }
    
    /** Sets the value of the 'layerSpecificInformaiton' field */
    public com.cohesionforce.dis.avro.LayerHeader.Builder setLayerSpecificInformaiton(int value) {
      validate(fields()[1], value);
      this.layerSpecificInformaiton = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'layerSpecificInformaiton' field has been set */
    public boolean hasLayerSpecificInformaiton() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'layerSpecificInformaiton' field */
    public com.cohesionforce.dis.avro.LayerHeader.Builder clearLayerSpecificInformaiton() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'length' field */
    public java.lang.Integer getLength() {
      return length;
    }
    
    /** Sets the value of the 'length' field */
    public com.cohesionforce.dis.avro.LayerHeader.Builder setLength(int value) {
      validate(fields()[2], value);
      this.length = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'length' field has been set */
    public boolean hasLength() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'length' field */
    public com.cohesionforce.dis.avro.LayerHeader.Builder clearLength() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public LayerHeader build() {
      try {
        LayerHeader record = new LayerHeader();
        record.layerNumber = fieldSetFlags()[0] ? this.layerNumber : (java.lang.Integer) defaultValue(fields()[0]);
        record.layerSpecificInformaiton = fieldSetFlags()[1] ? this.layerSpecificInformaiton : (java.lang.Integer) defaultValue(fields()[1]);
        record.length = fieldSetFlags()[2] ? this.length : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
